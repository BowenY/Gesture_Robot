!!python/object:LbD.DTWGestureModel.DTWGestureModel
D: 4
_GestureModelBase__gesture_name: wave
_GestureModelBase__meta_tags: [DTW, time_wrapped]
_GestureModelBase__recognition_threshold: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- !!binary |
  UIGlmw804L8=
_loglikelihood_current: 0.0
_loglikelihood_previous: -1.0
gesture: !!python/object:LbD.GestureEntry.GestureEntry
  _GestureEntry__meta_demonstration_names: [wave_1_2011-11-06-18-19-50_subdemochunk_0,
    wave_1_2011-11-06-18-19-50_subdemochunk_1, wave_1_2011-11-06-18-19-50_subdemochunk_2,
    wave_1_2011-11-06-18-19-50_subdemochunk_3, wave_1_2011-11-06-18-19-50_subdemochunk_4,
    wave_1_2011-11-06-18-19-50_subdemochunk_5, wave_1_2011-11-06-18-19-50_subdemochunk_6,
    wave_1_2011-11-06-18-19-50_subdemochunk_7, wave_1_2011-11-06-18-19-50_subdemochunk_8,
    wave_1_2011-11-06-18-19-50_subdemochunk_9, wave_1_2011-11-06-18-19-50_subdemochunk_10,
    wave_1_2011-11-06-18-19-50_subdemochunk_11, wave_1_2011-11-06-18-19-50_subdemochunk_12,
    wave_1_2011-11-06-18-19-50_subdemochunk_13, wave_1_2011-11-06-18-19-50_subdemochunk_14,
    wave_1_2011-11-06-18-19-50_subdemochunk_15, wave_1_2011-11-06-18-19-50_subdemochunk_16,
    wave_1_2011-11-06-18-19-50_subdemochunk_17, wave_1_2011-11-06-18-19-50_subdemochunk_18,
    wave_1_2011-11-06-18-19-50_subdemochunk_19, wave_1_2011-11-06-18-19-50_subdemochunk_20,
    wave_1_2011-11-06-18-19-50_subdemochunk_21, wave_1_2011-11-06-18-19-50_subdemochunk_22,
    wave_1_2011-11-06-18-19-50_subdemochunk_23, wave_1_2011-11-06-18-19-50_subdemochunk_24,
    wave_1_2011-11-06-18-19-50_subdemochunk_25, wave_1_2011-11-06-18-19-50_subdemochunk_26,
    wave_1_2011-11-06-18-19-50_subdemochunk_27]
  _GestureEntry__meta_demonstrations_count: 28
  _GestureEntry__meta_initial_param_frames:
  - {fixed: /left_shoulder_1, position: '', rotation: p, target: /left_elbow_1}
  - {fixed: /neck_1, position: '', rotation: rpy, target: /left_shoulder_1}
  _GestureEntry__meta_max_start_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - "\0\0\0\0\0\0\0\0"
  _GestureEntry__meta_min_count_per_demo: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
  _GestureEntry__meta_min_end_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
  - !!python/object/apply:numpy.dtype
    args: [f8, 0, 1]
    state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
  - !!binary |
    kML1KFyPCkA=
  _GestureEntry__meta_num_vars: 4
  _GestureEntry__meta_sampling_frequency: 50
  _GestureEntry__meta_temporal_info:
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  - - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
    - end_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
      max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        gBSuR+F6lD8=
      sampling_count: 167
      sampling_period: 0.02
      start_time: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - "\0\0\0\0\0\0\0\0"
      time_duration: !!python/object/apply:numpy.core.multiarray.scalar
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - !!binary |
        kML1KFyPCkA=
  _GestureEntry__meta_time_duration: 4.0
  _GestureEntry__name: wave
  _GestureEntry__state: fully_defined
  _GestureEntry__use_time_variable: false
  fixed_frames: [/left_shoulder_1, /neck_1]
  position_variables: ['', '']
  raw_data:
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - &id001 !!python/name:numpy.ndarray ''
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQPn3Uig6ZfA/+fdSKDpl8D/591IoOmXwP/n3Uig6ZfA/
        +fdSKDpl8D/591IoOmXwP/n3Uig6ZfA/+fdSKDpl8D/591IoOmXwP/n3Uig6ZfA/+fdSKDpl8D/5
        91IoOmXwP/n3Uig6ZfA/+fdSKDpl8D/591IoOmXwP/n3Uig6ZfA/+fdSKDpl8D/591IoOmXwP/n3
        Uig6ZfA/+1g9oUGe8D/8uScaSdfwP/4aEpNQEPE//3v8C1hJ8T+HA7bxrHzxP2q7r9Huf/E/TnOp
        sTCD8T8xK6ORcobxPxXjnHG0ifE/+JqWUfaM8T/cUpAxOJDxP8AKihF6k/E/BH/ADe/q8T+sumgs
        OgbzP7aWE5BlCfM/wHK+85AM8z/KTmlXvA/zP9QqFLvnEvM/3ga/HhMW8z8Gtsr3BIfzP+LxYPOm
        kvQ/bTGJpJOV9D/4cLFVgJj0P4Sw2QZtm/Q/D/ABuFme9D+aLyppRqH0PyVvUhozpPQ/sa56yx+n
        9D+Ty63Dw0L1PyYYlxX0bfY//eeIuCG19j/Tt3pbT/z2P6qHbP58Q/c/gVdeoaqK9z9YJ1BE2NH3
        Py/3QecFGfg/vUHH8ctL+D9tSG3HXGP4PxxPE53tevg/zFW5cn6S+D98XF9ID6r4PyxjBR6gwfg/
        22mr8zDZ+D+LcFHJwfD4Pzp3955SCPk/UnOxl4MW+T/PoyXn/xP5P0zUmTZ8Efk/yQQOhvgO+T9H
        NYLVdAz5P8Rl9iTxCfk/iDPlcC8C+T/QGhbJo+X4P28RU/Gdufg/DQiQGZiN+D+t/sxBkmH4P0v1
        CWqMNfg/6utGkoYJ+D9c7zL02vH3P03XZNBk7/c/Pr+WrO7s9z8vp8iIeOr3Px+P+mQC6Pc/EHcs
        QYzl9z8BX14dFuP3P/JGkPmf4Pc/dnRb3syS9j9Kii8fqGz1P3iF9X3yFvU/pYC73DzB9D/Se4E7
        h2v0PwB3R5rRFfQ/LnIN+RvA8z9bbdNXZmrzP2QMLGMPSPM/JVdnmWtA8z/loaLPxzjzP6Xs3QUk
        MfM/ZTcZPIAp8z8lglRy3CHzPzTLDjggRvE/sG5XXhVy8D/FIHc5uGvwP9vSlhRbZfA/8YS27/1e
        8D8HN9bKoFjwPx3p9aVDUvA/M5sVgeZL8D9JTTVciUXwP1rVqGNINOw/ZroXY6iu6j921Tok8gPq
        P4bwXeU7Wek/lguBpoWu6D+mJqRnzwPoP7ZBxygZWec/uaZNauL65j/K4mXf+qfmP9seflQTVeY/
        61qWySsC5j/8lq4+RK/lPwzTxrNcXOU/HQ/fKHUJ5T8pom8MX/7kPz9arM0g+uQ/VBLpjuL15D9q
        yiVQpPHkP4CCYhFm7eQ/lTqf0ifp5D+r8tuT6eTkP8GqGFWr4OQ/qCrT7iTP4z9M6S/4Js3jPzuX
        ieym0+M/KUXj4Cba4z8Y8zzVpuDjPwehlskm5+M/1ssnzYbt4z97Uiq8je7jPyDZLKuU7+M/xV8v
        mpvw4z9q5jGJovHjPw9tNHip8uM/tPM2Z7Dz4z+xLymjBh3kP84ilMP1e+U/OiFTb2qB5T+mHxIb
        34blPxIe0cZTjOU/fRyQcsiR5T/pGk8ePZflP1UZDsqxnOU/XQ3hKtJQ5j//2oyU+gnsPzdXM2rP
        p+w/b9PZP6RF7T+nT4AVeePtP6p7igZHH/I/rlLz8ACx9T8lRWJLurX1P5w30aVzuvU/FCpAAC2/
        9T+LHK9a5sP1PwIPHrWfyPU/eQGND1nN9T/x8/tpEtL1P2xWLNZftPY/BihlJlg4+D8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        IEiSvxzCuwg4XJK/wcryqk9wkr9l0ylNZ4SSvwrcYO9+mJK/8P8eK6y8ir9VBq0NhFWFv0Iy02gW
        zoS/MF75w6hGhL8dih8fO7+Dvwq2RXrNN4O/+OFr1V+wgr/lDZIw8iiCv9Q5uIuEoYG/0EUyR5DH
        fT+CU6HTdMmHP6GaXtNYe4g/wOEb0zwtiT/eKNnSIN+JP/1vltIEkYo/HLdT0uhCiz9McbIb/WCc
        P5PllTos/54/3501Cf1fnz8sVtXXzcCfPzyHOlPPEKA/YmOKujdBoD+JP9ohoHGgP6VGLgag0aU/
        rTgv5ex+pj8NeaFOwqWmP265E7iXzKY/z/mFIW3zpj8wOviKQhqnP5B6avQXQac/8brcXe1npz/Q
        fmWook2sP/Yn9EFcmqw/6iqEkNSzrD/dLRTfTM2sP9AwpC3F5qw/wzM0fD0ArT+3NsTKtRmtP7Ey
        0uPp37E/KihnZxv9sT+jHfzqTBqyPxsTkW5+N7I/lAgm8q9Usj8M/rp14XGyP+gLO0qf1LI/iDnL
        FLgOtT8tahJ3G+m0P9KaWdl+w7Q/eMugO+KdtD8d/OedRXi0P8IsLwCpUrQ/Z112YgwttD8Mjr3E
        bwe0PywIf/LD5LM/9vRNVArbsz/A4Ry2UNGzP4rO6xeXx7M/U7u6ed29sz+kBi1XvfmpPynFGRaV
        2ac/k41sbYHWpz/8Vb/EbdOnP2YeEhxa0Kc/z+Zkc0bNpz85r7fKMsqnP6J3CiIfx6c/yvSAUMh9
        pz/Y1Hbd7wynP+oCo7TgXKc/15xhDq+XzT/XnGEOr5fNP9ecYQ6vl80/15xhDq+XzT/XnGEOr5fN
        P9ecYQ6vl80/15xhDq+XzT/XnGEOr5fNP9ecYQ6vl80/15xhDq+XzT/XnGEOr5fNP9ecYQ6vl80/
        15xhDq+XzT/XnGEOr5fNP9ecYQ6vl80/15xhDq+XzT/XnGEOr5fNP9ecYQ6vl80/15xhDq+XzT+7
        TGuOyp3NP7ng1u1gpM0/tnRCTfeqzT9M2ZDlXbXNP+TwnpRw380//Qc68d/ozT8WH9VNT/LNPy82
        cKq++80/SU0LBy4Fzj9iZKZjnQ7OP3t7QcAMGM4/lJLcHHwhzj84VnONsyjOPxNWXN45KM4/7lVF
        L8Anzj/KVS6ARifOP6VVF9HMJs4/gFUAIlMmzj8JnTWRThHOP7xjKQSf280/0qWGjs3azT/o5+MY
        /NnNP/8pQaMq2c0/FWyeLVnYzT8rrvu3h9fNP0HwWEK21s0/WDK2zOTVzT8/AFnJQDnOP2t/efEc
        9M4/wFYe3Cf6zj8WLsPGMgDPP2wFaLE9Bs8/wdwMnEgMzz8XtLGGUxLPP2yLVnFeGM8/tAQ2ZWxZ
        0D91ir/Z24HRPxBUiqM6nNE/qh1VbZm20T9F5x83+NDRP9+w6gBX69E/enq1yrUF0j8URICUFCDS
        P64NS15zOtI/KDYPZoRM0j8Y4KDJkE/SPweKMi2dUtI/9zPEkKlV0j/m3VX0tVjSP9aH51fCW9I/
        XTC8hDA50j8uJyxIXgrSP3uJ1nCxCNI/x+uAmQQH0j8UTivCVwXSP2Gw1eqqA9I/rhKAE/4B0j8t
        H0EWZqXRP2HDOeZqNdE/vFqIwwkV0T8W8tagqPTQP3CJJX5H1NA/yiB0W+az0D8kuMI4hZPQP39P
        ERYkc9A/2eZf88JS0D/6LwLC80HQP3Ag1SwSPtA/5hColzA60D9cAXsCTzbQP9LxTW1tMtA/SOIg
        2Isu0D8kW7z/fzHQP8Dd57/eMtA/iO2TXR8x0D9Q/T/7Xy/QPxgN7JigLdA/4ByYNuEr0D+oLETU
        ISrQP5oa5lVWbtA/uPo6vduR0D8ZHXobiJXQP3o/uXk0mdA/3GH41+Cc0D89hDc2jaDQP56mdpQ5
        pNA//8i18uWn0D9g6/RQkqvQP2XYB6pEx9E/u1qcf0oV0j+Ipl0mzRvSP1byHs1PItI/Iz7gc9Io
        0j/xiaEaVS/SP77VYsHXNdI/OJkhJVMJ0z/7fIYoYjDTP47xK4iZN9M/IGbR59A+0z+z2nZHCEbT
        P0ZPHKc/TdM/2MPBBndU0z/6OZR1CvXTP8gitvGJCdQ/OODDAGMO1D+ondEPPBPUPxhb3x4VGNQ/
        iBjtLe4c1D/41fo8xyHUP2iTCEygJtQ/ZJ0mWkba1D+OCltugeXUP1ZWW39m6dQ/H6JbkEvt1D/n
        7VuhMPHUP7A5XLIV9dQ/eIVcw/r41D+BWnrqOSnVP6n3lI1fKdU/0pSvMIUp1T/6McrTqinVPyLP
        5HbQKdU/S2z/GfYp1T9qXhGRyB7VP9I/OuAtxNQ/z5ojBmSz1D/L9QwsmqLUP8dQ9lHQkdQ/xKvf
        dwaB1D/ABsmdPHDUP71hssNyX9Q/ubyb6ahO1D/GuzNmYD/UP5M1rNbcPNQ/YK8kR1k61D8tKZ23
        1TfUP/qiFShSNdQ/EUdqQUEE1D9Bnq5pZCfVP9CeDdHwLdU/X59sOH001T/un8ufCTvVP32gKgeW
        QdU/DKGJbiJI1T+boejVrk7VP3OyTZRbBNY/2Ms3ed5i1z8mxUk8dmbXPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        096zP7twM9uR2rM/JD7wqVDWsz+NC614D9KzP/fYaUfOzbM/YKYmFo3Jsz9eV0JRLvyzP46S1wVp
        CbQ/xr5h/tsGtD/+6uv2TgS0PzYXdu/BAbQ/bkMA6DT/sz+nb4rgp/yzP3gzOQy4wbI/oyAXUlGF
        sj9cItal0YayPxYklflRiLI/zyVUTdKJsj+JJxOhUouyP0Ip0vTSjLI//CqRSFOOsj+1LFCc04+y
        P+/D748okLQ/f8ut5s/8tD+aeb92fRq1P7Yn0QYrOLU/0dXilthVtT/tg/QmhnO1PwgyBrczkbU/
        pCB7HVGCuT8ZawSIlhK6PygOUEgKLro/N7GbCH5Juj9GVOfI8WS6P1X3MollgLo/ZJp+Sdmbuj9z
        PcoJTbe6P4LgFcrA0ro/opkqw8j8wD/UP6OtjhvBPwDpqMp7LsE/K5Ku52hBwT9XO7QEVlTBP4Pk
        uSFDZ8E/TZT3+GWKwT8U7lgzSqbDP8KAYI66q8M/cRNo6Sqxwz8gpm9Em7bDP884d58LvMM/fst+
        +nvBwz+NHa2+ucPDPwb5ILh6QMI/Tr/oJCyhwj8lbTSsMRHDP3bi5wAiysM/vByDJOSUxT9+8p6k
        Pp3FP0DIuiSZpcU/Ap7WpPOtxT/Ec/IkTrbFP4ZJDqWovsU/SB8qJQPHxT8L9UWlXc/FP+OJkr7s
        RMY/4IqNG5IBxz+mN8mwUfnGP2zkBEYR8cY/MpFA29Doxj/3PXxwkODGP73qtwVQ2MY/hnwHEGrR
        xj+SNZ4iK8zGP53uNDXsxsY/VXhCAnSl2z9VeEICdKXbP1V4QgJ0pds/VXhCAnSl2z9VeEICdKXb
        P1V4QgJ0pds/VXhCAnSl2z9VeEICdKXbP1V4QgJ0pds/VXhCAnSl2z9VeEICdKXbP1V4QgJ0pds/
        VXhCAnSl2z9VeEICdKXbP1V4QgJ0pds/VXhCAnSl2z9VeEICdKXbP1V4QgJ0pds/VXhCAnSl2z9P
        Bv51EJ/bP0mUuemsmNs/wKmYy5Vj2T/8KfiKggXZPzISgWux+dg/afoJTODt2D+f4pIsD+LYP9XK
        Gw0+1tg/C7Ok7WzK2D/AeX/W8KzYP+qEcI4Ft9U/63NGQeye1T/sYhz00obVP+1R8qa5btU/7kDI
        WaBW1T/vL54Mhz7VP4uJxmML8tQ/MyYyPBWm0T9arKOQl5jRP4AyFeUZi9E/priGOZx90T/NPviN
        HnDRP/PEaeKgYtE/GUvbNiNV0T8/0UyLpUfRP9+g3EivONE//T/t4Tcj0T9m7BynGh/RP8+YTGz9
        GtE/N0V8MeAW0T+g8av2whLRPwie27ulDtE/cUoLgYgK0T+k7ZfeMr/QPzi+EvWags8/pEgDvkZz
        zz8R0/OG8mPPP35d5E+eVM8/6ufUGEpFzz9XcsXh9TXPPzZUPfYaPc8/hbIKbtVlzz8DH/vtfmTP
        P4KL620oY88/APjb7dFhzz9+ZMxte2DPP/3QvO0kX88/ez2tbc5dzz/6qZ3td1zPP3gWjm0hW88/
        wmqzxdbyzz89qmr3iUvQPwsoficHTtA/2aWRV4RQ0D+nI6WHAVPQP3WhuLd+VdA/Qh/M5/tX0D8Q
        nd8XeVrQPwKNi/1AuNA/Q9yrXz8J0T9Ci2DQ4RDRP0A6FUGEGNE/P+nJsSYg0T8+mH4iySfRP6cd
        3t/wU9E/ZKvc6TF10T/FJf3prXfRPyWgHeopetE/hho+6qV80T/mlF7qIX/RP0YPf+qdgdE/p4mf
        6hmE0T8HBMDqlYbRP8hHAeNsmtE/vXbwNhmj0T/MFd9l1aTRP9u0zZSRptE/6VO8w02o0T/48qry
        CarRPweSmSHGq9E//GN833bG0T90sCR4mc7RPyE9n88Yz9E/zskZJ5jP0T97VpR+F9DRPynjDtaW
        0NE/1m+JLRbR0T8llasa/RLSPx1g96CyItI/x0I3nwom0j9wJXedYinSPxoIt5u6LNI/w+r2mRIw
        0j9szTaYajPSPxawdpbCNtI/v5K2lBo60j+W1tpHXsvSP5/JceVx6dI/9nkRhBbx0j9OKrEiu/jS
        P6XaUMFfANM//IrwXwQI0z9TO5D+qA/TP9ajaDKTddM/1VUNFPKB0z9ppH4ETYLTP/3y7/SngtM/
        kUFh5QKD0z8lkNLVXYPTP7neQ8a4g9M/TS21thOE0z/heyanboTTP0KPPnKbjdM/8bAT6ziM0z8q
        ShhRsorTP2TjHLcridM/nXwhHaWH0z/XFSaDHobTP/TgW0thg9M/dscE4PJa0z/V4rI5m1zTPzT+
        YJNDXtM/lBkP7etf0z/zNL1GlGHTP1NQa6A8Y9M/ACAiZg5n0z99fY0YMnLUP/me4ztCrdY/Zrm6
        A3Cq2T9azzF/zaHaPwvioH5e8tw/likKD7UB3T8hcXOfCxHdP6u43C9iIN0/NgBGwLgv3T/BR69Q
        Dz/dP0yPGOFlTt0/19aBcbxd3T/TdXiijBPeP0okxtuXQd8/V3sJGC1X3z9j0kxUwmzfP28pkJBX
        gt8/e4DTzOyX3z+H1xYJgq3fP/DFJalPud8/CAQVUiy53z8gQgT7CLnfPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQHX1srnS//E/dfWyudL/8T919bK50v/xP3X1srnS//E/
        dfWyudL/8T919bK50v/xP3X1srnS//E/dfWyudL/8T919bK50v/xP3X1srnS//E/dfWyudL/8T91
        9bK50v/xP3X1srnS//E/dfWyudL/8T919bK50v/xP3X1srnS//E/dfWyudL/8T919bK50v/xP3X1
        srnS//E/9ct83j2q8T9mV5Xgm3LxP9fireL5OvE/SG7G5FcD8T+5+d7mtcvwPyuF9+gTlPA/nBAQ
        63Fc8D+nCTS+2yjwPxc62wEV6+8/4WBOh3KE7z+qh8EM0B3vP3SuNJItt+4/PdWnF4tQ7j/7iyww
        5OntP47bqfusgu0/Iisnx3Ub7T+1eqSSPrTsP0nKIV4HTew/3RmfKdDl6z9waRz1mH7rPwS5mcBh
        F+s/mAgXjCqw6j9iaCPubFrqP4VfxrnoUuo/qFZphWRL6j/KTQxR4EPqP+1ErxxcPOo/EDxS6Nc0
        6j9KJe5zE6XpP1H+EJe7Reg/XuQt6KBA6D9syko5hjvoP3qwZ4prNug/h5aE21Ax6D+VfKEsNizo
        P8gJSOUl1+c/9I47jtlU5z/PTrYYOELnP6oOMaOWL+c/hM6rLfUc5z9fjia4UwrnPzpOoUKy9+Y/
        FA4czRDl5j/vzZZXb9LmP9gZRwTh1+Y/qDpFwPP15j94W0N8BhTnP0d8QTgZMuc/F50/9CtQ5z/m
        vT2wPm7nP7beO2xRjOc/UDN3Ky/C5z/vJlZc3wboP44aNY2PS+g/Lg4Uvj+Q6D/MAfPu79ToP2v1
        0R+gGek/CumwUFBe6T+q3I+BAKPpP7Je7RZhEuo/RZ58j/KM6j/Y3QsIhAfrP2sdm4AVgus//lwq
        +ab86z+SnLlxOHfsPyXcSOrJ8ew/H+PAvyeZ7T/Gf9YyQEfuP20c7KVY9e4/FLkBGXGj7z/eqgvG
        xCjwPzF5lv/Qf/A/hEchOd3W8D8rrAL8+B7xP8NohYnEZvE/WyUIF5Cu8T/04YqkW/bxP4yeDTIn
        PvI/JFuQv/KF8j+9FxNNvs3yP1XUldqJFfM/9U3FzDQc8z88dg8nGSHzP4OeWYH9JfM/ysaj2+Eq
        8z8S7+01xi/zP+w1j9G6TPM/yHOavphw9T+gBdxAttn1P3eXHcPTQvY/TilfRfGr9j8lu6DHDhX3
        P/xM4kksfvc/oopiB8Hh9z/SR8tl3+f3PwMFNMT97fc/M8KcIhz09z9jfwWBOvr3P5Q8bt9YAPg/
        xPnWPXcG+D/0tj+clQz4P681qNSgI/g/VKHtRqd4+D+R/lRDGUz4P81bvD+LH/g/CrkjPP3y9z9G
        Fos4b8b3P4Jz8jThmfc/v9BZMVNt9z8pe4zTJDX3P8wobPZPFPc/DTtfBC4H9z+QHi8cDv72P2Pc
        DBPB/PY/NprqCXT79j8KWMgAJ/r2P90VpvfZ+PY/sNOD7oz39j+DkWHlP/b2P1dPP9zy9PY/7DJO
        yZkN9z8RrsnoFj73PwEHxBY6Y/c/8l++RF2I9z/juLhygK33P9MRs6Cj0vc/xGqtzsb39z+aQC0i
        Xhf4P1KcTefmMPg/CfhtrG9K+D/BU45x+GP4P3mvrjaBffg/MAvP+wmX+D+tiFIBB6H4P6NA3Jxt
        nPg/mvhlONSX+D+QsO/TOpP4P4ZoeW+hjvg/fSADCwiK+D9z2IymboX4P2mQFkLVgPg/pPKBJ7nj
        9j9O/PvyKZn1P94ffIlPD/U/b0P8H3WF9D//Zny2mvvzP5CK/EzAcfM/IK584+Xn8j8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQCdwi/Wnxvg/J3CL9afG+D8ncIv1p8b4Pydwi/Wnxvg/
        J3CL9afG+D8ncIv1p8b4Pydwi/Wnxvg/J3CL9afG+D8ncIv1p8b4Pydwi/Wnxvg/J3CL9afG+D8n
        cIv1p8b4Pydwi/Wnxvg/J3CL9afG+D8ncIv1p8b4Pydwi/Wnxvg/J3CL9afG+D8ncIv1p8b4Pydw
        i/Wnxvg/ONdVbor/+D+jPFGgUgX5Pw+iTNIaC/k/egdIBOMQ+T/mbEM2qxb5P1HSPmhzHPk/x+kc
        xrRB+j/Jcw3BfF/6PwPfCcIFaPo/PUoGw45w+j94tQLEF3n6P7Ig/8Sggfo/7Yv7xSmK+j+NwPJh
        09f7P1PfQ/Rd3vs/GP6Uhujk+z/eHOYYc+v7P6M7N6v98fs/aFqIPYj4+z8uednPEv/7P/OXKmKd
        Bfw/Pj9E6btT/D8Kky33Ltj9P/zPNkSq4f0/7wxAkSXr/T/hSUneoPT9P9OGUisc/v0/7K9FgjNm
        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
        z8DBP9H2CaP6uME/og0ShCWxwT90JBplUKnBP0U7IkZ7ocE/FlIqJ6aZwT8yotAwAk3BP+O/w9Ch
        R8E/mv3BELxEwT9SO8BQ1kHBPwl5vpDwPsE/qk8rego5wT+uomx0BM7AP7hr7R5jyMA/wjRuycHC
        wD/M/e5zIL3AP9XGbx5/t8A/34/wyN2xwD9yttXJX6zAP8ySckqQqcA/KH2zvOGowD+FZ/QuM6jA
        P+FRNaGEp8A/PTx2E9amwD+aJreFJ6bAP/YQ+Pd4pcA/z9s6LnyxwD/b6iV1/gPBP0NwDOkJCME/
        rPXyXBUMwT8Ue9nQIBDBP3wAwEQsFME/5IWmuDcYwT/qrRF3I3DBP78J7in8ncI/DBtb9Kuywj9Z
        LMi+W8fCP5b0BkRR4MI/bsNiLMEHwz8XYjeSHAjDP8AADPh3CMM/aZ/gXdMIwz8SPrXDLgnDP7zc
        iSmKCcM/ZXtej+UJwz/xxx0KxtHCP5WH31rJiMI/8D7fCIeJwj9L9t62RIrCP6at3mQCi8I/AWXe
        EsCLwj9cHN7AfYzCPxIGEMKboMI/tAJaXguzwj8GdJcNTavCP1jl1LyOo8I/qlYSbNCbwj/7x08b
        EpTCP3gtKWg7w8E/Tkg2SI/3wD8bceHNcfHAP+iZjFNU68A/tcI32TblwD+B6+JeGd/AP04UjuT7
        2MA/Gz05at7SwD8PyGeBMXXAP5yTs9EgOsA/msPZhnU/wD+Y8/87ykTAP5YjJvEeSsA/lFNMpnNP
        wD+Sg3JbyFTAP6PSCog1YcE/eNgix8nr1D942CLHyevUP3jYIsfJ69Q/eNgix8nr1D942CLHyevU
        P3jYIsfJ69Q/eNgix8nr1D942CLHyevUP3jYIsfJ69Q/eNgix8nr1D942CLHyevUP3jYIsfJ69Q/
        eNgix8nr1D942CLHyevUP3jYIsfJ69Q/eNgix8nr1D942CLHyevUP3jYIsfJ69Q/eNgix8nr1D+y
        sAaZMbTUP24bscVEr9Q/KoZb8leq1D/m8AUfa6XUP6JbsEt+oNQ/XsZaeJGb1D/VEEiw75PSP3YY
        SYiXYdI/O6fBQRtV0j8ANjr7nkjSP8XEsrQiPNI/iVMrbqYv0j9O4qMnKiPSPxGo1BF94tA/sgKH
        Ddbb0D9UXTkJL9XQP/a36wSIztA/lxKeAOHH0D85bVD8OcHQP9rHAviSutA/fCK18+uz0D8LbgrS
        H73QP1AbivUKDNE/Sjhd+IAL0T9DVTD79grRPzxyA/5sCtE/No/WAOMJ0T/nNH40IgTRP4eWAs/D
        9tA/XUYrA3T40D809lM3JPrQPwumfGvU+9A/4VWln4T90D+4Bc7TNP/QP0bObytS/dA/ILVEelH5
        0D9+Enp+UPvQP91vr4JP/dA/PM3khk7/0D+aKhqLTQHRP/mHT49MA9E/WOWEk0sF0T+2QrqXSgfR
        P2MK7a14V9E/3HoDaqyr0T+nDs0pGrHRP3KilumHttE/PTZgqfW70T8JyilpY8HRP/l8Jh5w8dE/
        2LCZXUEU0j8RyC6lMRXSP0rfw+whFtI/g/ZYNBIX0j+8De57AhjSP/Ukg8PyGNI/LjwYC+MZ0j9n
        U61S0xrSP2IUIxRdFdI/XNGW414U0j+0YF4bHBXSPwzwJVPZFdI/ZH/tipYW0j+9DrXCUxfSPxWe
        fPoQGNI/T5Z7zbgI0j907i6VJgfSP1/+nxIcCNI/Sw4RkBEJ0j83HoINBwrSPyMu84r8CtI/Dz5k
        CPIL0j/VTocU0ezRP+KQGGqs6tE/tXelg2bp0T+JXjKdIOjRP1xFv7ba5tE/LyxM0JTl0T8DE9np
        TuTRP9b5ZQMJ49E/hY22rRtE0z8RAbidB1jTP1h9CRJWYNM/n/lahqRo0z/mdaz68nDTP81f6PS3
        hNM/0e4juV0a1T/fzxiU+iPVP+6wDW+XLdU//ZECSjQ31T8Lc/ck0UDVPxpU7P9tStU/4QlbSCZv
        1T8Qe5LIk3HXP6fPwR2oftc/PiTxcryL1z/VeCDI0JjXP23NTx3lpdc/BCJ/cvmy1z+bdq7HDcDX
        P+4BjI6hI9g/pa0REipi2j/MsxqPxWzaP/O5Iwxhd9o/GcAsifyB2j9AxjUGmIzaP2bMPoMzl9o/
        0txfRsHx2j/xN1nPuRfcP8cFzon1Ntw/nNNCRDFW3D9yFqu08KXcP41Jh+9WN90/YwQwvMk53T84
        v9iIPDzdPw16gVWvPt0/4jQqIiJB3T+479LulEPdP42qe7sHRt0/359dAWC83D+TSQG9JQXcPwo9
        ZVv//9s/gTDJ+dj62z/4Iy2YsvXbP28XkTaM8Ns/5gr11GXr2z8C+6hb0tbaP5X3Yt0lm9k/qPPO
        A66I2T+77zoqNnbZP87rplC+Y9k/4ecSd0ZR2T8ZeNhfPdbXP6UGJgFtZNY/pW/kl8tU1j+k2KIu
        KkXWP6RBYcWINdY/o6ofXOcl1j+jE97yRRbWP6J8nImkBtY/ddS8XhvI1T8sy4vPEZ7VP8bF+qzX
        l9U/YMBpip2R1T/6uthnY4vVP5S1R0UphdU/LrC2Iu9+1T8eO2lwb4/VPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        2Pw/Thx+WQob/T/fdbYK7Bv9P2/P7rvNHP0/ACknba8d/T+Rgl8ekR79PyLcl89yH/0/53/YjZMW
        /T956mAY7ln8P0NPmXSOVPw/DrTR0C5P/D/YGAotz0n8P6N9QolvRPw/beJ65Q8//D9lvgAg+VS6
        P2W+ACD5VLo/Zb4AIPlUuj9lvgAg+VS6P2W+ACD5VLo/Zb4AIPlUuj9lvgAg+VS6P2W+ACD5VLo/
        Zb4AIPlUuj9lvgAg+VS6P2W+ACD5VLo/Zb4AIPlUuj9lvgAg+VS6P2W+ACD5VLo/Zb4AIPlUuj9l
        vgAg+VS6P2W+ACD5VLo/Zb4AIPlUuj9lvgAg+VS6P7d34v2oWro//SLv4N6quj/RRJxPMcS6P/XL
        ONnQw7o/GlPVYnDDuj8/2nHsD8O6P2RhDnavwro/spPOGbqFuz9Wx9gXwsG7P2elo8U/y7s/eINu
        c73Uuz+JYTkhO967P5o/BM+457s/qx3PfDbxuz8JtnCMdwe9P+bo/yVQJb0/ykbGP8IwvT+upIxZ
        NDy9P5MCU3OmR70/d2AZjRhTvT9bvt+mil69P0AcpsD8ab0/tKUiVlUGwD+lmCUOiBrAP3qcH8q0
        J8A/T6AZhuE0wD8kpBNCDkLAP04orxpLVcA/GH8+KHA+wj90J6nQnUTCP9DPE3nLSsI/LHh+IflQ
        wj+IIOnJJlfCP+TIU3JUXcI/WrA963E7wj95/42ookHBP8tcM+CBN8E/HLrYF2EtwT9tF35PQCPB
        P790I4cfGcE/ENLIvv4OwT9hL2723QTBPz6Tme7MlcA/Ol/y/ne0vT+KtTQulJS9P9oLd12wdL0/
        K2K5jMxUvT97uPu76DS9P50vLutnr7w//bEc/3G/uj9mYRT51bS6P84QDPM5qro/NsAD7Z2fuj+e
        b/vmAZW6PwYf8+Bliro/G5mqkdJmuj+UVutZhPW5P3hiTmJt9rk/XG6xalb3uT9AehRzP/i5PySG
        d3so+bk/CJLagxH6uT/snT2M+vq5P04qthW3ubo/AWLzCBCIvD/IbEZ4wZG8P453medym7w/VYLs
        ViSlvD8cjT/G1a68P+KXkjWHuLw/4VwFVmQxvT9rPp994u29Px2M0/8D9L0/z9kHgiX6vT+BJzwE
        RwC+PzN1cIZoBr4/5cKkCIoMvj+XENmKqxK+P5pNhwbXHb4/DcHi0I0ivj+XFzagQxu+PyBuiW/5
        E74/qsTcPq8Mvj8zGzAOZQW+P71xg90a/r0/YOnHXDL2vD+xsiJ9MjG8PweAoFwPJLw/XE0ePOwW
        vD+yGpwbyQm8PwfoGful/Ls/3kndH2Y9vD8VTwmOsey8P9EX8AWTwr0/jeDWfXSYvj9Jqb31VW6/
        PwM50rYbIsA/YZ3FcgyNwD+/Abku/ffAPx1mrOrtYsE/scbefSmNwT+uqcAuv5bBP6uMot9UoME/
        qG+EkOqpwT+lUmZBgLPBP6I1SPIVvcE/L+STYCirwj9yn2Kia/bCP5F0ykAXAMM/r0ky38IJwz/O
        Hpp9bhPDP+zzARwaHcM/CslpusUmwz8Y3t/QjynDP4FCzAB7KsM/6qa4MGYrwz9TC6VgUSzDP7xv
        kZA8LcM/JdR9wCcuwz+OOGrwEi/DP/ecViD+L8M/KBqyclcywj8iNL1CvhjCP8tilCKDEsI/dZFr
        AkgMwj8ewELiDAbCP8fuGcLR/8E/qR7Tev+fwT9ni+tDL6PBPyb4Aw1fpsE/5WQc1o6pwT+k0TSf
        vqzBP2M+TWjur8E/IqtlMR6zwT8rJmdyELjBP2aTMVa8XcI/PYrxBxliwj8VgbG5dWbCP+x3cWvS
        asI/w24xHS9vwj+aZfHOi3PCP1f0xqCEgcI/HzYnm9o/wz+BGGYePkLDP+L6pKGhRMM/Q93jJAVH
        wz+kvyKoaEnDPwaiYSvMS8M/ZPJGUN3q1D9k8kZQ3erUP2TyRlDd6tQ/ZPJGUN3q1D9k8kZQ3erU
        P2TyRlDd6tQ/ZPJGUN3q1D9k8kZQ3erUP2TyRlDd6tQ/ZPJGUN3q1D9k8kZQ3erUP2TyRlDd6tQ/
        ZPJGUN3q1D9k8kZQ3erUP2TyRlDd6tQ/ZPJGUN3q1D9k8kZQ3erUP2TyRlDd6tQ/ZPJGUN3q1D+/
        YAyRaO/UPzk9EJfm99Q/tOnOw+P61D+AeU/AqfvUP00J0Lxv/NQ/GZlQuTX91D/mKNG1+/3UP2aV
        RXTN0tQ/d9Te4l3I1D97aYh16cnUP37+MQh1y9Q/gZPbmgDN1D+EKIUtjM7UP4i9LsAX0NQ/tvQv
        AsEM1D/CsuA46/nTP4VTaw0v9NM/SPT14XLu0z8MlYC2tujTP881C4v64tM/ktaVXz7d0z9VdyA0
        gtfTP10B4qORbNM/I+MycE9p0z8vuLW5WGjTPzqNOANiZ9M/RmK7TGtm0z8NpF4ozmXTP5ZB/mtP
        gNM/+9+oUfh+0z9fflM3oX3TP8Qc/hxKfNM/KLuoAvN60z+NWVPom3nTP0NovduVe9M/t9UrssCP
        0z9TSf/2E5LTP++80jtnlNM/izCmgLqW0z8npHnFDZnTP8MXTQphm9M/X4sgT7Sd0z8wW4t/68HT
        Pyl4OfaLVdQ/6epmwZhY1D+qXZSMpVvUP2vQwVeyXtQ/LEPvIr9h1D+p+XbHkrHUPxrxPEtHF9Y/
        Oc9XKici1j9YrXIJBy3WP3eLjejmN9Y/lmmox8ZC1j+1R8Ompk3WP5+kjmYg0NY/fvablunR2D91
        6ed0LeDYP2vcM1Nx7tg/Yc9/MbX82D9XwssP+QrZP021F+48Gdk/RKhjzIAn2T/HBC5P5f7ZP5aT
        eIw+8ts/htHXQQH+2z92Dzf3wwncP2ZNlqyGFdw/Vov1YUkh3D9FyVQXDC3cPxRnvWfEgNw/6CKi
        jZr+3D+yN8bY1QPdP31M6iMRCd0/R2EOb0wO3T8SdjK6hxPdP9yKVgXDGN0/p596UP4d3T8Sdio5
        tYjcP9bFFGjx4ts/C097t/3b2z9B2OEGCtXbP3dhSFYWzts/rOqupSLH2z/icxX1LsDbPw6Jubyk
        a9o/xkJrHRpq2T/NJiZv1lTZP9QK4cCSP9k/2+6bEk8q2T/i0lZkCxXZPzeTtjBfEtc/+tLhsy63
        1T8U8BdkZIjVPy8NThSaWdU/SiqExM8q1T9lR7p0BfzUP39k8CQ7zdQ/moEm1XCe1D+1nlyFpm/U
        P5u16uvDW9Q/FOBQfXRV1D+OCrcOJU/UPwg1HaDVSNQ/gV+DMYZC1D/7ienCNjzUP4sEuPvXqtI/
        3s0iw4IT0j+PtGENA+XRPz+boFeDttE/74HfoQOI0T+gaB7sg1nRP1BPXTYEK9E/D5goKage0T98
        zzgglBvRP+oGSReAGNE/WD5ZDmwV0T/GdWkFWBLRPzStefxDD9E/oeSJ8y8M0T8PHJrqGwnRP0qN
        Q5BdOdI/4/zF+JFY0j8fh9pPkmDSP1wR76aSaNI/mJsD/pJw0j/VJRhVk3jSP1bOpfglldI/Q6au
        k/qW0j8wfrcuz5jSPxxWwMmjmtI/CS7JZHic0j/2BdL/TJ7SP+Pd2pohoNI/++efw9+h0j8mGobK
        k5vSP5eYneClnNI/Bxe19red0j93lcwMyp7SP+cT5CLcn9I/WJL7OO6g0j+Yj+vj0KTSP8DZWmpV
        3NI//wigkI3c0j8+OOW2xdzSP31nKt393NI/vJZvAzbd0j/7xbQpbt3SPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        ZCS0P1PFKsfYcbM/FNfBrFXTsj9vjmpm7NKyP8pFEyCD0rI/Jv272RnSsj+BtGSTsNGyP9xrDU1H
        0bI/NyO2Bt7Qsj8GNPg3mfSyP0jNKzQBEbM/ZlMCHEYVsz+F2dgDixmzP6Nfr+vPHbM/weWF0xQi
        sz/y8ap21WmzP+ubZ/kun7M/+OlcfQulsz8FOFIB6KqzPxKGR4XEsLM/H9Q8CaG2sz8sIjKNfbyz
        PzhwJxFawrM/2fWTzpfpsz/Q8pG0ewa0P4nZVTBlE7Q/QsAZrE4gtD/8pt0nOC20P7WNoaMhOrQ/
        bnRlHwtHtD//O66yWOW1P0pE8qg6nrY/yEbR9FCotj9HSbBAZ7K2P8ZLj4x9vLY/RU5u2JPGtj/E
        UE0kqtC2P0NTLHDA2rY/NIuF8tB2tz+6vC/kw563P6oFTnNboLc/mk5sAvOhtz+Kl4qRiqO3P3vg
        qCAipbc/p7bV0W4ovj84EuPxkt/FP2i7GzTNBcc/mmRUdgcsyD92ApFZd0/JP/Z7y/IYaMk/d/UF
        jLqAyT/3bkAlXJnJP3foer79sck/92G1V5/KyT932+/wQOPJP/hUKori+8k/8K/1NbwByz+QJM40
        hHnPP3MN+7sJj88/VvYnQ4+kzz8531TKFLrPPxvIgVGaz88/vFulyn/Vzz91lO+BwpXPP2YlG0iQ
        Qs8/V7ZGDl7vzj9IR3LUK5zOPznYnZr5SM4/K2nJYMf1zT8c+vQmlaLNPw2LIO1iT80/MhBNtd4S
        zT+gm+0v8wbNPw4njqoH+8w/sgMsD11z3z+yAywPXXPfP7IDLA9dc98/sgMsD11z3z+yAywPXXPf
        P7IDLA9dc98/sgMsD11z3z+yAywPXXPfP7IDLA9dc98/sgMsD11z3z+yAywPXXPfP7IDLA9dc98/
        sgMsD11z3z+yAywPXXPfP7IDLA9dc98/sgMsD11z3z+yAywPXXPfP7IDLA9dc98/sgMsD11z3z+f
        4N9nlpDfP4y9k8DPrd8/eZpHGQnL3z9md/txQujfPz6X3bIc1+A/1v/g/T8U4T9xnwlKfBrhPw0/
        Mpa4IOE/qd5a4vQm4T9FfoMuMS3hP+AdrHptM+E/fL3Uxqk54T8g+va0KDzhP4KpvP/2POE/MvDw
        GKU94T/hNiUyUz7hP5F9WUsBP+E/QMSNZK8/4T/wCsJ9XUDhP/Y1CzlQzuA/JXRviVbJ4D9UstPZ
        XMTgP4TwNypjv+A/sy6cemm64D90xg/P2Z3gP+cCyh1//d0/xIHqlxHp3T+hAAsSpNTdP39/K4w2
        wN0/XP5LBsmr3T85fWyAW5fdPxf8jPrtgt0/ktu/B04C3T/dB/FnqfnZPzTu5GbN59k/i9TYZfHV
        2T/iusxkFcTZPzqhwGM5stk/kYe0Yl2g2T/wwToGqy/ZP5oawL4LZNc/TcfmjoxR1z//cw1fDT/X
        P7IgNC+OLNc/Zc1a/w4a1z/5SQ20SiHXP6Pyw4FgbNc/rB/4Js5u1z+1TCzMO3HXP755YHGpc9c/
        x6aUFhd21z/Q08i7hHjXP9gA/WDyetc/4S0xBmB91z/GUaDuQu3WPzLSTEZAk9U/TC3vmHqD1T9n
        iJHrtHPVP4LjMz7vY9U/nD7WkClU1T/apC1GB9jUP8dofqx60NM/z88kSKbK0z/WNsvj0cTTP96d
        cX/9vtM/5QQYGym50z/sa762VLPTP/TSZFKArdM/VaLbnuef0z+JdHETtY/TP4YP+7Ezj9M/gqqE
        ULKO0z9+RQ7vMI7TP3rgl42vjdM/dnshLC6N0z9yffSpXFHTP1QbZPacGdM/J3q7DUsZ0z/62BIl
        +RjTP843ajynGNM/oZbBU1UY0z909RhrAxjTP0dUcIKxF9M/DmPSvpOr0j++/hd3NF7SPxYexF9c
        X9I/bz1wSIRg0j/HXBwxrGHSPyB8yBnUYtI/AaMiSQTU0j+9o9qnVSXTP07J+BTZJtM/4O4Wglwo
        0z9yFDXv3ynTPwM6U1xjK9M/lV9xyeYs0z8nhY82ai7TPzrohycU09I/EF9I5Vyg0j89SOtzyKDS
        P2oxjgI0odI/lhoxkZ+h0j/DA9QfC6LSP/Dsdq52otI/CzXcwZND0z+aKQt984rTP1/gT2U9jdM/
        JJeUTYeP0z/qTdk10ZHTP68EHh4blNM/dbtiBmWW0z86cqfurpjTP86/myA059M/iwOkQbT80z+E
        M8Z7Ev/TP31j6LVwAdQ/dpMK8M4D1D9vwywqLQbUP3NH/zDHfdk/tnTuytAl4T8CAs5ti5bhP06P
        rRBGB+I/kUSd2/V24j/bnWFE/ILiPyX3Ja0Cj+I/b1DqFQmb4j+4qa5+D6fiPwIDc+cVs+I/TFw3
        UBy/4j+Wtfu4IsviP/zO6uIG7+I/ZY9qEKdp4z8CvNjwhmnjP5/oRtFmaeM/OxW1sUZp4z/YQSOS
        JmnjP5eEqVaeNOM/K+GpTK5Q4j+EshAhShHiP9yDd/Xl0eE/NFXeyYGS4T+NJkWeHVPhP+X3q3K5
        E+E/PckSR1XU4D+Vmnkb8ZTgPyhWs/raZuA/AfVjOtld4D/akxR611TgPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQPiamc5rvfo/+JqZzmu9+j/4mpnOa736P/iamc5rvfo/
        +JqZzmu9+j/4mpnOa736P/iamc5rvfo/+JqZzmu9+j/4mpnOa736P/iamc5rvfo/+JqZzmu9+j/4
        mpnOa736P/iamc5rvfo/+JqZzmu9+j/4mpnOa736P/iamc5rvfo/+JqZzmu9+j/4mpnOa736P/ia
        mc5rvfo/ZuZ15IDE+j/UMVL6lcv6P0J9LhCr0vo/sMgKJsDZ+j8eFOc71eD6P6zAGwHFA/w/H+cI
        i+I8/D+UeDcgWEX8PwgKZrXNTfw/fJuUSkNW/D/xLMPfuF78P2W+8XQuZ/w/d6B7ruwl/T9WIDTj
        Qzv9P8aC/VzzP/0/NuXG1qJE/T+mR5BQUkn9PxaqWcoBTv0/hgwjRLFS/T/2buy9YFf9P7U1q9q+
        Rv0/pASEeGtF/T+S01wWGET9P4GiNbTEQv0/b3EOUnFB/T+ylaBq/Dv9PznvlJfjVPw/Y7vOsUQq
        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
        okDJP/wQx2wuf8k/N6pI4CbJyT8m2QcNxMnJPxUIxzlhysk/BDeGZv7KyT/zZUWTm8vJP+KUBMA4
        zMk/0cPD7NXMyT/A8oIZc83JP61bf3iaIMs/8kt3jOxszD8R5FTlW3nMPzF8Mj7Lhcw/URQQlzqS
        zD9wrO3vqZ7MP5BEy0gZq8w/sNyooYi3zD+yySS4iaDMP5LZl+fEjcw/bwPkds+PzD9MLTAG2pHM
        PypXfJXkk8w/B4HIJO+VzD8STE5LTzHMP8xc/MR5+Ms/6q0SOyXzyz8J/yix0O3LPydQPyd86Ms/
        RaFVnSfjyz9k8msT093LP4JDgol+2Ms/TV4pfX3/yT8WOzf24zTJP68iDKrSLMk/SArhXcEkyT/h
        8bURsBzJP3vZisWeFMk/FMFfeY0MyT+tqDQtfATJP0aQCeFq/Mg/F9R4f01oyD9SoHFTszjIP+nO
        ZrrtNcg/f/1bISgzyD8WLFGIYjDIP6xaRu+cLcg/Q4k7VtcqyD/ZtzC9ESjIP+Tc4iwFqMY/QgWJ
        Nl1Mxj+o3O1f+DzGPw60UomTLcY/dIu3si4exj/aYhzcyQ7GP2Ek0nvdFcQ/qmIKJJbTwz+R2EYT
        5svDP3dOgwI2xMM/XcS/8YW8wz9DOvzg1bTDPymwONAlrcM/DyZ1v3Wlwz/1m7GuxZ3DP9wR7p0V
        lsM/ARJGGCEewz8TZuoJAxjDP5xiE4SXFcM/JV88/isTwz+uW2V4wBDDPzdYjvJUDsM/jR83U3m9
        wz+vIO7QrRfEP8iMiaSCcMQ/Sy7wL5FH1T9LLvAvkUfVP0su8C+RR9U/Sy7wL5FH1T9LLvAvkUfV
        P0su8C+RR9U/Sy7wL5FH1T9LLvAvkUfVP0su8C+RR9U/Sy7wL5FH1T9LLvAvkUfVP0su8C+RR9U/
        Sy7wL5FH1T9LLvAvkUfVP0su8C+RR9U/Sy7wL5FH1T9LLvAvkUfVP0su8C+RR9U/Sy7wL5FH1T+i
        xNiDOEbVP/pawdffRNU/UfGpK4dD1T+ph5J/LkLVPwEee9PVQNU/5fhwmjN11T8dyM6OVYHVPwJB
        R5LyhNU/57m/lY+I1T/NMjiZLIzVP7KrsJzJj9U/lyQpoGaT1T9Gb2SnIwnWP7JHy0jIFdY/n0Sh
        pxUY1j+MQXcGYxrWP3g+TWWwHNY/ZTsjxP0e1j9SOPkiSyHWPz41z4GYI9Y/pQJKtq0l1j+BxiW+
        viTWP12KAcbPI9Y/OU7dzeAi1j8WErnV8SHWP12FN7ERHtY/kIxWAwF71T+sgMcyvXPVP8d0OGJ5
        bNU/42ipkTVl1T/+XBrB8V3VPxpRi/CtVtU/NUX8H2pP1T9ROW1PJkjVP24a6CUiQtU/D70wdQpB
        1T+wX3nE8j/VP1ECwhPbPtU/8aQKY8M91T+SR1OyqzzVP0ex7NfgMNU/QjGL+tgF1T9g5fHjUuPU
        P36ZWM3MwNQ/m02/tkae1D+5ASagwHvUP9a1jIk6WdQ/Kf8A2zI/1D9ETxvQpTzUP1+fNcUYOtQ/
        e+9Puos31D+WP2qv/jTUP7KPhKRxMtQ/zd+emeQv1D/oL7mOVy3UP9b9V5v7ENQ/1jhBW/jb0z9e
        y5rwE93TP+Zd9IUv3tM/b/BNG0vf0z/3gqewZuDTPyysOjosYdQ/s4FVA1kv1T+dyEvE0zfVP4YP
        QoVOQNU/cFY4RslI1T9anS4HRFHVPyQRpHKtBtY/NmvK+oLh1j/PvylxderWP2cUiedn89Y/AGno
        XVr81j+YvUfUTAXXPzESp0o/Dtc/yWYGwTEX1z8iPqe3epzZP03Rh/LCndw/KMgkpBCx3D8Dv8FV
        XsTcP9+1Xges19w/uqz7uPnq3D+Vo5hqR/7cP3CaNRyVEd0/S5HSzeIk3T+8xgMfdDffP7WBUdhc
        muA/eL4IoiCi4D88+79r5KngP/83dzWoseA/w3Qu/2u54D+GseXIL8HgP0runJLzyOA/80Oe1BG2
        4D+eq357uqXgP41vyuaXpOA/ezMWUnWj4D9q92G9UqLgP1i7rSgwoeA/IWGpIKno3z87p3bX5ivf
        P7W+5F0LId8/L9ZS5C8W3z+p7cBqVAvfPyQFL/F4AN8/nhydd5313j8YNAv+wereP6IOBawCldw/
        FTh4wO+S2z/Z1kRlH4XbP551EQpPd9s/YhTern5p2z8ns6pTrlvbP+tRd/jdTds/sPBDnQ1A2z90
        jxBCPTLbP7TRfe3kwNc/nXlkmuOj1j8uf1BjVZTWP8CEPCzHhNY/Uooo9Th11j/jjxS+qmXWP3WV
        AIccVtY/B5vsT45G1j8/8Rl0U83VP/9lZrexsdU/Nyhk2cOt1T9u6mH71anVP6WsXx3opdU/3G5d
        P/qh1T9Pdu3a6n7VPxc4gvV2etU/N+uSpQ161T9XnqNVpHnVP3dRtAU7edU/lwTFtdF41T+3t9Vl
        aHjVP9dq5hX/d9U/9x33xZV31T8X0Qd2LHfVPyujkBgGc9Y/oQnEf7h+1j9Jc2vDmYLWP/LcEgd7
        htY/mka6SlyK1j9CsGGOPY7WPxQZxwZu69c/8FWL3sIx2D8rkoe/nnPYPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        +D8Ahrb5Hr74P1Z+gkNrrPg/rHZOjbea+D8CbxrXA4n4P1hn5iBQd/g/04oLChFr+D/duNe8+mb4
        P+jmo2/kYvg/8hRwIs5e+D/8QjzVt1r4PwZxCIihVvg/ctRM/xRU+D/d7IOLV1P4P0cFuxeaUvg/
        sR3yo9xR+D8cNikwH1H4P4ZOYLxhUPg/8WaXSKRP+D/p9rv4lGP4P+GIxDfHd/g/bheiAwZ4+D/7
        pX/PRHj4P4k0XZuDePg/FsM6Z8J4+D8YYYgWSbL4PxLlChVc2vg/5QNT9cHg+D+5IpvVJ+f4P41B
        47WN7fg/YWArlvPz+D80f3N2Wfr4P42yDF0s4/g/1cOcaL6/+D8c1Sx0UJz4P2TmvH/iePg/q/dM
        i3RV+D/zCN2WBjL4P/MI3ZYGMvg/8wjdlgYy+D/zCN2WBjL4P/MI3ZYGMvg/8wjdlgYy+D/zCN2W
        BjL4P/MI3ZYGMvg/8wjdlgYy+D/zCN2WBjL4P/MI3ZYGMvg/8wjdlgYy+D/zCN2WBjL4P/MI3ZYG
        Mvg/8wjdlgYy+D/zCN2WBjL4P/MI3ZYGMvg/8wjdlgYy+D/zCN2WBjL4PzoabaKYDvg/KQCxUUzV
        9z8bG7r6aZT3Pww2w6OHU/c//VDMTKUS9z/va9X1wtH2P+CG3p7gkPY/jIQYj9dZ9j8tJ9pvXiX2
        P8/Jm1Dl8PU/cWxdMWy89T8SDx8S84f1P7Ox4PJ5U/U/VFSi0wAf9T/29mO0h+r0Pz977TacpfQ/
        Q487Wdxd9D9Ho4l7HBb0P0u3151czvM/T8slwJyG8z9T33Pi3D7zP50+YQkK/PI/g+dlwWa58j9q
        kGp5w3byP1A5bzEgNPI/N+Jz6Xzx8T/hoT3x37PxP3+r7k6ZsPE/HLWfrFKt8T+5vlAKDKrxP1fI
        AWjFpvE/9NGyxX6j8T+R22MjOKDxP4x51gq0ZvE/Svc/YA1y8D9IEMlH93DwP0YpUi/hb/A/RELb
        Fstu8D9CW2T+tG3wP6H6sF7aU/A/2r+hJ/UA8D/deItq4sbvPwdy04Xai+8/MmsbodJQ7z9bZGO8
        yhXvP4Rdq9fC2u4/iDBKHjaY7j+3BAJn9UHuP+fYua+06+0/F61x+HOV7T9HgSlBMz/tP3ZV4Yny
        6Ow/pimZ0rGS7D9H8HvMVDfsP0rWjL4i0es/TLydsPBq6z9Poq6ivgTrP1GIv5SMnuo/VG7Qhlo4
        6j905N2Z/trpP2ABX6Gli+k/Sx7gqEw86T83O2Gw8+zoPyNY4reaneg/D3Vjv0FO6D8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        8z8n88EAycvzP8D/g9W3y/M/WQxGqqbL8z/yGAh/lcvzP9sakUofx/M/JRdYH27A8z81qlSgJ8Dz
        P0U9USHhv/M/VdBNopq/8z9lY0ojVL/zP2AtQxGXw/M/w2iadwzL8z+TlFXeu8/zP2TAEEVr1PM/
        NOzLqxrZ8z8EGIcSyt3zP9VDQnl54vM/pW/93yjn8z++EyLR4u3zP1X0GWWv9vM/7NQR+Xv/8z+C
        tQmNSAj0PxmWASEVEfQ/r3b5tOEZ9D+mYYsaCB70Px+WrhkmH/Q/mMrRGEQg9D8R//QXYiH0P4oz
        GBeAIvQ/A2g7Fp4j9D9qbRsejzz0P2DlbalSSPQ/kT8NIS5J9D/CmayYCUr0P/PzSxDlSvQ/JE7r
        h8BL9D9WqIr/m0z0P1aoiv+bTPQ/VqiK/5tM9D9WqIr/m0z0P1aoiv+bTPQ/VqiK/5tM9D9WqIr/
        m0z0P1aoiv+bTPQ/VqiK/5tM9D9WqIr/m0z0P1aoiv+bTPQ/VqiK/5tM9D9WqIr/m0z0P1aoiv+b
        TPQ/VqiK/5tM9D9WqIr/m0z0P1aoiv+bTPQ/VqiK/5tM9D9WqIr/m0z0Px/12ejzqvQ/EPLKBuDO
        9D/3A/hFwtL0P98VJYWk1vQ/xidSxIba9D+tOX8Dad70P0yrjIeRefU/ZCWUECam9T/kOsTFB6r1
        P2VQ9HrprfU/5mUkMMux9T9me1TlrLX1P+eQhJqOufU/Z6a0T3C99T/FnoXnh132P9s5saF1fvY/
        vZEa7K6D9j+f6YM26Ij2P4FB7YAhjvY/Y5lWy1qT9j/lHqceyET3PxMpajPIT/c/a21qpIlT9z/C
        sWoVS1f3Pxn2aoYMW/c/oMLEB2ln9z+CqDIC4+D3P1FkawF28Pc/ICCkAAkA+D/v29z/mw/4P72X
        Ff8uH/g/jFNO/sEu+D9bD4f9VD74PxJwOSQXT/g/1hp8Go1l+D+axb4QA3z4P15wAQd5kvg/IhtE
        /e6o+D/mxYbzZL/4P5IWqrBS0fg/qM5eF0nV+D+9hhN+P9n4P9I+yOQ13fg/6PZ8Syzh+D80P/rx
        LQb5P50blY8nYfk///54kFFj+T9i4lyRe2X5P8TFQJKlZ/k/J6kkk89p+T+JjAiU+Wv5P+xv7JQj
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        /j8tk+DL7OX+Pw6PU57J5f4/74rGcKbl/j/QhjlDg+X+P7CCrBVg5f4/kX4f6Dzl/j8s59iU0Of+
        P7yJBQQa6/4/jz23og3r/j9i8WhBAev+PzWlGuD06v4/CVnMfujq/j8bOXNewPH+P2KxvpaM2f4/
        jxFsXBmd/j+9cRkipmD+P+rRxucyJP4/GDJ0rb/n/T/Tg3jxX839P4ADKNWRx/0/LoPXuMPB/T/c
        Aoec9bv9P4qCNoAntv0/NwLmY1mw/T/lgZVHi6r9P2GCvKYciPw/VPrvB2av+z810eEoD0j7Pxao
        00m44Po/9n7FamF5+j/XVbeLChL6P3zpUlyM6vk/uX3ayTTc+T/1EWI33c35PzKm6aSFv/k/bjpx
        Ei6x+T/WW79cSYL4P5b3tWrUAfg/pR+xQBLX9z+zR6wWUKz3P8Fvp+yNgfc/0JeiwstW9z/ev52Y
        CSz3P+znmG5HAfc/cA3MOEH29j9JKJQsEPD2PyNDXCDf6fY//F0kFK7j9j/WeOwHfd32P2Da7R3A
        H/Y/q93XzxAK9j8dfcOeFgb2P48cr20cAvY/AbyaPCL+9T90W4YLKPr1P7/lKOMYmvU/Epxdo6iW
        9T9lUpJjOJP1P7cIxyPIj/U/Cr/741eM9T+UPsmuTIH1P8IZ89xQPfU/1GwMvcow9T/mvyWdRCT1
        P/cSP32+F/U/CWZYXTgL9T8buXE9sv70PywMix0s8vQ/7lLEdEzo9D/AG2mg2eX0P5HkDcxm4/Q/
        Y62y9/Pg9D80dlcjgd70PyHv5pDIyvQ/RxiOWMac9D9HGI5Yxpz0P0cYjljGnPQ/RxiOWMac9D9H
        GI5Yxpz0P0cYjljGnPQ/RxiOWMac9D9HGI5Yxpz0PwsZi/R8mvQ/CxmL9Hya9D8LGYv0fJr0PwsZ
        i/R8mvQ/CxmL9Hya9D8LGYv0fJr0PwsZi/R8mvQ/CxmL9Hya9D8LGYv0fJr0PwsZi/R8mvQ/CxmL
        9Hya9D/PGYiQM5j0P5MahSzqlfQ/VxuCyKCT9D8bHH9kV5H0PyGCPbSNjPQ/iIyGiuaF9D99sgEt
        Z4b0P3HYfM/nhvQ/Zv73cWiH9D9aJHMU6Yf0P27+rwO4jvQ/GMEl1+6c9D9Xh22cXp/0P5dNtWHO
        ofQ/1hP9Jj6k9D8V2kTsrab0P1SgjLEdqfQ/Oq0Vk4Tm9D9Kbd/uvEr1PztMMqh8TfU/LCuFYTxQ
        9T8dCtga/FL1Pw7pKtS7VfU/Kk69jAp79T9EPOrWJav1PyGT1+tVrfU//unEAIav9T9WDwwt7Yy2
        P5i2le8C57Q/osszjSPntD8rEqElS+i0P7RYDr5y6bQ/PZ97VprqtD/G5ejuweu0P8ZpCV8ORbY/
        u/W68PHKtj9bvyPla0O3P/uIjNnlu7c/m1L1zV80uD87HF7C2ay4PxSEqd7wILk/prT7ytAuuT85
        5U23sDy5P8sVoKOQSrk/XUbyj3BYuT/wdkR8UGa5P4KnlmgwdLk/9rCssJKjuT8DQjx4l9m6P2P1
        r7RL2bo/xKgj8f/Yuj8kXJcttNi6P4UPC2po2Lo/MEwSOGHkuj8pgBdW1CG7P9+mQOMDE7s/lc1p
        cDMEuz9L9JL9YvW6PwEbvIqS5ro/OjpzvUoZuj9lAZKYza63PwX0jfLUc7c/puaJTNw4tz9G2YWm
        4/22P+bLgQDrwrY/h759WvKHtj8nsXm0+Uy2P8gO6VM6G7Y/DMvBAkYAtj9Qh5qxUeW1P5RDc2Bd
        yrU/1/9LD2mvtT8bvCS+dJS1P2z+pAqJgbU/F1eRqdt6tT/Br31ILnS1P2wIaueAbbU/FmFWhtNm
        tT/BuUIlJmC1P2sSL8R4WbU/47IHpCxftT/cRsp7uG+1P4w+rIGAerU/PDaOh0iFtT/sLXCNEJC1
        P5wlUpPYmrU/3E4bZKLptj+Qv7cBp1i4P9JhKkK4vbg/EwSdgskiuT9Vpg/D2oe5P5ZIggPs7Lk/
        4CTrraUYuj938zOKwiG6Pw3CfGbfKro/o5DFQvwzuj86Xw4fGT26P9AtV/s1Rro/Zvyf11JPuj+H
        lMfXeme7P8v5mdKZv7s/aTA+PhBtuz8IZ+Kphhq7P6edhhX9x7o/RdQqgXN1uj8AFOePc1C6P7Ow
        peBjPbo/ZU1kMVQquj8Y6iKCRBe6P8uG4dI0BLo/wlLhsf7MuD97nvVlbYK4Pyjf4WiUobg/1R/O
        a7vAuD+DYLpu4t+4PzChpnEJ/7g/3uGSdDAeuT+LIn93Vz25P3s1aJWOTbk/5540YH9buT9SCAEr
        cGm5P75xzfVgd7k/KtuZwFGFuT+PRU6Eeke7P7t4jG7sfbs/9Vq1h6OKuz8vPd6gWpe7P2kfB7oR
        pLs/owEw08iwuz8l1dCev9O8P6wZ5ruKz7w/M1772FXLvD+5ohD2IMe8P0DnJRPswrw/FTkWPPfK
        vD+zk4B2FDG9P7QmHRXdS70/trm5s6VmvT+4TFZSboG9P7rf8vA2nL0/u3KPj/+2vT+9BSwuyNG9
        P31ODEr/6L0/1rcODTf2vT8uIRHQbgO+P4eKE5OmEL4/3/MVVt4dvj8ifNMoEnC/P3I26IGaWsE/
        cjbogZpawT9yNuiBmlrBP3I26IGaWsE/cjbogZpawT9yNuiBmlrBP3I26IGaWsE/cjbogZpawT/z
        JDvgyGbBP/MkO+DIZsE/8yQ74MhmwT/zJDvgyGbBP/MkO+DIZsE/8yQ74MhmwT/zJDvgyGbBP/Mk
        O+DIZsE/8yQ74MhmwT/zJDvgyGbBP/MkO+DIZsE/cxOOPvdywT/0AeGcJX/BP3TwM/tTi8E/9d6G
        WYKXwT/olSwAwlXDP5q9Bad++sY/YXdSPY8Xxz8pMZ/TnzTHP/Dq62mwUcc/uKQ4AMFuxz8dSsBM
        zZjIPwDp0Dds4co/ogFEllL2yj9EGrf0OAvLP+YyKlMfIMs/iEudsQU1yz8qZBAQ7EnLPziIJVu/
        esw/+ffMzLtmzj8xyZqZyn3OP2qaaGbZlM4/oms2M+irzj/aPAQA98LOPwmaszkmdc8/jL2HX9Iq
        0D+rg/9lsjLQP8lJd2ySOtA/6hzKYv+G0j9MrYxTe9nSP+g8ZOZ64NI/QeYJeFjl0j+aj68JNurS
        P/M4VZsT79I/S+L6LPHz0j/ZtZ4mJgXTPwZ7VrjFFtM/usy7EWAo0z9vHiFr+jnTPyNwhsSUS9M/
        2MHrHS9d0z8cnKuiJW7TP81+rS4ycNM/fmGvuj5y0z8vRLFGS3TTP98ms9JXdtM/kAm1XmR40z9B
        7LbqcHrTP4UZPZkSh9M/YYG2TDLn0z91A8elSerTP4mF1/5g7dM/nQfoV3jw0z+xifiwj/PTP+EA
        xz0D4tM/cNXlzH130z/9WD5IDXLTP4nclsOcbNM/FWDvPixn0z+i40e6u2HTPxs4LKbVRtM/rpJS
        VcP/0j/FfOT+Yv/SP9xmdqgC/9I/81AIUqL+0j8KO5r7Qf7SPyElLKXh/dI/OA++ToH90j90sJ+t
        EPzSP4o0ryz/99I/n7i+q+3z0j+1PM4q3O/SP8vA3anK69I/4ETtKLnn0j8tKqxZb+XSPxdz9wbc
        5dI/AbxCtEjm0j/rBI5htebSP9VN2Q4i59I/v5YkvI7n0j+p329p++fSP57D/UFr+NI/LPL24dgM
        0z9mjNLcWg3TP6EmrtfcDdM/3MCJ0l4O0z8XW2XN4A7TP+bw2znPDNM/Nn7b+MAZ0z/KqoqXiDfT
        P13XOTZQVdM/8QPp1Bdz0z+EMJhz35DTPz+xAKglntM/K4w/V3Wh0z8XZ34GxaTTPwJCvbUUqNM/
        7hz8ZGSr0z/a9zoUtK7TP8bSecMDstM/cwyC9zSX0z9HR4RLAJfTPy+RKq53rNM/FtvQEO/B0z/+
        JHdzZtfTP+VuHdbd7NM/Kuf1E53z0z9fcS/yj/TTP5X7aNCC9dM/yoWirnX20z//D9yMaPfTP9rY
        SVLLfNM/T5VTQ5FZ0z8faEV2C1/TP+46N6mFZNM/vg0p3P9p0z+O4BoPem/TP12zDEL0dNM/LYb+
        dG560z+xD/peaH3TP7vVWccAgNM/xJu5L5mC0z/OYRmYMYXTP9gneQDKh9M/XmXjsfyb0z+ujXAp
        Sp/TP6H9bLrRoNM/k21pS1mi0z+G3WXc4KPTP3hNYm1opdM/Y16MtCgg1D8IrrzUsSTUP6797PQ6
        KdQ/U00dFcQt1D/5nE01TTLUP3oH6NPGVdQ/7wORBjxi1T+W4ZGfD5XVPz2/kjjjx9U/5ZyT0bb6
        1T+MepRqii3WPzNYlQNeYNY/2jWWnDGT1j9mgC4xVrrWP4fR6PS+wNY/pyKjuCfH1j/Hc118kM3W
        P+fEF0D509Y/rTxVQDF+1z+188HVjiTZP7XzwdWOJNk/tfPB1Y4k2T+188HVjiTZP7XzwdWOJNk/
        tfPB1Y4k2T+188HVjiTZP7XzwdWOJNk/0HwdDr4y2T/QfB0OvjLZP9B8HQ6+Mtk/0HwdDr4y2T/Q
        fB0OvjLZP9B8HQ6+Mtk/0HwdDr4y2T/QfB0OvjLZP9B8HQ6+Mtk/0HwdDr4y2T/QfB0OvjLZP+oF
        eUbtQNk/BY/UfhxP2T8fGDC3S13ZPzqhi+96a9k/Pyq2xKug2j/IUecFIx/dPyoalgOeNN0/i+JE
        ARlK3T/tqvP+k1/dP05zovwOdd0/7BbwM5SM3j/KzwPIJF3gP378JDcHaeA/MylGpul04D/oVWcV
        zIDgP52CiISujOA/Ua+p85CY4D9wGMf2f3PhP/t9fFRn1+I/qL4VeCfm4j9V/66b5/TiPwJASL+n
        A+M/r4Dh4mcS4z+W1GO4V53jP5Z6iFhMTOQ/uSRq1d1S5D/czktSb1nkPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQCvebWkqcPY/OBr4d6U09z81j2jch8P3P8zorVHc2fc/
        ZHODTnjd9z/8/VhLFOH3P5SILkiw5Pc/LBMERUzo9z/EndlB6Ov3P1worz6E7/c/GeGLF1Sz+D/G
        mLfwvOL4P5tsokF8Cvk/b0CNkjsy+T9EFHjj+ln5PxnoYjS6gfk/HZG57waL+T9Bxi7kUpT5P2X7
        o9ienfk/iTAZzeqm+T9689/1g7n5PyK42acht/o/f4lC+ZS8+j/cWqtKCML6PzgsFJx7x/o/lf18
        7e7M+j/yzuU+YtL6P06gTpDV1/o/U74zmCjw+j/naEGoI6v7P2V4EcCv1/s/4ofh1zsE/D9gl7Hv
        xzD8P96mgQdUXfw/XLrYh9+D/D/Kakrvvon8PzkbvFaej/w/p8stvn2V/D8WfJ8lXZv8P/F4pQ4F
        vPw/kGKMkSE6/T+XzhcuMVX9P546o8pAcP0/paYuZ1CL/T+tEroDYKb9P7R+RaBvwf0/u+rQPH/c
        /T9m0wTLdfP9PwQ2oMSuAv4/o5g7vucR/j9B+9a3ICH+P+BdcrFZMP4/fsANq5I//j9GT0GQ8kn+
        P1ghPOK1TP4/afM2NHlP/j97xTGGPFL+P4yXLNj/VP4/nmknKsNX/j+wOyJ8hlr+P9LqUBlUa/4/
        lGpxOoh5/j96gH9lNHX+P2CWjZDgcP4/R6ybu4xs/j8twqnmOGj+P6moEwiDZf4/uq695npk/j/K
        tGfFcmP+P9u6EaRqYv4/68C7gmJh/j/7kbo/XT7+P5PfTOq7HP4/0pB9XU8b/j8SQq7Q4hn+P1Hz
        3kN2GP4/kaQPtwkX/j/QVUAqnRX+P/0sKbCIt/0/vh3aDPFs/T9+82628mj9Pz7JA2D0ZP0//p6Y
        CfZg/T++dC2z91z9P3PG1TTL//w/hwXoWWis/D/Rtk9qtoL8Pxxot3oEWfw/Zxkfi1Iv/D+yyoab
        oAX8Py4L6SPM8/s/bE5evznw+z+qkdNap+z7P+jUSPYU6fs/Jhi+kYLl+z9kWzMt8OH7P6KeqMhd
        3vs/V9W2hgxv+z965Tup5ED7P2d8HPofPfs/VRP9Sls5+z9Cqt2bljX7Py9BvuzRMfs/uucl2iSZ
        +j+N6xv09Xn6P5fqFlNKdfo/oOkRsp5w+j+q6AwR82v6P7TnB3BHZ/o/veYCz5ti+j/H5f0t8F36
        P0t2Qy6SNPk/OqGdExEU+T/kw21r6A35P4/mPcO/B/k/OQkOG5cB+T/jK95ybvv4P0c2ZFCnxPc/
        DdFf5Yak9z8bMN2OeJv3Pxsw3Y54m/c/GzDdjnib9z8bMN2OeJv3Pxsw3Y54m/c/GzDdjnib9z8b
        MN2OeJv3PyiPWjhqkvc/Ne7X4VuJ9z9CTVWLTYD3P/K+HbkJMPY/oGdZC24O9j9W6zUK/QL2Pw1v
        EgmM9/U/xPLuBxvs9T96dssGquD1P5eR5NSg2fQ/jOPFsEzO9D+BkNOAgcj0P3Y94VC2wvQ/a+ru
        IOu89D9hl/zwH7f0Pz/wDZ66nfQ/nHc++KnK8z+ZbhjtXcTzP5dl8uERvvM/lVzM1sW38z+TU6bL
        ebHzPyTqNpLPlfM/iy5j6tYh8z+272UOth7zP+GwaDKVG/M/DHJrVnQY8z83M256UxXzP2L0cJ4y
        EvM/CmbWMQAO8z8CvG5FSgnzP+tb8P7WCfM/1PtxuGMK8z+8m/Nx8ArzP6U7dSt9C/M/P5SqENRg
        8z/d67QZAd7zP618jvZw4fM/fQ1o0+Dk8z9NnkGwUOjzPx4vG43A6/M/eryFr2NG9D+emDqKBMzE
        P8iLm2fVNMQ/ZlkmMMzWwj99A4YGs5/CPzt3/RiClsI/+ep0K1GNwj+3Xuw9IITCP3XSY1DvesI/
        M0bbYr5xwj/xuVJ1jWjCP+G8Yk9kisA/ZfQFKr52wD9bI+q3dXrAP1BSzkUtfsA/RYGy0+SBwD87
        sJZhnIXAP7FCTQgGgsA/qc9Nf29+wD+hXE722HrAP5npTm1Cd8A/04BPQLZgwD89eVOQHdW8PzQr
        v1bkvrw/Kt0qHauovD8gj5bjcZK8PxZBAqo4fLw/DPNtcP9lvD8Cpdk2xk+8P7WGJMSp3rs/Qqlz
        GN5ouD99v48KFQG4P7nVq/xLmbc/9OvH7oIxtz8wAuTgucm2PzbjEm4rcLY/6ydpsxBktj+gbL/4
        9Ve2P1WxFT7bS7Y/C/Zrg8A/tj/yqHTslMq1P6KXGtYU+bM/aiCDJBrwsz8xqetyH+ezP/gxVMEk
        3rM/wLq8DyrVsz+HQyVeL8yzP0/Mjaw0w7M/QbT0W6DJsz+aC5zfIu2zP/RiQ2OlELQ/Tbrq5ic0
        tD+mEZJqqle0P/9oOe4se7Q/4gKVB4qTtD8waT4VZ5q0P3/P5yJEobQ/zjWRMCGotD8dnDo+/q60
        P2wC5EvbtbQ/umiNWbi8tD8q0XPbr6a0P0YeKk56e7Q/caOsLuNatD+cKC8PTDq0P8atse+0GbQ/
        8TI00B35sz9WRvrBQeyzP+F4lkbh87M/a6syy4D7sz/23c5PIAO0P4AQa9S/CrQ/80polnqOtj/u
        o4L6fv+4PwiapqulHLk/IpDKXMw5uT88hu4N81a5P1Z8Er8ZdLk/cHI2cECRuT+isQG2xna7PyoT
        FjUG8Lw/scLugJoEvT85csfMLhm9P8AhoBjDLb0/SNF4ZFdCvT8r1KL/Rfe/P8vdwGhRV8E/PYre
        ar8twj+uNvxsLQTDPyDjGW+b2sM/ko83cQmxxD+QDkxdVg/FP6yId/7dJcU/yAKjn2U8xT/kfM5A
        7VLFPwD3+eF0acU/HHElg/x/xT8461AkhJbFP+pBbyOB88g/XItUgpBYyj9y2hS7+HTKP4gp1fNg
        kco/nniVLMmtyj+0x1VlMcrKPyEGMgBEJM4/FRJ6ox7Qzj+W9KK7mObOPxbXy9MS/c4/l7n064wT
        zz8XnB0EByrPP5h+RhyBQM8/GGFvNPtWzz/a1fNNSaLSPwjmWn7v+NI/zow4Ca8M0z+UMxaUbiDT
        P1ra8x4uNNM/IIHRqe1H0z8EclsO8I7VPzs/SShJytU/1p+KdVLa1T/Wn4p1UtrVP9afinVS2tU/
        1p+KdVLa1T/Wn4p1UtrVP9afinVS2tU/1p+KdVLa1T9xAMzCW+rVPwthDRBl+tU/psFOXW4K1j9j
        RobLr2/XPy0WK25ukdc/EQzui4Kb1z/0AbGplqXXP9f3c8eqr9c/u+025b651z8o0gcGYlzZP7Kj
        hdsTb9k/6dsAS/l42T8fFHy63oLZP1VM9ynEjNk/jIRymamW2T+1g+YQ7LbZP/q3yfzDqto/tV+e
        OzSy2j9vB3N6pLnaPyqvR7kUwdo/5FYc+ITI2j92urnAUePaP+3BAH6LTds/wFbDyBNP2z+T64UT
        nFDbP2aASF4kUts/ORULqaxT2z8Mqs3zNFXbPwF48Oa0Tts/zhZLcEU82z+xxlcc+D3bP5N2ZMiq
        P9s/diZxdF1B2z9Z1n0gEEPbP2mgGmfqWNs/1YfKF+502z/WT224YW/bP9cXEFnVads/2N+y+Uhk
        2z/ap1WavF7bP9SgA/nz2No/Mf6PDvVq1j8KKzAWQmbWPxg2yYV3uNQ/1x1ymDF11D9XRyyIgGrU
        P9Zw5nfPX9Q/VZqgZx5V1D/Vw1pXbUrUP1TtFEe8P9Q/0xbPNgs11D8QhjAc6WHTPziLQVwHJtM/
        A5dsq/fx0j/Popf6573SP5uuwknYidI/ZrrtmMhV0j/q+hDp21LSPwIKKXrwT9I/GRlBCwVN0j8w
        KFmcGUrSP3zty/zvStI/3IOo0+mq0j9AXmIQJ6zSP6M4HE1krdI/BhPWiaGu0j9p7Y/G3q/SP8zH
        SQMcsdI/MKIDQFmy0j/0FovYAbHSPzi0WtIOm9I/2uKubGWn0j97EQMHvLPSPx1AV6ESwNI/v26r
        O2nM0j8E05OaUNfSPxXFFwdp2tI/Jrebc4Hd0j83qR/gmeDSP0ibo0yy49I/NVfByDvk0j8C5dEr
        x9fSP6BTPd+qxdI/P8Koko6z0j/dMBRGcqHSP3uff/lVj9I/Gg7rrDl90j+4fFZgHWvSP7HQMhdq
        UdI/kifNqWAp0j90fmc8VwHSP1bVAc9N2dE/NyycYUSx0T8Zgzb0OonRP9EtiU9Tb9E/d/FI0ptr
        0T8dtQhV5GfRP8R4yNcsZNE/ajyIWnVg0T8QAEjdvVzRP7fDB2AGWdE/azwuK9P/0D+Uc5oitpHQ
        P9+nH1JObtA/KdykgeZK0D90ECqxfifQP79Er+AWBNA/d30sUqvgzz+Tect6p9nPP691aqOj0s8/
        y3EJzJ/Lzz/nbaj0m8TPP8be70AgBs8/vSi6mrtOzj+AH7mGy0TOP0QWuHLbOs4/Bw23Xuswzj/K
        A7ZK+ybOP436tDYLHc4/08i8Mmu6zD/hbY5efaLLP+XxYTTLkss/6XU1ChmDyz/t+QjgZnPLP/F9
        3LW0Y8s//VpsNQHAyT/EBuGjinbIP5bbc6y9Bsg/aLAGtfCWxz86hZm9IyfHPwtaLMZWt8Y/1hpv
        LD+Hxj/nWLqHN33GP/eWBeMvc8Y/CNVQPihpxj8YE5yZIF/GPylR5/QYVcY/OY8yUBFLxj97hieE
        vDbFP79eboSBxMQ/VEuNQXC7xD/pN6z+XrLEP34ky7tNqcQ/ExHqeDygxD/aYPD1iqTEPzvwRM1M
        psQ/UDBjYiqnxD9kcIH3B6jEP3mwn4zlqMQ/jvC9IcOpxD+iMNy2oKrEP7dw+kt+q8Q/NYrwFin0
        xD/2cdw8w/3EPyjTHJMSAcU/WjRd6WEExT+LlZ0/sQfFP7323ZUAC8U/UAnv3awkxD+sApki8wjE
        P9bNU44O/sM/1s1Tjg7+wz/WzVOODv7DP9bNU44O/sM/1s1Tjg7+wz/WzVOODv7DP9bNU44O/sM/
        /5gO+inzwz8pZMllRejDP1IvhNFg3cM/1D1tJ2mewD8RDsYIiErAP+xzvtpoLcA/x9m2rEkQwD9F
        f179VOa/P/tKT6EWrL8/okFbldHQvT/5KUFpGrm9PzOenWhNq70/bRL6Z4CdvT+nhlZns4+9P+H6
        smbmgb0/Rz0HOufvvD+DYbQQl3e3P/y4LzEIS7c/dRCrUXketz/uZyZy6vG2P2e/oZJbxbY/VrTm
        2qB0tT8SkMPqYMmuP49kCHTmdq4/CzlN/Wskrj+IDZKG8dGtPwXi1g93f60/grYbmfwsrT9clHDd
        an+pPzQkA3uH2KA/lWnLFYOioD/3rpOwfmygP1n0W0t6NqA/uzkk5nUAoD/TLUCDqySgPzAKKsJ0
        baA/AsLYCpEsoD+o8w6nWtefP09jbDiTVZ8/89LJycvTnj+NTskYDRKUPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        s/U/a4K5MOrC9T/ZNdadWuP1P9k11p1a4/U/2TXWnVrj9T/ZNdadWuP1P9k11p1a4/U/2TXWnVrj
        9T/ZNdadWuP1P9k11p1a4/U/2TXWnVrj9T/ZNdadWuP1P9k11p1a4/U/2TXWnVrj9T+QyYqK+OjV
        PyxSS5b7sdU/Y33OLV2y1T+bqFHFvrLVP9LT1Fwgs9U/Cv9X9IGz1T9BKtuL47PVP3lVXiNFtNU/
        ZkZfzGco1j/Bs+/Ps0HWP4IcJpmoUNY/RIVcYp1f1j8F7pIrkm7WP8ZWyfSGfdY/h7//vXuM1j9j
        NpJBFo7WP0njNstnj9Y/L5DbVLmQ1j8WPYDeCpLWPyVvmyKwktY/+GIPq/Fr1j8OL0Ux0mrWPyX7
        ereyadY/O8ewPZNo1j9Rk+bDc2fWP2hfHEpUZtY/fitS0DRl1j9E6HhGDGPWP+BhA9a4V9Y/PboF
        hfpa1j+bEgg0PF7WP/lqCuN9YdY/V8MMkr9k1j/0hm25d2zWPwbCZVCXj9Y/B67zQ9uP1j8ImoE3
        H5DWPwmGDytjkNY/CXKdHqeQ1j8KXisS65DWPwtKuQUvkdY/SQAlQhWL1j84QFHL327WP1U7aL/s
        atY/cjZ/s/lm1j+PMZanBmPWP6ssrZsTX9Y/0HzNd3w91j/rw/JaFOjVP3J386aq5dU/+Sr08kDj
        1T+A3vQ+1+DVPweS9Ypt3tU/96PTMv3G1T9H7fzWKILVP6rGWh99ctU/DKC4Z9Fi1T9veRawJVPV
        P9FSdPh5Q9U/NCzSQM4z1T+WBTCJIiTVP/Cfzt3ZGNU/m7FaIT0X1T9Gw+ZkoBXVP/DUcqgDFNU/
        m+b+62YS1T+6wt5LddnUPyFG0aXalNQ/nQKMEEWR1D8av0Z7r43UP5d7AeYZitQ/Ezi8UISG1D/c
        wvGVh6/UPwF50u+929Q/j/9noMzt1D8chv1Q2//UP6oMkwHqEdU/N5Mosvgj1T/FGb5iBzbVP1Kg
        UxMWSNU/o6I/voRg1T8l9eTcJXzVP6dHivvGl9U/KZovGmiz1T+r7NQ4Cc/VPy0/eleq6tU/cOxO
        gngM1j8lbtDFQjDWP9rvUQkNVNY/j3HTTNd31j9F81SQoZvWP/p01tNrv9Y/qE21sr7H1j+7XuO4
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        biPQP6kJgG9mJ9A/IDfMAb9c0D82+BGWVy/RPzgH1dSXN9E/OhaYE9g/0T88JVtSGEjRPz40HpFY
        UNE/QEPhz5hY0T+/bKG9847RP8idaamTENI/s7f9+twW0j+e0ZFMJh3SP4jrJZ5vI9I/cwW677gp
        0j+XzAiQQ3zSPxG8y51WA9M/Bgkt6VQH0z/7VY40UwvTP/Ci739RD9M/5e9Qy08T0z/aPLIWThfT
        Py1yhgdgstM/uJdM6wRw1D+FNG7osp7UP1HRj+VgzdQ/Hm6x4g781D/rCtPfvCrVPw2yFwKMQNU/
        +9nY3bBE1T/oAZq51UjVP9YpW5X6TNU/w1EccR9R1T+xed1MRFXVP56hnihpWdU/K9frga8S1j8R
        7YWdNVjWPz2HmkAwXdY/aiGv4ypi1j+Xu8OGJWfWP6cVAFmKztY/oPp83Kzp1j8rNxzO8OrWP7Vz
        u7807NY/P7BasXjt1j/J7PmivO7WP02cedVj7dY/m1L9zhbu1j/sO97AP+/WPz0lv7Jo8NY/jQ6g
        pJHx1j/e94CWuvLWPy/hYYjj89Y/8fJsV2wf1z/fKOiYCiXXP9w9sIaXKNc/2VJ4dCQs1z+MKj6j
        4TLXPzmv3qLgztc/Oa/eouDO1z85r96i4M7XPzmv3qLgztc/Oa/eouDO1z85r96i4M7XPzmv3qLg
        ztc/Oa/eouDO1z85r96i4M7XPzmv3qLgztc/Oa/eouDO1z85r96i4M7XPzmv3qLgztc/Oa/eouDO
        1z85r96i4M7XPzmv3qLgztc/jj1OX4pUuT9/zdMJaqexPzOecSHkk7E/524POV6AsT+bP61Q2Gyx
        P08QS2hSWbE/V5A7LghxsT9Qb0BRmaiyPwHK71ZesrI/siSfXCO8sj9jf05i6MWyPxTa/Wetz7I/
        D5buXtKasj/BpP8ctdexP8Xp2lLf37E/yi62iAnosT/Oc5G+M/CxP9K4bPRd+LE/1v1HKogAsj++
        75g8mzuyPyzQJh+nsrI/vQ4zwiqxsj9OTT9lrq+yP9+LSwgyrrI/cMpXq7Wssj8BCWROOauyPw+x
        41zdSrI/z88MGyazsT8Vz7k5tK2xP1rOZlhCqLE/oM0Td9CisT/lzMCVXp2xP079rLylk7M/uR+p
        Jz/ItT/i7X7DRI22Pwy8VF9KUrc/Nooq+08XuD9fWACXVdy4P4Ym1jJbobk/sPSrzmBmuj9QP3uy
        BlC7PwN7k0OXTrw/tbar1CdNvT9o8sNluEu+Pxsu3PZISr8/5zT6w2wkwD8iWXciX1HAPxa9fSHv
        X8A/CyGEIH9uwD//hIofD33AP/TokB6fi8A/rMsf73+IwT8+odv1fOXBP0WcVKsh9ME/S5fNYMYC
        wj9RkkYWaxHCP1iNv8sPIMI/Xog4gbQuwj/VV9mVXW3CP9VX2ZVdbcI/HpbzDjR9wj9I6ZvC7X3C
        P3E8RHanfsI/m4/sKWF/wj/F4pTdGoDCP1fOZAMe8sE/NxBTOPzCwT9MMVXym67BP2BSV6w7msE/
        dHNZZtuFwT+IlFsge3HBP/yjmEu+bsE/nvO6prRtwT9AQ90Bq2zBP+KS/1yha8E/hOIhuJdqwT8m
        MkQTjmnBP8mBZm6EaME/t1d2tQO+vz/pw3UcYDm/P/kEXl1G3L4/CUZGnix/vj8Zhy7fEiK+PynI
        FiD5xL0/V6XBpo26vT+nf/K/KbC9P/hZI9nFpb0/STRU8mGbvT/jUiCek3O9P1ql4rgrirw/Njoc
        nWuGvD8Sz1WBq4K8P+5jj2Xrfrw/yvjISSt7vD+mjQIua3e8P2hr0teid7w/74had/ODvD/NbL80
        rn28P6xQJPJod7w/ijSJryNxvD9pGO5s3mq8P0f8UiqZZLw/SrrF4Lfzuj8nh4EUQiq3P6impdd5
        FLc/KMbJmrH+tj+o5e1d6ei2PygFEiEh07Y/n0WlISmetj+QSJAqX1a2P7rYxPOQSLY/5Wj5vMI6
        tj8P+S2G9Cy2PzmJYk8mH7Y/ZBmXGFgRtj+kFHpfNMWzPxxUaa6i4bA/FhHaCyoIsD8inJXSYl2u
        PxYWd41xqqw/C5BYSID3qj/kIszNZC2qPx/uD16qCKo/W7lT7u/jqT+WhJd+Nb+pP9FP2w57mqk/
        DBsfn8B1qT9H5mIvBlGpP9OvH9vdqag/fNAfiVlgqD8zwihyx0ioP+qzMVs1Mag/oaU6RKMZqD+v
        yluqUmCrP99rc9ZbWKw/mIramaSBrD9RqUFd7aqsPwrIqCA21Kw/w+YP5H79rD9ViQBwFZCwP+lZ
        sI6gArE/REIAVW8YsT+fKlAbPi6xP/oSoOEMRLE/Vfvvp9tZsT+w4z9uqm+xPwgCyPVoprY/NE6b
        qCAUtz/lfWeQMj+3P5atM3hEarc/rizQO4u3tz9SRrxQi0W+P1JGvFCLRb4/Uka8UItFvj9SRrxQ
        i0W+P1JGvFCLRb4/Uka8UItFvj9SRrxQi0W+P1JGvFCLRb4/Uka8UItFvj9SRrxQi0W+P1JGvFCL
        Rb4/Uka8UItFvj9SRrxQi0W+P1JGvFCLRb4/Uka8UItFvj9SRrxQi0W+Pw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        9j8FqF5sVUP2P9K3asK3Q/Y/n8d2GBpE9j9r14JufET2PzjnjsTeRPY/BfeaGkFF9j9uptemF4b2
        P7tSPP900/Y/dW9JsvXr9j8vjFZldgT3P+moYxj3HPc/o8Vwy3c19z9d4n1++E33Pz3PW52VZfc/
        AT8QoC589z/FrsSix5L3P4keeaVgqfc/TY4tqPm/9z8R/uGqktb3P9Rtlq0r7fc/MYus6zIS+D+R
        yHByrET4P/EFNfkld/g/UUP5f5+p+D+xgL0GGdz4P9HqEDvE3Pg/xU0xcr23+D+4sFGptpL4P6wT
        cuCvbfg/oHaSF6lI+D+T2bJOoiP4P1N4j2M5E/g/NSsXwOsP+D8X3p4cngz4P/mQJnlQCfg/3EOu
        1QIG+D++9jUytQL4P7mwtC+1Wfc/O5R0uUfk9j8mbO/qu7f2PxFEahwwi/Y//BvlTaRe9j/n819/
        GDL2Py+2aR5eIfY/Fi33HNsc9j/9o4QbWBj2P+MaEhrVE/Y/ypGfGFIP9j+BSciZOaL1P5H9MGg1
        i/U/f8m4CXOS9T9tlUCrsJn1P1thyEzuoPU/SS1Q7iuo9T+PGmXNVr71PyivZZXd1/U/wENmXWTx
        9T9Z2GYl6wr2P/FsZ+1xJPY/igFotfg99j8ilmh9f1f2P5p3XLC+ffY/mndcsL599j+ad1ywvn32
        P5p3XLC+ffY/5CoT5Y2l9j/kKhPljaX2P+QqE+WNpfY/5CoT5Y2l9j8u3skZXc32Py7eyRldzfY/
        eJGATiz19j94kYBOLPX2P3iRgE4s9fY/eJGATiz19j94kYBOLPX2P3iRgE4s9fY/wkQ3g/sc9z/C
        RDeD+xz3P8JEN4P7HPc/wkQ3g/sc9z/CRDeD+xz3Pwz47bfKRPc/ECkGzLNq9z/0XySIgJD3P9iW
        QkRNtvc/vc1gABrc9z+hBH+85gH4P4U7nXizJ/g/aXK7NIBN+D9Fww084mb4PwrnSDXof/g/zwqE
        Lu6Y+D+ULr8n9LH4P7N9pStIyvg/RFFm7irH+D/UJCexDcT4P2X453PwwPg/9suoNtO9+D+NK3ls
        0p34Pzq4NzGNe/c/TCzvjlVL9z9doKbsHRv3P24UXkrm6vY/gIgVqK669j+R/MwFd4r2P6NwhGM/
        WvY/EWup0iwo9j8d9yK3kO/1PymDnJv0tvU/NQ8WgFh+9T9Bm49kvEX1P5SxXWhZHPU//6ncqBEa
        9T9qolvpyRf1P9Wa2imCFfU/QJNZajoT9T9G8fqbUvf0P9ssEHRXxPQ/Pcpz7ca69D8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQMQK6IMqwPU/hP9NYoUA9z+iG2/CNgf3P8mPJdbvF/c/
        oBKTDYQc+D8xpVWgkSX4P8M3GDOfLvg/Vcraxaw3+D/s5Zi4Nlr4PxCj+nEUgPk/xJMuuxSJ+T94
        hGIEFZL5Pyt1lk0Vm/k/32XKlhWk+T+TVv7fFa35P6OV+dfN7/k/Xy1Pplkd+z8faa2Qgyf7P+Ck
        C3utMfs/oeBpZdc7+z/MypkkoIv7P0L4xrQk2vw/m1GVKYzl/D/0qmOe8/D8P04EMhNb/Pw/p10A
        iMIH/T/H2+q1JVX9PwypuMk0Hf4/87qCkhYk/j/azExb+Cr+P8HeFiTaMf4/qPDg7Ls4/j+PAqu1
        nT/+PyZHlk1Lh/4/aok/+dcc/z8RavNp3CP/P7hKp9rgKv8/XytbS+Ux/z8+20+oxmP/P+RLmyVu
        tP8/tE3Hg2y3/z+ET/Pharr/P1RRH0Bpvf8/I1NLnmfA/z/zVHf8ZcP/PwCQdFwvpf8/Gemd1lB9
        /z8/Vztc3nr/P2XF2OFreP8/izN2Z/l1/z+xoRPthnP/P9cPsXIUcf8/5O/nWUsA/z/x2M5pgIj+
        Px/3GA/+gf4/ThVjtHt7/j99M61Z+XT+P6tR9/52bv4/2m9BpPRn/j+a2Jc3od39P6+IAimnRf0/
        yuk8CGdA/T/mSnfnJjv9PwKsscbmNf0/HQ3spaYw/T85biaFZiv9P+cmdcYcj/w/c1B/ZRP5+z/L
        mfA1m+77PyPjYQYj5Ps/eyzT1qrZ+z+N6rSXndr6P9+byGdBEvo/pa1hjLsG+j9sv/qwNfv5PzLR
        k9Wv7/k/+eIs+ink+T+hBoNU3fj4P3BIaTPzN/g/VajxuOLu9z87CHo+0qX3PyFoAsTBXPc/B8iK
        SbET9z/sJxPPoMr2P069WI5FqvY/rHUGcR2g9j8JLrRT9ZX2P2fmYTbNi/Y/xJ4PGaWB9j9ugece
        s5X1PxiJuAFkJPU/CpaWxzMW9T/8onSNAwj1P++vUlPT+fQ/4rwwGaPr9D80EriJouX0P7/THVgI
        4vQ/SpWDJm7e9D/VVun009r0P2AYT8M51/Q/NI3n3GMc9T82cbtRKS71P29ruGZrL/U/qGW1e60w
        9T/iX7KQ7zH1Pxtar6UxM/U/VVSsunM09T/ZMCmHCgD2P8xtX79kH/Y/zG1fv2Qf9j/MbV+/ZB/2
        P8xtX79kH/Y/dq/wL+Yk9j92r/Av5iT2P3av8C/mJPY/dq/wL+Yk9j8f8YGgZyr2Px/xgaBnKvY/
        yDITEekv9j/IMhMR6S/2P8gyExHpL/Y/yDITEekv9j/IMhMR6S/2P8gyExHpL/Y/cnSkgWo19j9y
        dKSBajX2P3J0pIFqNfY/cnSkgWo19j9ydKSBajX2P+ogC6PsU/c/Vdpg8Y1t9z8lv4URnHX3P/aj
        qjGqffc/x4jPUbiF9z+YbfRxxo33P2hSGZLUlfc/XU6b9AvU+D/lTW+v0uj4P088cCU98/g/uSpx
        m6f9+D9zIwlgoAv5P88pzDhDa/o/4I8Hq6Ww+j/v9UIdCPb6PwFcfo9qO/s/EsK5Ac2A+z9KVJTK
        J8X7P7kk4rkh/vs/KfUvqRs3/D+ZxX2YFXD8PwmWy4cPqfw/eWYZdwni/D/oNmdmAxv9P2kIoQ0Q
        Sf0/NtpFDEhR/T8DrOoKgFn9P9B9jwm4Yf0/nU80CPBp/T/Kn7ZaZMb9P8YOnPGJsP4/2fGbz/7S
        /j/s1Jutc/X+P/63m4voF/8/EZubaV06/z/rECs6UFL/Py2SvblAV/8/bhNQOTFc/z9upTRTiOfY
        Pzu7yAeP+Ng/PZKqYvP42D+HZvA/b/DYP8fzQFSWDtg/kIUmXRgD2D9ZFwxmmvfXPyKp8W4c7Nc/
        FqTriNXN1z+/WXjp9PDWPyxYeAI47NY/mFZ4G3vn1j8EVXg0vuLWP3FTeE0B3tY/3VF4ZkTZ1j8e
        UHoFDp3WP89awb10ftU/KtuHN3101T+GW06xhWrVP+LbFCuOYNU/pKqb+zQt1T9JlKDwxGLUP0jl
        kELaWdQ/RzaBlO9Q1D9Gh3HmBEjUP0XYYTgaP9Q/uZkkGM8e1D8HPUMWuNTTP1l1cWTQ09M/q62f
        sujS0z/95c0AAdLTP08e/E4Z0dM/oVYqnTHQ0z/lBMZqw8HTP7hw060FpNM/HoIMbSSm0z+Fk0Us
        Q6jTP+ykfuthqtM/fjjnBCm40z8YRdCjcs7TP3iYoFfbz9M/2OtwC0TR0z84P0G/rNLTP5iSEXMV
        1NM/+OXhJn7V0z+hVAC1hiPUPxdvvilXg9Q/gbqvWWWH1D/sBaGJc4vUP1ZRkrmBj9Q/wZyD6Y+T
        1D8r6HQZnpfUP1wjS4gY9tQ/2GZ9+PhZ1T+sG5Sep2DVP4DQqkRWZ9U/VIXB6gRu1T8oOtiQs3TV
        P/zu7jZie9U/SqXAZ+b71T/9NOJCsonWP2frrVqnkNY/0KF5cpyX1j86WEWKkZ7WP6MOEaKGpdY/
        DcXcuXus1j95xWF+vm/XP3REL9maJtg/V8ltGxsr2D85Tqxdmy/YPxvT6p8bNNg/yy61nF1r2D8i
        vKzRu5bYP/EIpoh/mtg/v1WfP0Oe2D+Oopj2BqLYP13vka3Kpdg/z9eOyCix2D8shXrAerXYP6cK
        6fYWstg/IpBXLbOu2D+eFcZjT6vYPxmbNJrrp9g/lCCj0Iek2D+0auUGD6TYP3yxBJwtpdg/RPgj
        MUym2D8MP0PGaqfYP9WFYluJqNg/cyU9px2h2D+daAU6k4zYP6R7EgvQc9g/q44f3Axb2D+xoSyt
        SULYP7m0OX6GKdg/ClDFffYd2D9I4s8hRRbYP4V02sWTDtg/wgblaeIG2D//mO8NMf/XP03oJFPb
        tdc/yRbZhaOi1z8aIfdzIqDXP2srFWKhndc/vDUzUCCb1z8OQFE+n5jXP19Kbyweltc/L8/wNO6N
        1z/XgNUKN4zXP9eA1Qo3jNc/14DVCjeM1z/XgNUKN4zXP2ckqB1wi9c/ZySoHXCL1z9nJKgdcIvX
        P2ckqB1wi9c/98d6MKmK1z/3x3owqYrXP4drTUPiidc/h2tNQ+KJ1z+Ha01D4onXP4drTUPiidc/
        h2tNQ+KJ1z+Ha01D4onXPxcPIFYbidc/Fw8gVhuJ1z8XDyBWG4nXPxcPIFYbidc/Fw8gVhuJ1z/K
        9bjL2xPXP2O+OcA8C9c/YlIymu4J1z9i5ip0oAjXP2J6I05SB9c/Yg4cKAQG1z9iohQCtgTXP87m
        U8hGMdY/r/e5hDYj1j8jp4nPBxzWP5dWWRrZFNY/8KANJuEL1j9uEOYBmVnVP64bhkZLRNU/7iYm
        i/0u1T8uMsbPrxnVP249ZhRiBNU/3ed5prPx1D+w4MiO/fvUP4LZF3dHBtU/VNJmX5EQ1T8my7VH
        2xrVP/jDBDAlJdU/yrxTGG8v1T8/zRF91zfVP+Lsy8y8OdU/hAyGHKI71T8nLEBshz3VP8pL+rts
        P9U/BSU32Yks1T+Xs7NoN/3UPxi7GhNAENU/mcKBvUgj1T8ayuhnUTbVP5vRTxJaSdU/nK4dMT1X
        1T/7f/3d0FvVP1pR3YpkYNU/IQrAMAL+xD/NId28gYbFP8sWjdBbhcU/lZsQrv5nxT9p3ngnJZvC
        P8b9c0zpf8I/Ih1vca1kwj9+PGqWcUnCP+5llypa6sE/7+bnJAazvT8naEtv1I69P1/prrmiar0/
        lmoSBHFGvT/O63VOPyK9PwZt2ZgN/rw/9uPn+iniuz8MmAfnsdW2P3sNwD2bp7Y/6oJ4lIR5tj9Z
        +DDrbUu2PzCoaf6T7bU/H05cw2HltD9YZJDkAs+0P5J6xAWkuLQ/zJD4JkWitD8GpyxI5ou0P85K
        cA5lurI/sXgrRjdLqz+lr46oGAOrP5nm8Qr6uqo/jR1Vbdtyqj+CVLjPvCqqP3aLGzKe4qk/uN3T
        7zk7pz9jBAYLncihP47p3jBtrqE/us63Vj2UoT/ls5B8DXqhP5RIy66M26I/xir3jhBrpT8DB0al
        sX2lP0DjlLtSkKU/fb/j0fOipT+5mzLolLWlP/Z3gf41yKU/hPRSCYtVqT+glW+mcKetPxO2aMmJ
        wq0/htZh7KLdrT/69loPvPitP20XVDLVE64/4TdNVe4urj+1UKe3vc2vP3K19L25w7A/7gKAWLza
        sD9rUAvzvvGwP+idlo3BCLE/ZeshKMQfsT/hOK3CxjaxPwpkS8jc7LM/r6e1/uzytj/JvWJbRhq3
        P+TTD7ifQbc//+m8FPlotz8aAGpxUpC3PzUWF86rt7c/k6cst19yuz+Wits3APa+P4cdueSHG78/
        eLCWkQ9Bvz9pQ3Q+l2a/P8saysNZ+sA/l141DQH9wT+UNQBsCxLCP5IMy8oVJ8I/kOOVKSA8wj+N
        umCIKlHCP82NUy9lR8M/QgQDISADxD+Oz4Pl9zvEP9qaBKrPdMQ/JmaFbqetxD9yMQYzf+bEP778
        hvdWH8U/+o4EfS81xT+JprEm8jfFPxm+XtC0OsU/qNULenc9xT847bgjOkDFP/ybkTnzf8U/9M7X
        b4GUxT+9sC0ByYnFP4eSg5IQf8U/UHTZI1h0xT8aVi+1n2nFP2hdxjcFVcU/BfTZA4U9xT+iiu3P
        BCbFPz8hAZyEDsU/3LcUaAT3xD/fE/IVx93EP9M0Bd+s1sQ/EeFBC+7TxD9PjX43L9HEP405u2Nw
        zsQ/yuX3j7HLxD8IkjS88sjEP5ScjbMs58U/PDV61wwWxj88NXrXDBbGPzw1etcMFsY/PDV61wwW
        xj+eTUvK3yDGP55NS8rfIMY/nk1Lyt8gxj+eTUvK3yDGPwBmHL2yK8Y/AGYcvbIrxj9hfu2vhTbG
        P2F+7a+FNsY/YX7tr4U2xj9hfu2vhTbGP2F+7a+FNsY/YX7tr4U2xj/Dlr6iWEHGP8OWvqJYQcY/
        w5a+olhBxj/Dlr6iWEHGP8OWvqJYQcY/GFKBTCkqxj/o07g6zyjGP9Ec2sn3KMY/u2X7WCApxj+k
        rhzoSCnGP433PXdxKcY/d0BfBpopxj9Uw9Crt0bFP8at3Pm0N8U/zJaE0hUwxT/RfyyrdijFP3pm
        SGPlHcU/B6M/9r35wz9o4jfb71/DP80hMMAhxsI/LmEopVMswj+PoCCKhZLBP6mfjOlL/sA/X0av
        qLenwD8V7dFnI1HAP5Yn6U0e9b8/AnUuzPVHvz9uwnNKzZq+P9oPucik7b0/E0lFTPFivT8lVKSq
        iU+9PzhfAwkiPL0/S2piZ7oovT9ddcHFUhW9P/1BHKUVt70/p9yNn90/vz/WA5Vc/lm+PwYrnBkf
        dL0/NVKj1j+OvD9keaqTYKi7P0ZwNA4nCrs/HoDr0Yntuj/2j6KV7NC6Pw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        A/jaPxUTiDjfA9s/mPdgDrsP2z+U+t7KCz/bP0nWoU3qqts/NC033Y+u2z8ehMxsNbLbPwnbYfza
        tds/8zH3i4C52z/eiIwbJr3bP0P+erxPx9s/Jk9KKm3U2z+kZmJZ+dTbPyJ+eoiF1ds/oJWStxHW
        2z8erarmndbbPyj9BMbcy9s/EFEXhCa92z/VN2+hL7vbP5sex744uds/YAUf3EG32z8m7Hb5SrXb
        P+vSzhZUs9s/orJQN89e2z/z/Wr6oQrbPxHrU+4OBNs/L9g84nv92j9OxSXW6PbaP2yyDspV8No/
        GIooju1z2j8d2A/qCh3aP3hbt8OyFNo/0t5enVoM2j8tYgZ3AgTaPy1iBncCBNo/LWIGdwIE2j8t
        YgZ3AgTaP8ZhKyUJ0Nk/xmErJQnQ2T/GYSslCdDZP8ZhKyUJ0Nk/xmErJQnQ2T/GYSslCdDZP8Zh
        KyUJ0Nk/xmErJQnQ2T+wBErjRrXZPyq9ISsAstk/pHX5crmu2T8eLtG6cqvZP6RV0Q3Fm9g/K+GD
        G3sa2D/BHvSlyw/YP1dcZDAcBdg/7ZnUumz61z+D10RFve/XPxgVtc8N5dc/TTttDtPc1j8BbYrM
        o3XWP2EPdPw1bNY/wbFdLMhi1j8hVEdcWlnWP04IprLL3tU/3QNHNFKD1T/wmvRBfUTVPwMyok+o
        BdU/FslPXdPG1D8pYP1q/ofUP88lSlwGbdQ/cqW9mfVd1D8VJTHX5E7UP7ikpBTUP9Q/WyQYUsMw
        1D/+o4uPsiHUP6Ej/8yhEtQ/8ia4Nfk4xT+wiRV/OsvHP+0aUhhWy8c/KqyOsXHLxz9nPctKjcvH
        P6XOB+Soy8c/w1zs+ajHxz8ZL8uH05zHP3ABqhX+ccc/xtOIoyhHxz8cpmcxUxzHP3N4Rr998cY/
        yUolTajGxj9dxt6zT6bGP3HoYTeEpMY/hArluriixj+XLGg+7aDGP6tO68Ehn8Y/K1xAr7fzxT9M
        k0t7McbEP4+4PZC+vMQ/0t0vpUuzxD8VAyK62KnEP1koFM9loMQ/nE0G5PKWxD9u/ZQmjIjEP4Z4
        tUdHd8Q/hlVW6TppxD+HMveKLlvEP4cPmCwiTcQ/h+w4zhU/xD8tIF03aw7EPzVVX9ZY7MM/kvgt
        flHywz/um/wlSvjDP0s/y81C/sM/MTMTbzMvwz97VhTo9mzCPwbuIX7oEMI/kIUvFNq0wT8aHT2q
        y1jBP6S0SkC9/MA/xD5FV76MwD9VrbB8UxDAP8o3OETRJ78/6xQPj/suvj8M8uXZJTa9PyzPvCRQ
        Pbw/TqyTb3pEuz/cb3Ayp9+6P4IZ2H1Eubo/KMM/yeGSuj/PbKcUf2y6P3UWD2AcRro/WsFuRhsa
        tz+FDKfZ0VG2P/8Qh9uVk7Y/eBVn3VnVtj/xGUffHRe3P2seJ+HhWLc/5CIH46Watz9WmnW+lNu3
        P7xIVy1VHLg/I/c4nBVduD+KpRoL1p24P/BT/HmW3rg/VwLe6FYfuT++sL9XF2C5P1kl4+Lxdbk/
        /HxbHvWFuT+d1NNZ+JW5P0AsTJX7pbk/4oPE0P61uT+JJfWlmgG8P7AxEjU5FL0/LNGo4K0Yvj+p
        cD+MIh2/PxMI65vLEMA/NPvu7mOSwD/IvWb8VvTAP1uA3glKVsE/70JWFz24wT+CBc4kMBrCPxbI
        RTIjfMI/qYq9Pxbewj9tOVmz8zXDP9iV+NiGRMM/Q/KX/hlTwz+uTjckrWHDPxmr1klAcMM/Oc+M
        HpguxD9BC7evjezGPyd7s0RLCMc/Deuv2Qgkxz/yWqxuxj/HP9jKqAOEW8c/3GsMkjLkxz8I1K+7
        tSnJP9C3ECkeNsk/l5txloZCyT9ef9ID707JPyZjM3FXW8k/7UaU3r9nyT95uypAdOLJP2FetrWU
        oMo/eBDdi3mjyj+OwgNiXqbKP6V0KjhDqco/vCZRDiisyj+RNFc9NGLKP61pPkMnAco/ES1TOKv7
        yT928GctL/bJP9uzfCKz8Mk/P3eRFzfryT+kOqYMu+XJP6VIrGFWOMk/jbK8BPmOyD9WDesylobI
        PyBoGWEzfsg/6sJHj9B1yD+zHXa9bW3IP2VDAbm8+sc/daCMFGClxz9g31bo3JPHP0oeIbxZgsc/
        NV3rj9Zwxz81XeuP1nDHPzVd64/WcMc/NV3rj9Zwxz8Ii3ZA2FnHPwiLdkDYWcc/CIt2QNhZxz8I
        i3ZA2FnHPwiLdkDYWcc/CIt2QNhZxz8Ii3ZA2FnHPwiLdkDYWcc/9iKwm1dTxz+x5vWga1bHP2yq
        O6Z/Wcc/J26Bq5Ncxz8s7o2xAkPGP4N5Iu0Nu8U/KrWJd3euxT/R8PAB4aHFP3gsWIxKlcU/H2i/
        FrSIxT/GoyahHXzFP4KFBPFxq8Q/pK6r9fdSxD/ER7KnZ0HEP+TguFnXL8Q/A3q/C0cexD/Uar8A
        5ufBPwfBCG+wq8A/T8BvwIUnwD8uf60jtka/P759e8ZgPr4/TXxJaQs2vT+1cjfV+AC8PyWxirsM
        vbo/lO/doSB5uT8ELjGINDW4P3RshG5I8bY/5KrXVFyttT9U6So7cGm0Pw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQL8qZhOCWvg/nch1UKJU+D9+FAIUnVH4P15gjteXTvg/
        1gREGYU9+D/lRf9zf2H3Pype07cPO/c/cHan+58U9z+2jns/MO72P/umT4PAx/Y/dFHBuiqj9j/l
        dpusmpT2P1WcdZ4KhvY/xsFPkHp39j835ymC6mj2P4S4B/TIW/Y/T/kuiMhc9j8aOlYcyF32P+V6
        fbDHXvY/sLukRMdf9j97/MvYxmD2P0Y982zGYfY/0/Dz1rBl9j8kmNJX5HX2P3Y/sdgXhvY/x+aP
        WUuW9j8Yjm7afqb2P89sOqpruvY/6oWOvnLd9j8En+LSeQD3Px+4NueAI/c/OtGK+4dG9z9V6t4P
        j2n3P5kPdlEgifc/mSH0i2mo9z+aM3LGssf3P5pF8AD85vc/m1duO0UG+D+baex1jiX4P5x7arDX
        RPg/v5hf+Dpj+D92ahrXLGb4Py081bUeafg/5Q2QlBBs+D+c30pzAm/4P7n9pztqdPg/QZQoRpGA
        +D+5H4FD0DX4PzGr2UAP6/c/qTYyPk6g9z8hwoo7jVX3PxZif40TD/c/ZC10iYvb9j+y+GiFA6j2
        PwDEXYF7dPY/To9SffNA9j+cWkd5aw32P+olPHXj2fU/ZPzTCk6o9T8uR2MIvHv1P/eR8gUqT/U/
        wdyBA5gi9T+KJxEBBvb0P1RyoP5zyfQ/cjjMEPer9D9a9GGuLKn0P0Kw90tipvQ/KmyN6Zej9D8S
        KCOHzaD0P9dVcbveYvQ/dYnOUAwD9D+uO8GWlwD0P+bts9wi/vM/H6CmIq778z9XUploOfnzP48E
        jK7E9vM/tfpYWx3J8z9+OMEHjorzP3EZzQ6mf/M/ZfrYFb508z9Y2+Qc1mnzP0u88CPuXvM/+Yly
        z7tY8z91Rk9w11fzP/ACLBHzVvM/bL8Isg5W8z/ne+VSKlXzP/zk9LcyjfM/A72Iq53I8z/PMpLd
        6OfzP5uomw80B/Q/Zx6lQX8m9D8zlK5zykX0P/8JuKUVZfQ/UQGW+/Nx9D9BlbAOjHT0PzEpyyEk
        d/Q/Ib3lNLx59D8RUQBIVHz0P06agJkyN/U/4lP1GJmM9T/hxQFNiJD1P983DoF3lPU/3qkatWaY
        9T9Y6YI5zWv2P1DzE3wG6PY/KRkRGhcS9z8DPw64Jzz3P91kC1Y4Zvc/tooI9EiQ9z+QsAWSWbr3
        P2rWAjBq5Pc/rLRCGN0Y+D/2fhqtnU/4P0BJ8kFehvg/ihPK1h69+D/U3aFr3/P4P3BBMeTiyvg/
        POkgf56W+D8JkRAaWmL4P9Y4ALUVLvg/ouDvT9H59z/cmPwaFdb3P2Entnm6s/c/57Vv2F+R9z9t
        RCk3BW/3P/PS4pWqTPc/emGc9E8q9z//71VT9Qf3P//vVVP1B/c//+9VU/UH9z//71VT9Qf3P//v
        VVP1B/c//+9VU/UH9z//71VT9Qf3P//vVVP1B/c//+9VU/UH9z//71VT9Qf3P//vVVP1B/c/OJUo
        2Ffx9j+dLJ7v+9r2PwPEEwegxPY/aFuJHkSu9j9oW4keRK72P2hbiR5ErvY/aFuJHkSu9j9oW4ke
        RK72P2hbiR5ErvY/aFuJHkSu9j9oW4keRK72P2hbiR5ErvY/EGRnAf2X9j9QYmMas5P2P5BgXzNp
        j/Y/0F5bTB+L9j8RXVdl1Yb2P3qwhHGsgvY/Bd2z6Z+N9j+PCeNhk5j2Pxo2EtqGo/Y/pWJBUnqu
        9j8vj3DKbbn2P7q7n0JhxPY/AdNCwXbQ9j//OLw+COn2P/2eNbyZAfc//ASvOSsa9z8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQGpJm69KCfQ/p6w643iA8z/mDxBQSoDzPyRz5bwbgPM/
        Yta6Ke1/8z+hOZCWvn/zP9+cZQOQf/M/Sj43tH+E8z+2cNHEt67zP6LtyKhSvPM/jmrAjO3J8z96
        57dwiNfzP2Zkr1Qj5fM/u00oNbf08z8FETJi+gv0P0/UO489I/Q/mZdFvIA69D/jWk/pw1H0P5z1
        fGEQZPQ/By+VNall9D9yaK0JQmf0P92hxd3aaPQ/SNvdsXNq9D8Kt6rSBqz0P/dVvUejUfU/6Grd
        j7V99T/af/3Xx6n1P8uUHSDa1fU/vak9aOwB9j+uvl2w/i32P0Gjup18XPY//o3B2D6P9j+7eMgT
        AcL2P3djz07D9PY/NE7WiYUn9z/xON3ER1r3P/hbN3yAivc/slt1u4i39z9sW7P6kOT3PyZb8TmZ
        Efg/31oveaE++D+ZWm24qWv4P/2H0PCIivg/4PjebXOc+D/Dae3qXa74P6Xa+2dIwPg/iEsK5TLS
        +D/+B3uaasH4P3j4QHCcmPg/8egGRs5v+D9r2cwbAEf4P+XJkvExHvg/5F/fZFL79z+cW/0oxdv3
        P1NXG+03vPc/C1M5saqc9z/DTld1HX33P3pKdTmQXfc/MkaT/QI+9z+E/MhSCRn3P6ANBFUn8fY/
        vB4/V0XJ9j/YL3pZY6H2P/RAtVuBefY/J6rVvWBd9j/QkbJqw0b2P3h5jxcmMPY/IWFsxIgZ9j/J
        SElx6wL2Pycn4m6Y+PU/ZnFRiDPy9T+ku8Chzuv1P+MFMLtp5fU/IlCf1ATf9T9gmg7un9j1P2bE
        FAE61vU/3dsR3WzU9T9T8w65n9L1P8oKDJXS0PU/QCIJcQXP9T+3OQZNOM31P6gb4VmTzfU/PTnG
        9BjO9T/RVquPns71P2Z0kCokz/U/+5F1xanP9T+hQL3MDPH1P5s4vHc++fU/rvJ3rWoB9j/BrDPj
        lgn2P9Vm7xjDEfY/6CCrTu8Z9j/lJ3Uk6iL2P8RRRPY9NvY/o3sTyJFJ9j+DpeKZ5Vz2P2LPsWs5
        cPY/QvmAPY2D9j/NEtIzSpn2Px33lNTWuvY/bNtXdWPc9j+7vxoW8P32Pwqk3bZ8H/c/jtsIKw1F
        9z9zlOMwPnr3P1hNvjZvr/c/PQaZPKDk9z8iv3NC0Rn4Pwd4TkgCT/g/7DApTjOE+D9oMpX+K5/4
        P4JA18JPXPg/nE4Zh3MZ+D+1XFtLl9b3P89qnQ+7k/c/m3m3i64+9z+bebeLrj73P5t5t4uuPvc/
        m3m3i64+9z+bebeLrj73P5t5t4uuPvc/m3m3i64+9z+bebeLrj73P5t5t4uuPvc/m3m3i64+9z+b
        ebeLrj73P5t5t4uuPvc/m3m3i64+9z+bebeLrj73P5t5t4uuPvc/m3m3i64+9z+bebeLrj73P5t5
        t4uuPvc/m3m3i64+9z+aeixBdbz2P5p7ofY7OvY/mnwWrAK49T+ZfYthyTX1P2RHODUutvQ/D97C
        ycA69D+5dE1eU7/zP2QL2PLlQ/M/DqJih3jI8j+5OO0bC03yP2PPd7Cd0fE/AL25pHFC8T81Mapp
        8p7wP9NKNV3m9u8/PTMW5+ev7j+nG/dw6WjtP5xblxjINOw/1JeRlJ4R6z8N1IsQde7pP0YQhoxL
        y+g/fkyACCKo5z/hU2d87ZXmPx/lbJqkkOU/XnZyuFuL5D+cB3jWEobjP9uYffTJgOI/0YldHpWx
        4T8+sIwrWAPhP6vWuzgbVeA/MPrVi7xN3z8KRzSmQvHdP+STksDIlNw/vuDw2k442z8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        9z+ahL8LLB73Pza6qV8xFPc/0u+TszYK9z9tJX4HPAD3Pxft1zX7nfY/TpnCTPtl9j/8kLFxaWL2
        P6uIoJbXXvY/WYCPu0Vb9j8IeH7gs1f2P7ZvbQUiVPY/TxPmhp/79T9Dac2tCcb1P9exAaALvvU/
        avo1kg229T/9QmqED671P78UXRegOfU/ff5SQcv/9D+NL8eDK/z0P55gO8aL+PQ/rpGvCOz09D8b
        6fu4z+v0PxRlvu2W6PQ/lP9lrO/n9D8Vmg1rSOf0P5U0tSmh5vQ/CeewDfgN9T9wLQRHPRX1P5Lp
        m0WJFfU/tKUzRNUV9T/WYctCIRb1P/gdY0FtFvU/Gtr6P7kW9T+0skg20y31P/8W8j00SvU/tvr9
        L95m9T9s3gkiiIP1PyPCFRQyoPU/2qUhBty89T+s+Gcnu8H1P1e8NAtExfU/A4AB78zI9T+uQ87S
        Vcz1P7WCWlGC1vU/6hvB4IM39j+aXrmVQTr2P0uhsUr/PPY/++Op/7w/9j+sJqK0ekL2P11pmmk4
        RfY/j82qzMJS9j/ohuHRcYr2P7KB4vsjjPY/fHzjJdaN9j9Gd+RPiI/2P/KjDWhShfY/BVsgv1pX
        9j+DR8U2FE72PwE0aq7NRPY/fiAPJoc79j/8DLSdQDL2P3r5WBX6KPY/j6M8Rroh9j/i/giIpiH2
        P0OTWG1JIfY/pCeoUuwg9j8FvPc3jyD2PwKYgTYrLfY/ivPr+vFP9j+K8+v68U/2P4rz6/rxT/Y/
        ivPr+vFP9j+K8+v68U/2P4rz6/rxT/Y/ivPr+vFP9j+K8+v68U/2P4rz6/rxT/Y/ivPr+vFP9j+K
        8+v68U/2P4rz6/rxT/Y/ivPr+vFP9j+K8+v68U/2P4rz6/rxT/Y/ivPr+vFP9j+K8+v68U/2P4rz
        6/rxT/Y/ivPr+vFP9j+WwaBAKlH2P6KPVYZiUvY/rl0KzJpT9j8OVCjiu2b2P5xSCcbGhvY/Uo7l
        3fOH9j8JysH1IIn2P8AFng1OivY/dkF6JXuL9j8tfVY9qIz2P1vv7M7SZ/Y/pnHO08Q89j8G7fem
        Sjr2P2doIXrQN/Y/x+NKTVY19j+gRv8/ieD1P1oG+w/kjvU/l43DsR+H9T/VFIxTW3/1PxKcVPWW
        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
        cM9KvT/Xt9amcdq9PxZDbeooML4/EVf2/sI2vj8Ma38TXT2+Pwd/CCj3Q74/ApORPJFKvj/9phpR
        K1G+P5FSJ8AWO8A/36Q56/FNwT85J1/jpWjBP5OphNtZg8E/7Suq0w2ewT9wPSpRuuvCPzRzAhTA
        58M/eQygBAX5wz+/pT31SQrEPwQ/2+WOG8Q/SUELgZONxT9STUWHSmfGP3OAa0LreMY/k7OR/YuK
        xj+z5re4LJzGP9MZ3nPNrcY/80wEL26/xj/ZsSasecLHPyPtBHmZTcg/vwuEKuBLyD9bKgPcJkrI
        P/dIgo1tSMg/jnBMGxE8xz9A3SyqcrbGP7pkINqiscY/NOwTCtOsxj+ucwc6A6jGP4OcFqReLsc/
        gRIqVlhfxz9fcUnRbGTHPz3QaEyBacc/Gy+Ix5Vuxz/KYW6J3DDIP89w4i/6U8g/RY1D/cpUyD+7
        qaTKm1XIPzHGBZhsVsg/p+JmZT1XyD8d/8cyDljIPysMy57fRcg/W5L2d+2oyD8FV0Qe1xXJP64b
        ksTAgsk/WODfaqrvyT8CpS0RlFzKPzFRuk1LcMo/6wEkfP9+yj+kso2qs43KP15j99hnnMo/4Mty
        TLm5yj/1lQVXlpXLP5CVK/uumss/LJVRn8efyz/HlHdD4KTLP2OUnef4qcs//pPDixGvyz99+dLa
        kOTLP8GhIyTD18w/TTxZcSXdzD/Y1o6+h+LMP2NxxAvq58w/qCz8QnEJzT9msQ348HzNP7UkGtyM
        j80/BJgmwCiizT9TCzOkxLTNP6J+P4hgx80/8PFLbPzZzT/Yq8Cgh+jNP/+WMeTJ6c0/iG5woLnv
        zT8SRq9cqfXNP5wd7hiZ+80/h17EKWY2zj8zUD4JjsjOPzNQPgmOyM4/M1A+CY7Izj8zUD4JjsjO
        PzNQPgmOyM4/M1A+CY7Izj8zUD4JjsjOPzNQPgmOyM4/M1A+CY7Izj8zUD4JjsjOPzNQPgmOyM4/
        M1A+CY7Izj8zUD4JjsjOPzNQPgmOyM4/M1A+CY7Izj8zUD4JjsjOPzNQPgmOyM4/M1A+CY7Izj8z
        UD4JjsjOP7EG7kFwys4/L72delLMzj+uc02zNM7OP47vrI+SA88/vgweigRfzz+nh+JpTmPPP5AC
        p0mYZ88/eX1rKeJrzz9i+C8JLHDPP0tz9Oh1dM8/v6cJqaKt0D9hGuFMmr/RPykhzYGvxtE/8Se5
        tsTN0T+5LqXr2dTRP3HmSn7RHdM/OwufyEZa1D9IHBREt3XUP1Ytib8nkdQ/ZD7+Opis1D+JFk6h
        vYXWPxRuCVq599c/kxR39BEe2D8Su+SOakTYP5FhUinDatg/lcCs1El+2z/Isq8leQPeP67bdilG
        C98/SgKflokJ4D+9loIYcI3gPy8rZppWEeE/or9JHD2V4T9jc8VroCTiPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQDJf0/ZfXuw/beFJtqdb7D8wao9/h1zsP3PNZvxoXew/
        tzA+eUpe7D/QDXSYIl/sP2bprqAwX+w/3o+IeHJf7D9VNmJQtF/sP8zcOyj2X+w/Q4MVADhg7D+7
        Ke/XeWDsP3i+ZDecYOw/Q+HZVCpg7D8OBE9yuF/sP9gmxI9GX+w/o0k5rdRe7D+OB4insl7sPwJd
        FUJ9X+w/dbKi3Edg7D/oBzB3EmHsP1tdvRHdYew/Khf8RkNi7D+sXwxVl2HsPy6oHGPrYOw/sPAs
        cT9g7D8zOT1/k1/sP7WBTY3nXuw/88M9opRe7D+vDFmVD1/sP2pVdIiKX+w/Jp6PewVg7D/i5qpu
        gGDsPz2kPKgbYew/57ZTsfFh7D+RyWq6x2LsPzrcgcOdY+w/5O6YzHNk7D/0dGvxs2TsP1/sdp//
        Y+w/y2OCTUtj7D822437lmLsP6FSmaniYew/DMqkVy5h7D/xrpDi7mDsP1NS7gFhYew/tfVLIdNh
        7D8XmalARWLsP3o8B2C3Yuw/aq3W5rti7D/GZbvuOmLsPyIeoPa5Yew/f9aE/jhh7D/bjmkGuGDs
        P5YNBOMmYOw/lZ0H6IZf7D+VLQvt5l7sP5S9DvJGXuw/lE0S96Zd7D+T3RX8Bl3sP5Dkj9NcXOw/
        +qzWcatb7D9jdR0Q+lrsP809ZK5IWuw/NwarTJdZ7D8MTTbNtlnsP7kS3fU7Wuw/ZtiDHsFa7D8T
        nipHRlvsP8Bj0W/LW+w/7C6sowZc7D+g87qgKFzsP1W4yZ1KXOw/CX3Ymmxc7D++QeeXjlzsP3IG
        9pSwXOw/CjK49b5c7D/pO/j6jl3sP89i7j2TXuw/tonkgJdf7D+csNrDm2DsPxAyaZnoYOw/M0Ex
        a85g7D+o+/n2pWDsPxy2woJ9YOw/kXCLDlVg7D8FK1SaLGDsP3rlHCYEYOw/QNIoFLpf7D80312D
        al/sPyjskvIaX+w/HPnHYcte7D/BiGYavV7sPwWzZnQpRew/pZVIm88n7D9FeCrCdQrsP+VaDOkb
        7es/QkA6O4A34z8+BSD5U9fhP7lhARhi6eA/aHzFbeD23z9dNYir/BreP1LuSukYP9w/SKcNJzVj
        2j/s5WrzL/fYP4gsFmxzjdc/I3PB5LYj1j+/uWxd+rnUP5rFTn9BV9M/6zFeUsaV0j87nm0lS9TR
        P4sKffjPEtE/23aMy1RR0D+g+E6l8TjPP9NSCoqZvs4/Bq3FbkFEzj84B4FT6cnNP2thPDiRT80/
        nbv3HDnVzD8rGILeFFzMP7XjfFk56Ms/QK931F10yz/KenJPggDLP1RGbcqmjMo/hIO7I3o9yj/k
        UnAk5GXKP0UiJSVOjso/pPHZJbi2yj8EwY4mIt/KP+PiQKVfBcs/BA/0gf0lyz8mO6dem0bLP0dn
        Wjs5Z8s/aZMNGNeHyz+Kv8D0dKjLP0c/IC5GNsw/kVye/S+qzT/ceRzNGR7PP5NLTc4BSdA/OFoM
        tvYC0T9gRg6zBpvRP4Ocdq++/9E/p/Leq3Zk0j/KSEeoLsnSP+2er6TmLdM/rY88PVOW0z/h0Wo3
        QQPUPxYUmTEvcNQ/SlbHKx3d1D9/mPUlC0rVP7PaIyD5ttU/KjgW8LUz1z+9Jy02LrjZP1EXRHym
        PNw/5QZbwh7B3j88+ziEy6LgPx2vts2MZuE/hjfI5JHC4T/sv9n7lh7iP1RI6xKceuI/VEjrEpx6
        4j9USOsSnHriP1RI6xKceuI/VEjrEpx64j9USOsSnHriP1RI6xKceuI/VEjrEpx64j8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        5j/V5tVAAJTlPwnkLpo8B+U/PeGH83h65D8mkzTrMS7kP0W7mJvZJuQ/Y+P8S4Ef5D+CC2H8KBjk
        P4tN4IY5duM/+nyqddPU4j+mQ1nMhJPiP1IKCCM2UuI//dC2eecQ4j+pl2XQmM/hP9f2s4tQcuE/
        wWfHU5sA4T+r2Nob5o7gP5VJ7uMwHeA/qHPaG4vj3z9T9eSH1dzfP/127/Mf1t8/qPj5X2rP3z9S
        egTMtMjfP/37Djj/wd8/v+itACxx3z8GFel18/neP0xBJOu6gt4/k21fYIIL3j/ZmZrVSZTdP8mq
        ysVnet0/XWp1oZKF3T/xKSB9vZDdP4Xpyljom90/Gql1NBOn3T+uaCAQPrLdP9ovk7Ouxt0/93bw
        SxHe3T8Uvk3kc/XdPzAFq3zWDN4/TUwIFTkk3j+dObXb+CDfP/XrGUv4JuA/GztZKHS94D9BipgF
        8FPhP79tmSQQh+E/xEgO8Q6s4T/KI4O9DdHhP8/+94kM9uE/09lsVgsb4j+Of70Thz3iP3fSVeXU
        X+I/YCXutiKC4j9IeIaIcKTiPzHLHlq+xuI/yBMvq+/o4j80Vqwi1+viP5+YKZq+7uI/CtumEabx
        4j+dfSSK8f7iP7bLIc622+M/J6RLMW4s5D+ZfHWUJX3kPwpVn/fczeQ/Nx3CS2Id5T+f2Dsx9mDl
        PweUtRaKpOU/bk8v/B3o5T/WCqnhsSvmPz7GIsdFb+Y/H6Vv+vC35j/byQmt+hvnP5fuo18EgOc/
        VBM+Eg7k5z8QONjEF0joP3PWJVY1oOg/waU+WbTR6D8PdVdcMwPpP11EcF+yNOk/rBOJYjFm6T/6
        4qFlsJfpP2PwZo9ivek/HKQk6MbG6T/VV+JAK9DpP44LoJmP2ek/R79d8vPi6T/ZW76a2PrpP8cA
        9oFeLOo/taUtaeRd6j+jSmVQao/qP9Dm9yDAtOo/Uzj/rPDF6j/XiQY5IdfqP1vbDcVR6Oo/3iwV
        UYL56j9ifhzdsgrrP2J+HN2yCus/Yn4c3bIK6z9ifhzdsgrrP2J+HN2yCus/Yn4c3bIK6z9ifhzd
        sgrrP2J+HN2yCus/Yn4c3bIK6z9ifhzdsgrrP2J+HN2yCus/Yn4c3bIK6z9ifhzdsgrrP2J+HN2y
        Cus/Yn4c3bIK6z9ifhzdsgrrP2J+HN2yCus/Yn4c3bIK6z9ifhzdsgrrP8kObVTe/Oo/5veY9rzC
        6j8D4cSYm4jqPyDK8Dp6Tuo/PrMc3VgU6j+/jT4CVP/pP+lRqly0G+o/EhYWtxQ46j8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        6D+arzezueroP0eivvrzAOk/EbAqXtWO6j/JvLRLN+zsP8nGO+TYVu4/ytDCfHrB7z9l7aQKDpbw
        P01mbZJ8O/E/LO74BpPT8T8MdoR7qWvyP+39D/C/A/M/zoWbZNab8z9i11+sj+jzP0QfzaNZ/vM/
        Jmc6myMU9D8Ir6eS7Sn0P9+Mb3EQKvQ/kMJjqvgk9D+Pbb/wrST0P44YGzdjJPQ/jsN2fRgk9D+N
        btLDzSP0Pz1PClFWD/Q/2XC/REQE9D8g06uhoQP0P2g1mP7+AvQ/sJeEW1wC9D9zo2bBj/XzP7/M
        eE8X8PM/YUVRlsfv8z8Evindd+/zP6Y2AiQo7/M/Sa/aatju8z/3w6AcReLzP8LPCP462fM/ORKV
        /6bS8z+vVCEBE8zzPyWXrQJ/xfM/mTXMoTTE8z9KltP7KsTzP/v22lUhxPM/rFfirxfE8z84WaG2
        cB35Pz7a1U2wHfo/xw8Ht71Z+j9QRTggy5X6P9l6aYnY0fo/e0Ij837C+j+5H+I5CL/6P+ulci4T
        vfo/HiwDIx67+j9QspMXKbn6P4M4JAw0t/o/nENiGRVl+j8n5MWpO1j6P8xLTH2HS/o/cbPSUNM+
        +j//JGQfqjL6P7dUxTNeM/o/b4QmSBI0+j8ntIdcxjT6P0bMudiWMPo/DFpz/Nb9+T9Ye2KGvfr5
        P6OcURCk9/k/771Amor0+T863y8kcfH5P1vHkab55vk/KqV6FOq4+T/TzBcqqLb5P3v0tD9mtPk/
        IxxSVSSy+T/vlQtkzaL5PxSy9jIyd/k/SYbYX1J1+T9+WrqMcnP5P7MunLmScfk/6AJ+5rJv+T+R
        n/+5pl/5P71OS3h8Jfk/texGoDPj+D+sikLI6qD4P6MoPvChXvg/sdIxnbwx+D9byKeTWS34PwS+
        HYr2KPg/rrOTgJMk+D+fjHCLYvH3P5SPQu5znvc/EDUx20uY9z+L2h/II5L3PwaADrX7i/c/gSX9
        odOF9z/mqluVG0X3P+aqW5UbRfc/5qpblRtF9z/mqluVG0X3P+aqW5UbRfc/5qpblRtF9z/mqluV
        G0X3P+aqW5UbRfc/5qpblRtF9z/mqluVG0X3P+aqW5UbRfc/5qpblRtF9z/mqluVG0X3P+aqW5Ub
        Rfc/5qpblRtF9z/mqluVG0X3P+aqW5UbRfc/5qpblRtF9z/mqluVG0X3P2lQ8hf75fY/gJ31HQPf
        9j+X6vgjC9j2P643/CkT0fY/Ov8Sg2lu9j/4AKitou71P2ZaXf/S5/U/07MSUQPh9T9UqtG2WW/S
        vyBC/ri/z9O/UJzpG7bN07+B9tR+rMvTv+dXTNeh2dK/9WL/x5p20r+2c2CTcxXSv3aEwV5MtNG/
        N5UiKiVT0b+rbZFb0knRv9lBZw7/QtG/BxY9wSs80b816hJ0WDXRv2O+6CaFLtG/kZK+2bEn0b+U
        eljEYR3Rv4zJ+DIm786/2wB9/DWWzb8qOAHGRT3Mv3xvhY9V5Mq/yqYJWWWLyb8a3o0idTLIv/su
        2/yc4ca/8qBfeOHexb/oEuTzJdzEv96EaG9q2cO/1vbs6q7Wwr+z+y0YysbBvx00mZ2TbMC/DNkI
        Rrokvr/eSd9QTXC7v7C6tVvgu7i/DMYdZqB+tr9k7KoPaO+1v7sSOLkvYLW/EjnFYvfQtL/0V8hI
        Ttiyv1t/YrY8CK2/R1PTDz6sqL8mJ0RpP1Ckvwf2aYWB6J+/xJ1LOIQwl78Ai1rWDfGMv2kF/a8t
        x4C/ZhpqolS7fL/6KdrkTeh3v485SidHFXO/RpJ004CEbL9usVRYc95iv7ThFP+a244/oq0HRMgH
        pD8SJ4TOO7WpP4KgAFmvYq8/+Yy+cRGIsj+/6HTcuzu1P3EaMhPy0bc/K0zvSShouj/lfayAXv68
        P5+vabeUlL8/Nt8QmbB0wD98j04n8qnAP8I/jLUz38A/CPDJQ3UUwT8rT067+cvDPyrd27BZcMU/
        VBoH35iMxT9+VzIN2KjFP6iUXTsXxcU/09GIaVbhxT+y2qNlgzDHP+ytI6LV6sc/kNIGvkADyD81
        9+nZqxvIP9kbzfUWNMg/On+CFpxFyj/9AgctginLP8qlFqFIOMs/mEgmFQ9Hyz9m6zWJ1VXLPzOO
        Rf2bZMs/Im54EbzWzD9sJTLLLqTNP0a7qVf7Fc4/IFEh5MeHzj/65phwlPnOP61DOHsrHc8/6jGf
        jzouzz8nIAakST/PP2QObbhYUM8/DXoBT2VU0D8Jl9Aaa3TQPwQJRUPre9A//3q5a2uD0D/77C2U
        64rQP5z21ePEB9E/8+lH0mUQ0T8V1MLdGg/RPze+PenPDdE/Wai49IQM0T97kjMAOgvRP30RzVX3
        wtA/WqM573QL0T+fU42LP1TRP+MD4ScKndE/nsrY2jXj0T/0mKOxR+vRP0lnbohZ89E/nzU5X2v7
        0T++ZlfX4Q/SP5cHbaNrmdI/qePZCt6f0j+7v0ZyUKbSP82bs9nCrNI/33cgQTWz0j8WBd1ugfjS
        P2wQs2zjbtQ/JMPUKIB31D/cdfbkHIDUP5QoGKG5iNQ/3zeBmkj71D/EBrGRfVXWP4I0a8rFZtY/
        QGIlAw541j/+j987VonWP7y9mXSemtY//pCm3v481z82TP1L9tbYP56BQH6j/9g/B7eDsFAo2T9w
        7Mbi/VDZP8bHTFembNk/D/ady6Zv2T9XJO8/p3LZP6BSQLSnddk/qTbyLwuA2T/SdVhkQo/ZP4il
        ozsNktk/PdXuEtiU2T/zBDrqopfZP6g0hcFtmtk/915yj3yx2T/3XnKPfLHZP/deco98sdk/915y
        j3yx2T/3XnKPfLHZP/deco98sdk/915yj3yx2T/3XnKPfLHZP/deco98sdk/915yj3yx2T/3XnKP
        fLHZP/deco98sdk/915yj3yx2T/3XnKPfLHZP/deco98sdk/915yj3yx2T/3XnKPfLHZP/deco98
        sdk/915yj3yx2T/A3IVGNdHZP+kTItOQz9k/Eku+X+zN2T87glrsR8zZP7qwCGWdj9k/qlSIf7Q/
        2T8YZdvC+TzZP4d1LgY/Otk/ZraR83k56j8EFjqXdLXtP5n0mE8kwu0/LtP3B9TO7T8uMUbNCabu
        P/y/QwIetO4/pVyTRKa/7j9P+eKGLsvuP/iVMsm21u4/paovw7XW7j+n/bu9YNbuP6hQSLgL1u4/
        qqPUsrbV7j+s9mCtYdXuP65J7acM1e4/4jxoFoTS7j+/zrpT1M3tP0g5ZSI3he0/0aMP8Zk87T9b
        Drq//PPsP+R4ZI5fq+w/buMOXcJi7D9YSpouCB/sP56iVvt2Cuw/5foSyOX16z8sU8+UVOHrP3Or
        i2HDzOs/jXQa0zyr6z8pmoz1iUDrP8a//hfX1eo/YuVwOiRr6j/+CuNccQDqP68zUFBFqek/iylf
        0o6Y6T9oH25U2IfpP0QVfdYhd+k/2+8fX7BZ6T/rJUlKuhbpP6KImuUIw+g/WOvrgFdv6D8OTj0c
        phvoP8Owjrf0x+c/eRPgUkN05z9AAfxXfzrnPwMCtwusMOc/xgJyv9gm5z+KAy1zBR3nP00E6CYy
        E+c/EAWj2l4J5z9XHBENkH7mPwioaPKIouU/wR9nMNIO5T96l2VuG3vkPzMPZKxk5+M/nSe1Cjt7
        4z/2S9CJSzDjP01w6whc5eI/pZQGiGya4j/9uCEHfU/iP+/SbeD3KOI/RbnnCf4c4j+bn2EzBBHi
        P/CF21wKBeI/Fh6qndSp4T/ipwfW1nPhPzapy98fcOE/iaqP6Whs4T/dq1PzsWjhPzCtF/36ZOE/
        GUlj0gWn4D/vP/4b/T3gP9ICTNdRNOA/tsWZkqYq4D+ZiOdN+yDgPysfi3OHw98/StZCNO6P3z8+
        k7VS+I3fPzJQKHECjN8/JQ2bjwyK3z8Zyg2uFojfP+CGsGjcjN4/INt6tOL+3T/KyIEeJ6/dP3S2
        iIhrX90/H6SP8q8P3T9JZDhHfvbcP+Dclco46tw/d1XzTfPd3D8NzlDRrdHcP5mPSJnfEtw/Cqel
        2wDs2z97z9OHu9/bP+z3ATR209s/XSAw4DDH2z/O1g67x+naP4PeZxUl1No/FD59F5/P2j+lnZIZ
        GcvaPzb9pxuTxto/x1y9HQ3C2j88z/M49E7aP2jQqEd7Jdo/uUlVKir82T8KwwEN2dLZP4mOAMIG
        q9k/p+81xaOm2T/FUGvIQKLZP+SxoMvdndk/zKpuOpiR2T/K960m8TrZP8L10Q3cONk/u/P19MY2
        2T+z8RncsTTZP6vvPcOcMtk/RMeOkS4q2T+kG4AKRQLZP06Kz5+b+9g/+fgeNfL02D+kZ27KSO7Y
        P9hT3lynv9g/M0fKvh872D/LH8B0nzfYP2L4tSofNNg/+tCr4J4w2D+RqaGWHi3YP29xY8IpRdg/
        hqMw86CY2D9DjeZXmMTYPwF3nLyP8Ng/vmBSIYcc2T8VXFie5kDZP5iXTXnkVtk/GtNCVOJs2T+d
        Djgv4ILZP77hCyoxPdo/ER6d6mhg2z+3vSnRGWvbP1xdtrfKdds/Av1CnnuA2z+nnM+ELIvbP5pg
        YP4YYNw/mmBg/hhg3D+aYGD+GGDcP5pgYP4YYNw/mmBg/hhg3D+aYGD+GGDcP5pgYP4YYNw/mmBg
        /hhg3D+aYGD+GGDcP5pgYP4YYNw/mmBg/hhg3D+aYGD+GGDcP5pgYP4YYNw/mmBg/hhg3D+aYGD+
        GGDcP5pgYP4YYNw/mmBg/hhg3D+aYGD+GGDcP5pgYP4YYNw/ZisjCPyc3T+ZnP2z1KfdP8wN2F+t
        st0//36yC4a93T/zBwsqKebeP7FxWfCkNuA/XZOiYUBA4D8JtevS20ngPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        /D+2G5rH0wL9PzJ/4EmRJv0/VeNL2zcq/T94R7ds3i39P5urIv6EMf0/zYc0bhpq/T9nznMOmpH9
        P/25iwpysv0/kqWjBkrT/T8okbsCIvT9P3p09SoD5v0/ShZK87vQ/T8auJ67dLv9P+tZ84Mtpv0/
        u/tHTOaQ/T+LnZwUn3v9Py8OVnCcZf0/TQYRiJNP/T9s/sufijn9P4v2hreBI/0/qu5Bz3gN/T9e
        xs8kIgj9P2YJvQbnAv0/bUyq6Kv9/D9XtIIrJ/f8P8ZZBMv4pfw/gntuOuVX/D/CxdmALkX8PwIQ
        Rcd3Mvw/QlqwDcEf/D/7UsaAB/f7P9ahR8K9Cfs/2baIEELP+j/cy8lexpT6P9/gCq1KWvo/Uwj8
        JNwl+j+laOenBB76P/fI0iotFvo/SSm+rVUO+j99551ro+75P7QyQ2rlVfk/HypLJ8BQ+T+KIVPk
        mkv5P/UYW6F1Rvk/YBBjXlBB+T/kJ4A2MST5P275WErrsvg/sDU669SK+D/ycRuMvmL4PzSu/Cyo
        Ovg/rwUH2ZAZ+D8htQ3ZTRT4P5NkFNkKD/g/BRQb2ccJ+D8POTwN7u33P5qadz4ooPc/L0f6ZR2R
        9z/E83yNEoL3P1qg/7QHc/c/70yC3Pxj9z+E+QQE8lT3P34oMgHUSPc/G+KLUjhG9z+3m+WjnEP3
        P1RVP/UAQfc/ArpMd4RD9z+zbS5PgFL3P4H99OmvUfc/UI27hN9Q9z8eHYIfD1D3P+ysSLo+T/c/
        uzwPVW5O9z+JzNXvnU33P1hcnIrNTPc/WFycis1M9z9YXJyKzUz3P1hcnIrNTPc/WFycis1M9z9Y
        XJyKzUz3P1hcnIrNTPc/WFycis1M9z9YXJyKzUz3P1hcnIrNTPc/WFycis1M9z9YXJyKzUz3P1hc
        nIrNTPc/WFycis1M9z9YXJyKzUz3P1hcnIrNTPc/WFycis1M9z9YXJyKzUz3P1hcnIrNTPc/RLUt
        0gAo9z/911wCMNL2P3MvaH23zvY/6YZz+D7L9j9f3n5zxsf2P9Y1iu5NxPY/TI2VadXA9j9j9NgB
        6rv2P/L+hPyrt/Y/bLR0MbW39j/maWRmvrf2P2EfVJvHt/Y/29RD0NC39j/mOXmYzJv2P1LydXDD
        gfY/ZYZvXJd/9j95GmlIa332P4yuYjQ/e/Y/oEJcIBN59j8rcd0F40/2P/iW2jqgL/Y/0wPf8HMv
        9j+tcOOmRy/2P4jd51wbL/Y/ijjUcC9B9j8+fS11+Uv2P/UD1MGiS/Y/q4p6DkxL9j/hG4qX/z3W
        P/DBHWrhBdM/RzUMCSL90j+eqPqnYvTSP/Ub6Uaj69I/TI/X5ePi0j/cEOiq777SP7rCUTV6TNI/
        Kvd+orAe0j+bK6wP5/DRPwxg2Xwdw9E/r5vtQkKg0T9vbLDKD5rRPy89c1Ldk9E/7w022qqN0T/t
        2bMuKGvRP4IJBQtOK9E/otMrPV4p0T/CnVJvbifRP+FneaF+JdE/ATKg044j0T9er3PboOjQPzid
        U2GMgdA/A2OehwNe0D/OKOmtejrQP5nuM9TxFtA/YuUDsmr5zz/YubfB0N7PP0+Oa9E2xM8/xmIf
        4Zypzz8rEPdMRSTOP6FuH2L94Mw/+zFaZXzWzD9V9ZRo+8vMP6+4z2t6wcw/CXwKb/m2zD9AiIyK
        S/bMPxSLh/C7Jc0/VBJJejEuzT+UmQoEpzbNP9QgzI0cP80/XUM1wBglzj/irVvbsIzOP6CFNzm8
        jc4/Xl0Tl8eOzj8dNe/00o/OP9sMy1LekM4/7cvsydbFzT/iQqyj8ovNP1PXrHL7g80/xGutQQR8
        zT81AK4QDXTNP6piweCO5M0/guxSWcmkzj+tTGxbh3HPP2rWwq4iH9A/gIbPr4GF0D+m/XwpYvTQ
        PyZ0VYCOZNE/puot17rU0T8mYQYu50TSP6bX3oQTtdI/Jk632z8l0z9Cu+AiIl3TPwOtZq8ik9M/
        xZ7sOyPJ0z+HkHLII//TP0iC+FQkNdQ/0K7m5cE+1D88gT46FkjUP6hTlo5qUdQ/OUYKFaNc1D/Z
        +ct9iNXUPxq4Vda/SNU/JnsJb11P1T8yPr0H+1XVPz4BcaCYXNU/HmqP4+pp1T/JR+dPPbnVP5AK
        zN1jCdY/WM2wa4pZ1j8fkJX5sKnWP9BNnbGD8dY//nzt7vn71j8rrD0scAbXP1nbjWnmENc/ZG5l
        7do81z/JTpJhyxLYPx+cT8amGdg/dekMK4Ig2D/LNsqPXSfYPyCEh/Q4Ltg/rSRoPNFy2D+5fwn3
        pYLZPxdjho3um9k/dUYDJDe12T/TKYC6f87ZP8dfj26P49k/vHXxpNPn2T+xi1PbF+zZP6ahtRFc
        8Nk/KRoMfpc52j/FHe/tkRrbP1vtgpT5Ods/8bwWO2FZ2z+GjKrhyHjbPxxcPogwmNs/sivSLpi3
        2z9qKpJIxtHbP36V2D742ts/kgAfNSrk2z+na2UrXO3bP597ihRNXtw/I66vlMrD3T+epNjIuczd
        PxmbAf2o1d0/lJEqMZje3T8PiFNlh+fdP4l+fJl28N0/BHWlzWX53T9/a84BVQLeP39rzgFVAt4/
        f2vOAVUC3j9/a84BVQLeP39rzgFVAt4/f2vOAVUC3j9/a84BVQLeP39rzgFVAt4/f2vOAVUC3j9/
        a84BVQLeP39rzgFVAt4/f2vOAVUC3j9/a84BVQLeP39rzgFVAt4/f2vOAVUC3j9/a84BVQLeP39r
        zgFVAt4/f2vOAVUC3j9/a84BVQLeP/PHx06zid4/+qLjzCu73z/RkTvNJsbfP6iAk80h0d8/gG/r
        zRzc3z9XXkPOF+ffPy5Nm84S8t8/1Ro35khp4D9lidgHfhHhPzNkK7GZGOE/AD9+WrUf4T/OGdED
        0SbhP5v0I63sLeE/C2bGwlZm4T/esOciH5fhP/aUy+1KmuE/DXmvuHad4T8kXZODoqDhPztBd07O
        o+E/JqXXirzu4T8l1Pa2dyriP5sO8b0eLOI/EUnrxMUt4j+Hg+XLbC/iP47uOZsbTeI/v424/Mdg
        4j9tjKdoFmTiPxuLltRkZ+I/7ERGWK3b4j9713I4JaDhP6LnyqoFmeE/yPciHeaR4T/vB3uPxorh
        PxUY0wGng+E/t8D2Hjhf4T9ga3pqZuLgP27mLO2DoeA/e2Hfb6Fg4D+J3JHyvh/gPy35teX4298/
        YkTzNMPH3z+XjzCEjbPfP8zabdNXn98/oBRykT9D3z9/6ymClJ3eP2aJ6Lfnlt4/TSen7TqQ3j80
        xWUjjonePxpjJFnhgt4/3OXqJoZ33j/Jkym+gWneP9L+ufd6Yt4/3GlKMXRb3j/m1NpqbVTePzxk
        W0A/T94/H1JYkaJM3j8CQFXiBUreP+YtUjNpR94/5iaMPqxt3T+MzTN5wa7cPxBg2P8Fn9w/lPJ8
        hkqP3D8YhSENj3/cP5wXxpPTb9w/D6KJ+EP72z9pl1ZuVa7bP38NGkmnods/loPdI/mU2z+s+aD+
        SojbP9WZwA0K39o/2D1e8YOT2j+r8xtvdpLaP36p2exokdo/UV+XaluQ2j8lFVXoTY/aP5j1pKxz
        ENo/50ytAhDl2T9/PqZW8dbZPxgwn6rSyNk/sCGY/rO62T+SnUTd94nYPzQ5xQGHCNg/2fIvuKC+
        1z9/rJpuunTXPyRmBSXUKtc/xT9agcP11j8mCaHB38PWP4bS5wH8kdY/55suQhhg1j9HZXWCNC7W
        P6guvMJQ/NU/kL2kapIr1j/Dmjh1E17WP/Z3zH+UkNY/KVVgihXD1j9bMvSUlvXWP79zciPz/tY/
        an2mzwsI1z8Vh9p7JBHXPzZsUC39G9c/XOdaE1GM1z+0DEPzwffXPw/iYTLDBdg/areAccQT2D/F
        jJ+wxSHYPxYxeXDZM9g/of3Nuftn2D8vL2IxKGbYP75g9qhUZNg/TJKKIIFi2D+srJXwwGDYP9iu
        +kyPX9g/BLFfqV1e2D8ws8QFLF3YP9nI+vjXZtg/G0xaCZSo2D8fUHI9EazYPyRUinGOr9g/KVii
        pQuz2D8uXLrZiLbYP9daQnE65tg/HEQjndCy2T+6sOH7///ZP1kdoFovTdo/+YleuV6a2j+V6xnr
        ftnaP+fGbHuy4No/OqK/C+bn2j+MfRKcGe/aP9LB42uPTts/uUUGVzp83D98A7w2FdfcP0DBcRbw
        Md0/BH8n9sqM3T/HPN3VpefdP4v6krWAQt4/JliYt2yM3j+lIOPXTJ/ePyXpLfgsst4/pLF4GA3F
        3j8irs6+HEzfP42EgipvceA/hxyyM8V14D+CtOE8G3rgP31MEUZxfuA/eORAT8eC4D9zfHBYHYfg
        P20UoGFzi+A/aKzPasmP4D9orM9qyY/gP2isz2rJj+A/aKzPasmP4D9orM9qyY/gP2isz2rJj+A/
        aKzPasmP4D9orM9qyY/gP2isz2rJj+A/aKzPasmP4D9orM9qyY/gP2isz2rJj+A/aKzPasmP4D9o
        rM9qyY/gP2isz2rJj+A/aKzPasmP4D9orM9qyY/gP2isz2rJj+A/aKzPasmP4D9oSweeNhfhP0Cm
        jG96T+I/11Qzoo9X4j9vA9rUpF/iPweygAe6Z+I/nmAnOs9v4j82D85s5HfiP4VhSJ+JDuM/+KZK
        f8nw4z9H/DMYL/3jP5VRHbGUCeQ/5KYGSvoV5D8y/O/iXyLkP6zyOEoo3+Q/q+DMjKKF5T9u7dXj
        W43lPzD63joVleU/8wbokc6c5T+1E/Hoh6TlP3N1/o0tMuY/Er9f9Tim5j9xSAYQAbDmP9HRrCrJ
        ueY/MVtTRZHD5j/nfdkqa2HnP0xhEVlfw+c/pbWHv5XK5z/+Cf4lzNHnPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
        saie4j/9AwAoz9DiPzlL2HkKFeM/t2D2JqAb4z80dhTUNSLjP6i/ztXWauM/pCBZumPQ4z9cyK90
        0frjPxRwBi8/JeQ/zRdd6axP5D90gISYWWXkPwkdoioLaeQ/nbm/vLxs5D8yVt1ObnDkP8by+uAf
        dOQ/l0+Li4Oh5D98Jf/Po97kP3IjAnL9F+U/aSEFFFdR5T9fHwi2sIrlP2jPufZio+U/D7OQreCp
        5T+2lmdkXrDlP116PhvctuU/BF4V0lm95T/l4R/qt4PmPzL388//3uY/5AYYFT8H5z+VFjxafi/n
        P0cmYJ+9V+c/qfI9uEtj5z/u+IVosmjnPzP/zRgZbuc/eQUWyX9z5z9wjVDDodrnP2eDwKr6G+g/
        6+4qrUlS6D9vWpWvmIjoP/PF/7Hnvug/dzFqtDb16D95e+PBc/voP32BJea9AOk/gYdnCggG6T/M
        df5lqRPpP+icLemYvOk/6Y4HE5DJ6T/rgOE8h9bpPxCVlvby5Ok/jppGkClQ6j+DlBkGWUPqP3iO
        7HuINuo/bYi/8bcp6j9igpJn5xzqPy4eFRl9EOo/Lh4VGX0Q6j8uHhUZfRDqPy4eFRl9EOo/Lh4V
        GX0Q6j8uHhUZfRDqPy4eFRl9EOo/Lh4VGX0Q6j8uHhUZfRDqPy4eFRl9EOo/Lh4VGX0Q6j8uHhUZ
        fRDqPy4eFRl9EOo/Lh4VGX0Q6j8uHhUZfRDqPy4eFRl9EOo/Lh4VGX0Q6j8uHhUZfRDqPy4eFRl9
        EOo/+3rF3QkN6j/I13WilgnqP5U0JmcjBuo/4cBqTJj26T8otXNnIXHpPxXMHveSaek/AePJhgRi
        6T962BID+zfpP+Kk/hMHgeg/3+3oZ5lO6D/bNtO7KxzoP9d/vQ++6ec/1MinY1C35z+AfYoFA4nn
        P4N4wQDHaOc/hXP4+4pI5z+Ibi/3TijnP7AI3yBNEOc/6jeT7PQP5z8kZ0e4nA/nP12W+4NED+c/
        zE+TmGrm5j/KsKOPGnrmP7bBKXmOcuY/o9KvYgJr5j+P4zVMdmPmP9ujBFwFNuY/akQcr8XJ5T9Z
        QGPspI7lP0k8qimEU+U/ODjxZmMY5T9vgoBuku3kP/9DkZLg5eQ/jgWiti7e5D8ex7LafNbkP5DE
        oNpMs+Q/oSfFaDR35D+snz7rmGbkP7YXuG39VeQ/wY8x8GFF5D/MB6tyxjTkP1YuiOOmKeQ/i6oa
        RCIn5D/AJq2knSTkP/WiPwUZIuQ/PCszHtcY5D8e3zn0qw3kP536kw0ODeQ/HRbuJnAM5D8bxfcz
        prjjP8t6VdNER+M/bspG7oIg4z8RGjgJwfniP7RpKST/0uI/V7kaPz2s4j8+5tIH0pviPwvGdKvF
        n+I/2aUWT7mj4j+mhbjyrKfiP3+HJ1D1p+I/XUnXPj6l4j87C4cth6LiPw==
  - - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 2]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        AAAAAAAAAAB7FK5H4XqUP3sUrkfheqQ/uB6F61G4rj97FK5H4Xq0P5qZmZmZmbk/uB6F61G4vj/s
        UbgehevBP3sUrkfhesQ/CtejcD0Kxz+amZmZmZnJPylcj8L1KMw/uB6F61G4zj+kcD0K16PQP+xR
        uB6F69E/MzMzMzMz0z97FK5H4XrUP8P1KFyPwtU/CtejcD0K1z9SuB6F61HYP5qZmZmZmdk/4XoU
        rkfh2j8pXI/C9SjcP3E9CtejcN0/uB6F61G43j8AAAAAAADgP6RwPQrXo+A/SOF6FK5H4T/sUbge
        hevhP4/C9Shcj+I/MzMzMzMz4z/Xo3A9CtfjP3sUrkfheuQ/H4XrUbge5T/D9Shcj8LlP2dmZmZm
        ZuY/CtejcD0K5z+uR+F6FK7nP1K4HoXrUeg/9ihcj8L16D+amZmZmZnpPz4K16NwPeo/4XoUrkfh
        6j+F61G4HoXrPylcj8L1KOw/zczMzMzM7D9xPQrXo3DtPxWuR+F6FO4/uB6F61G47j9cj8L1KFzv
        PwAAAAAAAPA/UrgehetR8D+kcD0K16PwP/YoXI/C9fA/SOF6FK5H8T+amZmZmZnxP+xRuB6F6/E/
        PgrXo3A98j+PwvUoXI/yP+F6FK5H4fI/MzMzMzMz8z+F61G4HoXzP9ejcD0K1/M/KVyPwvUo9D97
        FK5H4Xr0P83MzMzMzPQ/H4XrUbge9T9xPQrXo3D1P8P1KFyPwvU/Fa5H4XoU9j9nZmZmZmb2P7ge
        hetRuPY/CtejcD0K9z9cj8L1KFz3P65H4XoUrvc/AAAAAAAA+D9SuB6F61H4P6RwPQrXo/g/9ihc
        j8L1+D9I4XoUrkf5P5qZmZmZmfk/7FG4HoXr+T8+CtejcD36P5DC9Shcj/o/4XoUrkfh+j8zMzMz
        MzP7P4XrUbgehfs/16NwPQrX+z8pXI/C9Sj8P3sUrkfhevw/zczMzMzM/D8fhetRuB79P3E9Ctej
        cP0/w/UoXI/C/T8VrkfhehT+P2dmZmZmZv4/uB6F61G4/j8K16NwPQr/P1yPwvUoXP8/rkfhehSu
        /z8AAAAAAAAAQClcj8L1KABAUrgehetRAEB7FK5H4XoAQKRwPQrXowBAzczMzMzMAED2KFyPwvUA
        QB+F61G4HgFASOF6FK5HAUBxPQrXo3ABQJqZmZmZmQFAw/UoXI/CAUDsUbgehesBQBWuR+F6FAJA
        PgrXo3A9AkBnZmZmZmYCQI/C9ShcjwJAuB6F61G4AkDhehSuR+ECQArXo3A9CgNAMzMzMzMzA0Bc
        j8L1KFwDQIXrUbgehQNArkfhehSuA0DXo3A9CtcDQAAAAAAAAARAKVyPwvUoBEBSuB6F61EEQHsU
        rkfhegRApHA9CtejBEDNzMzMzMwEQPYoXI/C9QRAH4XrUbgeBUBI4XoUrkcFQHE9CtejcAVAmpmZ
        mZmZBUDD9Shcj8IFQOxRuB6F6wVAFa5H4XoUBkA+CtejcD0GQGdmZmZmZgZAj8L1KFyPBkC4HoXr
        UbgGQOF6FK5H4QZACtejcD0KB0AzMzMzMzMHQFyPwvUoXAdAhetRuB6FB0CuR+F6FK4HQNejcD0K
        1wdAAAAAAAAACEApXI/C9SgIQFK4HoXrUQhAexSuR+F6CECkcD0K16MIQM3MzMzMzAhA9ihcj8L1
        CEAfhetRuB4JQEjhehSuRwlAcT0K16NwCUCamZmZmZkJQMP1KFyPwglA7FG4HoXrCUAVrkfhehQK
        QD4K16NwPQpAZ2ZmZmZmCkCQwvUoXI8KQO1tS2XQUt0/lYEA9BIE4j/8gGqgvQziP2KA1ExoFeI/
        yX8++RIe4j+EYN1ma5riP45sH1CAmuQ/1kUaq70B5T8fHxUG+2jlP2f4D2E40OU/r9EKvHU35j+6
        NnWE/JrmP1+ybQIv9eY/BC5mgGFP5z+pqV7+k6nnP9a25diBDeg/c/wHt4KI6D8PQiqVgwPpP6uH
        THOEfuk/Rs1uUYX56T9Nwd7gFHHqP1JIgMsg4+o/V88htixV6z9cVsOgOMfrP2LdZItEOew/Lkfm
        9mnS7D9gUvhUvprtP5NdCrMSY+4/xmgcEWcr7z/c3/xoDr7vP16CP9crD/A/zpQAelA/8D8+p8Ec
        dW/wPxg8GRNdhfA/J1P8AGKI8D81at/uZovwP0OBwtxrjvA/UpilynCR8D9avjm7SILxP1AqFMt5
        YvI/PWmnrUHJ8j8pqDqQCTDzPxbnzXLRlvM/fNKUbCrr8z+bKP+e8zP0P7l+adG8fPQ/19TTA4bF
        9D8wLPfza/X0P9GiobpXFvU/cxlMgUM39T8VkPZHL1j1P7cGoQ4befU/6SSJT2J+9T9fK4yYfnj1
        P9Yxj+GacvU/TDiSKrds9T/DPpVz02b1PzNYGpniZvU/v4nJhcFo9T9Lu3hyoGr1P7IHyH3X8PQ/
        4GKdI1aN9D9hXal2uEL0P+JXtcka+PM/Y1LBHH2t8z/kTM1v32LzP6PsYsLsCfM/rEodrQOt8j+0
        qNeXGlDyP7wGkoIx8/E/Mw3Avs188T/cGggxfwLxP4QoUKMwiPA/LTaYFeIN8D+6PNHrjP3vP9ny
        /Gsy7O8/+Kgo7Nfa7z8XX1RsfcnvP2RzDQ9rte8/rUHjtmou7D+uhUvCdDnrP6/Js81+ROo/sA0c
        2YhP6T+hsAXl9lroPzmgouNNa+c/0Y8/4qR75j9pf9zg+4vlP0n+WbjWsOQ/1pZ1DJwr5D9iL5Fg
        YabjP+/HrLQmIeM/fGDICOyb4j8yFl5fnSHiPxnRKsmgzeE/Aoz3MqR54T/pRsScpyXhP9ABkQar
        0eA/dTiXW/2O4D/qRzXN1YPgP2BX0z6ueOA/7dTdjbUA4D+M6eq9Jl3dP38PyUs9ltw/cjWn2VPP
        2z9mW4VnagjbP1mBY/WAQdo/HDLc3uFw2T+DccuK7YjYP+qwujb5oNc/UfCp4gS51j/qtQrNtMvV
        P9WWRMER09Q/wHd+tW7a0z+sWLipy+HSPxFHmc/sM9I/jMV63Xkp0j8HRFzrBh/SP4PCPfmTFNI/
        /kAfByEK0j8V5ehkV7LRP5iUKZq1H9E/2yy5+wj80D8fxUhdXNjQP7w9oho9stA/A73KQcGI0D9K
        PPNoRV/QP5G7G5DJNdA/9oKdwsEz0D9J01m+WF/QP50jFrrvitA/8HPStYa20D9ExI6xHeLQP8p/
        P361+dA/EbUMK+P60D9Z6tnXEPzQP6Afp4Q+/dA/djdCcd++0D/U6aaZS8vQP8QOhp8JYNE/szNl
        pcf00T+jWESrhYnSP/q7ZpWuEdM/YoZrI6iP0z/KUHCxoQ3UPzEbdT+bi9Q/meV5zZQJ1T8Vm1Lg
        hsXVP+XhHFDeodY/tSjnvzV+1z+Fb7EvjVrYP0NP/LaHCtk/1nbFFWms2T9pno50Sk7aP/zFV9Mr
        8No/A2bwaj+c2z/cDQXJ0krcP7W1GSdm+dw/jl0uhfmn3T9iBUPjjFbePzutV0EgBd8/7akDeaAc
        4D9rI2JIw77gP+mcwBfmYOE/ZxYf5wgD4j/Q4XTCZ47iP4wuVLnuF+M/SHszsHWh4z8=
    - !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - *id001
      - !!python/tuple [0]
      - b
      state: !!python/tuple
      - 1
      - !!python/tuple [167, 4]
      - !!python/object/apply:numpy.dtype
        args: [f8, 0, 1]
        state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
      - true
      - !!binary |
        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
  rotation_variables: [p, rpy]
  target_frames: [/left_elbow_1, /left_shoulder_1]
  use_time_variable: false
model_data:
- - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      m3xsJRib4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +3WF24Cf4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      W2+ekemj4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gH5rnt9s5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JIqme/DS5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uFy2u3HZ5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TC/G+/Lf5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4AHWO3Tm5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      dNTle/Xs5T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      t2GvioJ35z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tMWRmdzw5z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      VlSNcXYt6D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +OKISRBq6D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mnGEIaqm6D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PACA+UPj6D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3o570d0f6T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gB13qXdc6T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      IqxygRGZ6T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ckjW/WEC6j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Ce3rjzBt6j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      n5EBIv/X6j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NDYXtM1C6z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ytosRpyt6z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FiYby6cY7D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TLNEcwGJ7D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      g0BuG1v57D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      u82Xw7Rp7T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8lrBaw7a7T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KujqE2hK7j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YHUUvMG67j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lwI+ZBsr7z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      K6Kkfd+b7z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      aqSSMrQI8D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vfdSpnhD8D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EUsTGj1+8D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ZJ7TjQG58D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      t/GTAcbz8D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vyY0unQs8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tvy6j1FV8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rdJBZS5+8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pKjIOgun8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      m35PEOjP8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      klTW5cT48T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iCpdu6Eh8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bvUSRy9T8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fQWa+EOu8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jBUhqlgJ8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      myWoW21k8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qzUvDYK/8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ukW2vpYa9D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      yVU9cKt19D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2WXEIcDQ9D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8rU1OLsq9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ZDBune+B9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1aqmAiTZ9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RiXfZ1gw9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uJ8XzYyH9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KRpQMsHe9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mZSIl/U19z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Cw/B/CmN9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UdxINSHA9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lPL44EnF9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1QipjHLK9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Fx9ZOJvP9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      WTUJ5MPU9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mku5j+zZ9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PndehyVC+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YS8hEXCk+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NnLUg8Cf+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      CrWH9hCb+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3vc6aWGW+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sjru27GR+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hn2hTgKN+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SIXEaaTL9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      J3EJA7ss9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      05hEMcQC9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gMB/X83Y9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Lui6jdau9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2w/2u9+E9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iDcx6uha9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hLJ2LGZI9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      DOOiBXFG9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lBPP3ntE9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HET7t4ZC9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pHQnkZFA9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LKVTapw+9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      s9V/Q6c89j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iYT4ZmI99j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OlK8kSlC9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ERwOoCRI9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6OVfrh9O9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      v6+xvBpU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lnkDyxVa9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bUNV2RBg9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      n/Io5F5i9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eAFu35dj9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UhCz2tBk9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Kx/41Qlm9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      BC490UJn9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3TyCzHto9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bzuTp2Ji9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      9YNH0kVb9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      esz7/ChU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ABWwJwxN9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hV1kUu9F9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      C6YYfdI+9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ke7Mp7U39j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FjeB0pgw9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      dKoqbts49j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TV/7cHBB9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JRTMcwVK9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /sicdppS9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      131teS9b9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sDI+fMRj9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7wxa955t9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      DHJbN8CD9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      J9dcd+GZ9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RDxetwKw9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YKFf9yPG9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fQZhN0Xc9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FYrjLN7u9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JRl7tXLw9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NagSPgfy9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RTeqxpvz9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      VcZBTzD19j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ZVXZ18T29j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      deRwYFn49j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hXMI6e359j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fzE0ohlL9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3yu6SyIB+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wb/rAjES+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      oFMduj8j+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      f+dOcU40+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XnuAKF1F+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PA+y32tW+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qUl6Y3dB+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0E2KZrb99z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      91GaafW59z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HlaqbDR29z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RVq6b3My9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bF7KcrLu9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      k2LadfGq9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      umbqeDBn9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6/By850b9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EnVY1NDI9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Ofk9tQN29T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YH0jljYj9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iAEJd2nQ9D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      roXuV5x99D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      934fvCwq9D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XCa17ynW8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wM1KIyeC8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JXXgViQu8z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ihx2iiHa8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      78MLvh6G8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Y0WP93FE8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OUU+pGsP8j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EEXtUGXa8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      50Sc/V6l8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vkRLqlhw8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lUT6VlI78T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bUSpA0wG8T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RERYsEXR8D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fZTYtDG98D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      9BY2uD258D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bJmTu0m18D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4xvxvlWx8D8=
- - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KvQW/I5e/z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      od67kcxU/z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SNjXeaqP/T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4pwWkZns/D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      VQ2h8Aac/D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      x30rUHRL/D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Ou61r+H6+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rV5AD0+q+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      H8/KbrxZ+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      InfzynxG+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hcePOlI++z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6Rcsqic2+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TWjIGf0t+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sbhkidIl+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FAkB+acd+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eFmdaH0V+z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lJx0QUvp+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fFuSS77V+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2lVBJkTO+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OFDwAMrG+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      l0qf20+/+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      9UROttW3+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Y0jGY52p+T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      VQJHAtHb+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Zq9GDUnX+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eVxGGMHS+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iwlGIznO+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nrZFLrHJ+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sGNFOSnF+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wxBFRKHA+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pRwnBAmr+D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      V7ZvyMPe9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      B9uUYLHa9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uP+5+J7W9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      aSTfkIzS9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      GkkEKXrO9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      cV383Km69z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      h2J6f2k39z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2W7eWyEz9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      K3tCONku9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      foemFJEq9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0ZMK8Ugm9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      I6BuzQAi9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TpvRrsMU9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iZJpB9XZ9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rObYQgbY9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zjpIfjfW9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8Y63uWjU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FOMm9ZnS9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NzeWMMvQ9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      WosFbPzO9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      R+NoM4ia9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      82kabO8C9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AxChrZD/9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FbYn7zH89T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      J1yuMNP49T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OQI1cnT19T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      S6i7sxXy9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XU5C9bbu9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5K0JO8y49T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      aXKduI5q9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iD9XMwZe9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qQwRrn1R9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ydnKKPVE9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6qaEo2w49T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      CnQ+HuQr9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mEBsdqYk9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pA6wKOoi9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sdzz2i0h9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vao3jXEf9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      yXh7P7Ud9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1ka/8fgb9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      BVfJhl4O9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LRzKzW8I9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      J13DYDQO9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Ip688/gT9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HN+1hr0Z9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FyCvGYIf9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EmGorEYl9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      DpF8XQo49T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      L3DNpIVT9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UU8e7ABv9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ci5vM3yK9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kw3Aevel9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      s+wQwnLB9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1MthCe7c9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      9aqyUGn49T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nmk5W/4D9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hrhtVP4G9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bweiTf4J9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      V1bWRv4M9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      QKUKQP4P9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KPQ+Of4S9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      oHvAO7pt9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vfcSCTuL9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hn/OrCaO9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TweKUBKR9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      GY9F9P2T9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4hYBmOmW9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6fZXGzCV9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lF4mN9SU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kOHHwMaU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jGRpSrmU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iOcK1KuU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hGqsXZ6U9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gO1N55CU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fXDvcIOU9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jMcvk5Au9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EFi4nUcq9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0pTlIL4o9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ldESpDQn9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Vw5AJ6sl9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NXQ3I4ci9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kXHCQ7oD9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      igrJPkrn9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mO0X97ri9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ptBmryve9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tbO1Z5zZ9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      w5YEIA3V9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Jnvz2ui/9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      WTavNYVv9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KR7Nvhlu9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +gXrR65s9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zO0I0UJr9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ntUmWtdp9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      b71E42to9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      QaVibABn9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      I8o6pcdo9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      foZxKRhv9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      80G8vHJv9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      aP0GUM1v9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3LhR4ydw9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UXScdoJw9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xi/nCd1w9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2q/0AGOV9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NUzn72TD9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3WlwujLF9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      g4f5hADH9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      KaWCT87I9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      z8ILGpzK9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      duCU5GnM9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HP4drzfO9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UGXPcMf+9T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vBXhOkss9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      A3Gnpwgv9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SMxtFMYx9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jSc0gYM09j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0YL67UA39j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UKspwEdx9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jwkpYIel9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xFKq7RCo9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +Zsre5qq9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LeWsCCSt9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YS4ulq2v9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5udVd57I9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Pjd+Vhzb9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      dSpWpxvc9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qx0u+Brd9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4RAGSRre9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FwTemRnf9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Tfe16hjg9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      g+qNOxjh9j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LQcBasMj9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      IiaEMqhG9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7Uo/fgdJ9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uG/6yWZL9z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gpS1FcZN9z8=
- - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xt2VYU+UyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uAMSDy+QyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zOl9zKW/xz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3kjSblSLxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /5uNhemBxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      H+9InH54xz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      P0IEsxNvxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      X5W/yahlxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gOh64D1cxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      jTAOq05bxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1mJh7Odbxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      IJW0LYFcxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      accHbxpdxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      svlasLNdxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +yuu8Uxexz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RF4BM+Zexz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      B5+Pvhhlxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Oiaio99lxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qJD23Gpmxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FvtKFvZmxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hGWfT4Fnxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8s/ziAxoxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      h/Q+lexvxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      o0KzSVZIyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LJFRHAZMyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      td/v7rVPyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PS6OwWVTyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xnwslBVXyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      T8vKZsVayD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1xlpOXVeyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RWMXoWZlyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8irbMY6OyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      GzBPoKqJyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RDXDDseEyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bDo3feN/yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lT+r6/96yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Q+j0qa1ZyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ZSXoA7dvxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      y0bmDy1wxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MWjkG6Nwxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mIniJxlxxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /qrgM49xxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ZczePwVyxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Shs3S9aexz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      T4T93favyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TqIxxuKwyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TMBlrs6xyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Sd6ZlrqyyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      R/zNfqazyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RBoCZ5K0yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Qjg2T361yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nroGNLe2yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gYDObyq4yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +T+H3cu3yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      cP8/S223yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6L74uA63yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YH6xJrC2yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1z1qlFG2yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      T/0iAvO1yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sjP47Bh9yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fprjKEk2yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mJmjUvpJyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      s5hjfKtdyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zpcjplxxyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6Zbjzw2FyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      BJaj+b6YyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Teax93ylyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qboaPQCryD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      BY+DgoOwyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YGPsxwa2yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vDdVDYq7yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      GAy+Ug3ByD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0Oe7BZWQyT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hZJ1dtFXyj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      C7EBUf+wyj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kM+NKy0Kyz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Fe4ZBltjyz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      mgym4Ii8yz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Hysyu7YVzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1Ryu13BazD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Kj/UMnORzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gGH6jXXIzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1YMg6Xf/zD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      K6ZGRHo2zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gMhsn3xtzT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1uqS+n6kzT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Kw25VYHbzT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Is+pyAn3zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kZIBab0Dzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AFZZCXEQzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      bxmxqSQdzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3dwIStgpzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TKBg6os2zj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      CHNJR4bWzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gUNsG30Lzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lq1lG44Szz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qxdfG58Zzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      v4FYG7Agzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0+tRG8Enzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gVWR1sMizj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7YQwUWj9zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4YG7sYP+zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      135GEp//zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zHvRcroAzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wnhc09UBzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      t3XnM/ECzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rXJylAwEzj8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tA0yK1Fazz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fT3KusZdzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lf7XDLhXzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rb/lXqlRzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xYDzsJpLzz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      090eAcY0zz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YWgIk6H8zT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5XRiRmHezD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XIXG2snFzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1JUqbzKtzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      S6aOA5uUzD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wbbylwN8zD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sVZojOLEyz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PKlFyk3TyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nE3LTfDAyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      DfJQ0ZKuyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      f5bWVDWcyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8Dpc2NeJyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Yd/hW3p3yD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      04Nn3xxlyD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Knw11FBZxz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Bxa7KvgVxT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      LH5YzQ0ExT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YOb1byPyxD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      k06TEjngxD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xrYwtU7OxD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +h7OV2S8xD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ceU21c1Uwz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      h3VBsR6cwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Wk6qdK+PwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OScTOECDwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FwB8+9B2wT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      9tjkvmFqwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1LFNgvJdwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tIq2RYNRwT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fjQcHswKwD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Xe1JH7y1vT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rj50aECZvT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HJCescR8vT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iuHI+khgvT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +DLzQ81DvT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PSN3tvlfuz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      zj+FGkuxuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      M55ocS6huT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      o/xLyBGRuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      E1svH/WAuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      g7kSdthwuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SOWmOfhGuD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OeUBbihltz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SroKavxYtz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YY8TZtBMtz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eGQcYqRAtz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kDklXng0tz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pw4uWkwotz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vuM2ViActz8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qrAW+gCjuD8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      b1WPH7BxuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Y60KqTl+uT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UQWGMsOKuT8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      QF0BvEyXuT8=
- - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      M2wft1Tz2T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      cI4wOxru2T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MaGfUHys2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      3O6jZbA+2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MVDgB84M2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hrEcquva1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2xJZTAmp1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MHSV7iZ31z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hdXRkERF1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      UjbUxHU61z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HXzZybY21z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6MHezvcy1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sgfk0zgv1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fU3p2Hkr1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SJPu3bon1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      E9nz4vsj1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5tz2yMei1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Kw+6406Y1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      k/bj0/KS1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +t0NxJaN1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YcU3tDqI1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      yaxhpN6C1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      dkPYv79x1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      aIscnz0S1T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      VSlcZNsL1T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RMebKXkF1T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MmXb7hb/1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      IQMbtLT41D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      D6FaeVLy1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /j6aPvDr1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      O/6P02fb1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eG/VW3te1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +ko+As1b1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fianqB5Z1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AgIQT3BW1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ht149cFT1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8EOmkGdV1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      c1HuVPl11D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      z9qSyOt11D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      K2Q3PN511D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      iO3br9B11D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5HaAI8N11D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      QAAll7V11D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JQ6ouRBy1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8pui99db1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rk6VeStb1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      awGI+35a1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      J7R6fdJZ1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5GZt/yVZ1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      oBlggXlY1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XMxSA81X1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Rgy3g5e+1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      eP0dXl3x1T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /GyrIBb51T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fNw4484A1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /UvGpYcI1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fbtTaEAQ1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /SrhKvkX1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fppu7bEf1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ESORpq4C1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FhpWXLZt2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OkULdCnj2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XHDAi5xY2T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      fpt1ow/O2T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      n8Yqu4JD2j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      wfHf0vW42j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      BiXy3aP72j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      NCHoLIIJ2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Yh3ee2AX2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      kBnUyj4l2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vRXKGR0z2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      6xHAaPtA2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      g7wAOdrT3D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HYe4NHgy3j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +Wnjm7ii3j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      0kwOA/kS3z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rC85ajmD3z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      hRJk0Xnz3z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      r3pHHN0x4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FgyM9RFt4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      D/dpxleq4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      COJHl53n4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Ac0laOMk4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +rcDOSli4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      86LhCW+f4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7I2/2rTc4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5Xidq/oZ4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      o+ataTk24j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Cc0GNKRA4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      brNf/g5L4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      05m4yHlV4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OIARk+Rf4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nWZqXU9q4j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      w6j9+pph4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7w6dKA+14z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MNW2+C/B4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      cJvQyFDN4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      sGHqmHHZ4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8CcEaZLl4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      JbRgUZ9P5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YyA9f9Zg5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4FbchRJj5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      XY17jE5l5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2sMak4pn5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      WPq5mcZp5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1TBZoAJs5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Umf4pj5u5D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      087ujjtB4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      8TDEcCQy4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      uBXmfhor4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      f/oHjRAk4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Rt8pmwYd4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5jDPDW0O4z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      IEoT1Gl94j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Es7shVb44T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      FUwHzubr4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      GMohFnff4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Gkg8XgfT4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      HcZWppfG4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      SjRU3B1z4T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2CR3UiEg4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      5kOaOhoX4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      +2K9IhMO4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      EYLgCgwF4D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      TUIH5gn43z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      d4BNtvvl3z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      or6Thu3T3z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PcmOvjyu3j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      OCKJ1Ikw3D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      gWEGot0f3D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      2qCDbzEP3D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      MuAAPYX+2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ix9+Ctnt2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      41771yzd2z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      xvkh1YCX2j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      y1fAFNgG2T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      vc2TmGn32D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ukNnHPvn2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      t7k6oIzY2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      tC8OJB7J2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      saXhp6+52D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      rhu1K0Gq2D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      ebakwE+Z1z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      RCT8XbOd1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      4Efi2faR1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      h2vIVTqG1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      Lo+u0X161j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      1bKUTcFu1j8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      lWlWDud91T8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      yYoI2Qqk1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      YRxSUU+X1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /62byZOK1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      nT/lQdh91D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      O9Euuhxx1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      /hUAGkUv1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      juhhUQoA1D8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      cpSasKD80z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      WEDTDzf50z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      PuwLb8310z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      I5hEzmPy0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      CUR9Lfru0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      7++1jJDr0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      qzj94HDQ0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AOFckODD0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      00OZN5zE0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      pabV3lfF0z8=
  - !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      dwkShhPG0z8=
