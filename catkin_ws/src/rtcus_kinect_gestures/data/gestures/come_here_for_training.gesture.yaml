!!python/object:LbD.GestureEntry.GestureEntry
_GestureEntry__meta_demonstration_names: [come_here_4_2011-12-19-12-09-05_subdemochunk_25,
  come_here_4_2011-12-19-12-09-05_subdemochunk_20, ven_aqui_frente_2011-09-30-13-24-38_subdemochunk_30,
  come_here_4_2011-12-19-12-09-05_subdemochunk_17, ven_aqui_perrito_2011-09-30-13-24-53_subdemochunk_29,
  come_here_4_2011-12-19-12-09-05_subdemochunk_15, come_here_1_2011-11-06-18-24-31_subdemochunk_0,
  come_here_3_2011-11-06-18-26-59_subdemochunk_40, come_here_4_2011-12-19-12-09-05_subdemochunk_11,
  come_here_3_2011-11-06-18-26-59_subdemochunk_35, come_here_3_2011-11-06-18-26-59_subdemochunk_39,
  come_here_3_2011-11-06-18-26-59_subdemochunk_36, come_here_1_2011-11-06-18-24-31_subdemochunk_7,
  come_here_1_2011-11-06-18-24-31_subdemochunk_9, ven_aqui_perrito_2011-09-30-13-24-53_subdemochunk_28,
  come_here_3_2011-11-06-18-26-59_subdemochunk_37, come_here_3_2011-11-06-18-26-59_subdemochunk_33,
  come_here_4_2011-12-19-12-09-05_subdemochunk_10, come_here_4_2011-12-19-12-09-05_subdemochunk_21,
  come_here_1_2011-11-06-18-24-31_subdemochunk_4]
_GestureEntry__meta_demonstrations_count: 20
_GestureEntry__meta_initial_param_frames:
- {fixed: /left_shoulder_1, position: '', rotation: p, target: /left_elbow_1}
- {fixed: /neck_1, position: '', rotation: rpy, target: /left_shoulder_1}
_GestureEntry__meta_max_start_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- "\0\0\0\0\0\x103?"
_GestureEntry__meta_min_count_per_demo: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2]
_GestureEntry__meta_min_end_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- !!binary |
  AAAAQGC3DEA=
_GestureEntry__meta_num_vars: 4
_GestureEntry__meta_sampling_frequency: 50
_GestureEntry__meta_temporal_info:
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAC3ID0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAEyBuT8=
    sampling_count: 106
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAC3ID0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4HbID0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMB8uT8=
    sampling_count: 106
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0p1?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYOvHD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHbKD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFxItD8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHbKD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgMrKD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABhItD8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHTKD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwJbiD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAF4E5j8=
    sampling_count: 94
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwJbiD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANziD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIEE5j8=
    sampling_count: 95
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADAKj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHHiD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAfKD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFA3tD8=
    sampling_count: 117
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAfKD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQE3KD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJQztD8=
    sampling_count: 117
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`%?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwPfJD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgB0xD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALjQrT8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgB0xD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0@d1\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADDhrj8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwA0xD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0 \u0675\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADDgrj8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0 \u0675\x0F@"
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYCC2D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKDfrj8=
    sampling_count: 119
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Mm1D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwCm9D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMDYsz8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwCm9D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIFG9D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0\x18\u0533?"
    sampling_count: 128
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0` ?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoA+9D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgBnzD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOBKrj8=
    sampling_count: 120
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgBnzD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQGDzD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAEBArj8=
    sampling_count: 121
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADAJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAnzD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAayD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFxqtD8=
    sampling_count: 113
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAayD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgEyyD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMBqtD8=
    sampling_count: 114
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`\x1E?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwA+yD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQC/VD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKiSwT8=
    sampling_count: 110
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQC/VD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYEnVD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANqQwT8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADAGj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4BPVD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYBv/D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAwQtD8=
    sampling_count: 120
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYBv/D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQGT/D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOAKtD8=
    sampling_count: 123
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwA3/D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIruD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPyTtD8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIruD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwNDuD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPSZtD8=
    sampling_count: 124
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADAFT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQKXuD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4LLxD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKyEvj8=
    sampling_count: 106
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4LLxD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYPzxD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPjcwT8=
    sampling_count: 108
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0p\x13?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgNXxD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQGC3DEA=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADT0sz8=
    sampling_count: 107
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQGC3DEA=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQKO3DEA=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABzqsz8=
    sampling_count: 108
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x103?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwAq3DEA=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYPfvD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgJTn5z8=
    sampling_count: 91
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYPfvD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwGrwD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgBrn5z8=
    sampling_count: 91
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAC4KT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4APwD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAM7rD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGSluT8=
    sampling_count: 117
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAM7rD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4AvsD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADShuT8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADgFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAINzrD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAbgD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALBWuT8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAbgD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAICLgD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAChWuT8=
    sampling_count: 128
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\e?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIOzfD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoODlD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAP2u4T8=
    sampling_count: 101
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoODlD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAICvmD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKGu4T8=
    sampling_count: 102
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0x*?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQMHlD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIPDgD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPzQvT8=
    sampling_count: 99
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIPDgD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgDjhD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0\f\u047D?"
    sampling_count: 99
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACAJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgOLgD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwE74D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOh2vj8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwE74D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoIr4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALh6vj8=
    sampling_count: 124
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Fv4D0A=
_GestureEntry__meta_time_duration: 4.0
_GestureEntry__name: come_here
_GestureEntry__state: fully_defined
_GestureEntry__use_time_variable: false
fixed_frames: [/left_shoulder_1, /neck_1]
position_variables: ['', '']
raw_data:
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - &id001 !!python/name:numpy.ndarray ''
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [106, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [106, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      4HbID0Cc7Ztn7MXzP/5m2qTR7uc/EBJU0jfqzb8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      6nq9Cvzavw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [94, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      m55p5vM/AAAAwJbiD0DCMSAG7tL4Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [95, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAADAKj9mTjxomy3HP/t9dj4egeQ/6NzTzvZ6678AAACALQbmPwiT2pztpOY/0KTw81EP8D9h
      XLPVIBvdvwAAAIDiq+Y/OQYbWXHf5z/JsRChoifwP5Bmdhrh49q/AAAAgK/o5z9ftSIJNzDoP2gb
      UOPRFfA/UYmUZE2r2r8AAAAAyyLpPwGtFk3o4uY/f6nAypHv7j+jeE+nRv/cvwAAAAB3aeo/GW2T
      dDjV5D8vMoi5nCrtPyrGCSOeI+C/AAAAgFYN6z8/HChcxTbiP0DN3eK6duo/+0jfunLm4r8AAAAA
      TU7sPz/fuU0nXOA/uAM8kVik5z90g7b0tazkvwAAAAACke0/9LJTao6H3z+eyeY6wOTlPwmEAX0K
      rOW/AAAAgBM17j9jwNC7Lw7fP7ULFLoIF+U/DB1g0dAi5r8AAACA0V7wP6tKqt6HAOE/jDr1Wyz+
      5D9MzlJbi+7kvwAAAEClrvA/vv2WNC8X4z8fQdqpEQbnP2c3kCA+6OK/AAAAQIlQ8T8CSin/a6Hl
      P+aDOVdtN+g/fBhFJ3IU4b8AAACAMaPxP0HwYqqcruU/387UeLI+6D+M78uoBArhvwAAAACs8/E/
      FxYBQqlf6D8clFvM6ZrpPwrA4ih/Cty/AAAAgD9E8j/HHCc7vBPrP8f0ckrl2+o/9HspyCre1b8A
      AABAteXyP87IvcZK/+0/dV4dPnL76z/iM0YHPITNvwAAAACViPM/xsNPpPpQ8D/levGgEfzsP7yW
      mhfcZb2/AAAAABPc8z/BUhByO+/wP3jw3ULMhu0/LEmm58p4rr8AAADAkHr0P/T/vtzGuvA/VDaW
      DuCu7D+OeOqHVv6yvwAAAMD4HPU/oanPRGII8D8jXM5KhwLrP81v7jgfL8K/AAAAwKdr9T/j7uOt
      E2zuPxPVtQWD0+o//zobyiOFyr8AAABAaQ32P18eaG+JXOs/aJRDUSC36j/wUNGi8+XSvwAAAMBc
      r/Y/omZLdZkB5z+NyWvyWtboP9+klqMVtNq/AAAAwOhQ9z+3AArGuUPjP+qIdJdEouc/EA8ZBj/a
      4L8AAAAAzqH3P8UUoIUvweE/a+DYiHpT5D/YqmvyoD3kvwAAAIDB5/g/JuWCTseH4j8igOsJLJTj
      PyTemlmrceS/AAAAwF3b+T/YASieRbnlP6ilwW6mDOY/iASCR1mf4b8AAAAAfHj6P4J6VUK7E+k/
      7UgBOq2s5z/EBPyv+SvcvwAAAMCWyvo/lTgBO9y96z/GT23cT1DoP3xMG2Oayta/AAAAQDFs+z/Z
      4oqHX7XtP4nuZ1nfpek/mK11vSXy0L8AAABA1g38P+c+dlZZ0u8/6c7Nmt6x6j8cAcJIchzHvwAA
      AEBUsPw/+5Il+0N28D8LCQiapUXrP1AKFRQHfsG/AAAAgL0C/T+rjZaM3irwP1X7q9gMn+s/MXiv
      OQnqwL8AAABAg/j9PzK6YrkWIu8/Lgx/lVhi6z8zWyQ8dzvFvwAAAAANm/4//RaETCkR6z8oZUiX
      dmLqP1kcJnE8uNK/AAAAwCs8/z8TbbvmG5DmP+0CqxF86uc/XvbSh0p0278AAADg2xQAQF2+BE/U
      4eE/pJM53x7L4z/Jfr+1dafivwAAACAyZQBAYtuY35B64T9Lkr0gkFLhP0OjASZuJ+S/AAAAoGu1
      AEB43rQKjHfiP90GHRovBOA/K8LwBJi05L8AAAAABAUBQOW2BQhJi+Q/u+Sckwm/4D+zhiU9Sf7i
      vwAAAMAELgFAp5lEd6Fh5j8RgBnJnDjiP8ZSZDmWU+C/AAAA4O1+AUCbk+ItrsrnP0RsRrtF7OI/
      8bv/zs0D3L8AAADAms4BQAdDu+5HHOk/IDQ5Sii24z9DOY1adlrXvwAAAIDqHwJAq1/6kp6N6j+d
      1Bnk6AnmP6HPX+SbadK/AAAAQJpHAkBCLg0H3nPsPzISkE3k8uc/rIbiP51Cyr8AAADgi28CQCrJ
      MMAcf+4/gBRAEvF26T+Hj7LCdWW+vwAAAIDc6QJABllnyPIA8D9cyKHlIynqP/Inc8vXuLK/AAAA
      4JNkA0AZJ095nN7vPwM3c7laeeo/jO9InD7vt78AAAAAio4DQJ7cAYmIP+4/rh9oMZ1v6j+qGYf4
      ZwXDvwAAAKCa3QNA5orVs/+56z+toYD9et/pP7eKRd+i48y/AAAAgEguBEDCRD9zhmzoP49d3YV4
      3ec/V29kGG/N1b8AAACA61UEQO2/W4d9ROY/eX6AT11z5T/vpwcJBtPcvwAAAEBlpwRAKlnSzrs4
      5D8CtoNAyIzjPxJ0f2NZjOC/AAAAgLf2BEBmwUDkn2LjPys17ioTEOI/hS4uOP3c4b8AAAAADEgF
      QIbtyytnHeQ/0twgWj3f4D/Ddbr7ZbHhvwAAAIBOcAVAyE7Nmrft5T9izWYOWJPgP9YlLDNY0eC/
      AAAAAMm/BUCYoOeSaPHnP2+dM9tA9+A/fZeqBorb3L8AAABgMBEGQNNoVwa3aOo/vA7hVt304T/I
      YEKP8dXXvwAAAECnOQZAovp6xdwP7D9VhtXnjTfiPzqBbpqY1tO/AAAAYFmJBkD/dN8QLRftP2w+
      aWBvBeI/eQErzbWyzr8AAACAc9wGQLOkYZUzc+4/SIjbYJkc4z+Vq+UJeOXFvwAAACACBAdAdhPd
      6e3D7z9kY07vaSrkPxIKH2nx3rq/AAAAgMdUB0D1vbU+fj/wPwMynblFDuU/Z4VY8EDbq78AAADg
      nKMHQDjQQgPcEfA/9GRp0tCq5T/AeTyVzF2svwAAAMB78gdAKkotF2hF8D9Hvx9TxZzmP99kbynY
      tLO/AAAAIMkbCEAY+stQeGDvP3M2N1u26eY/SQySSQjtwL8AAADA+G0IQARwwE96d+0//jF83rOv
      5j+Ar0anGHvHvwAAAECzlghA5OdHYuaB6j9UPoJLw4/lP+7jJ3ZrBNK/AAAAYBvnCEDO6fAXlCXo
      P7XALOoHXOM/ilEApEHd2b8AAABg8TgJQKQRTGNoOeY/Be+ZNgFv4T+IOod8UxnfvwAAAEAMiglA
      FSLxm+/r5j9KeS5EUF/fP44XN0f0MOG/AAAAQF2zCUCVQaRWcvjnP3xDU/D9Zt4/OVIVZwRx4b8A
      AAAAzwUKQPYD+ywk6eg/XMjq5yMi3j/jUZgMubjgvwAAAOClLQpAUL0w9qYF6j8DBL1eiy/fP/Ml
      DRwIpN2/AAAAYFGACkDF1B5dKWPrP9tSYNMYA+E/3czP3OhU2L8AAAAAN88KQE+Xl8m3qew/vkkm
      EpWb4j/YarX6/RzSvwAAAGA0IQtA6/0yYorF7T+7M6tW5N7jP2NAVBe5w8y/AAAAoNNJC0ApsNKH
      8CPvPw9/va37FuU/PluIF/w3wr8AAADgYpsLQDESztZhQPA/OB9fK0d55j+DGSkPb36evwAAAOAQ
      7gtAX3KnBKlX8D8Grs9yGgPnP1HXTIiXIt6+AAAAgA4XDEAo7KY1wKvwP40nJ1hJkec/MAvoc53x
      pT8AAABAG2gMQPRcLzzx4vA/CQpYATV/5z9TaOoQW4iQPwAAAGDlkAxA75EJqf528D80DqVW7gnn
      P973IqD1BKu/AAAAYEgLDUCZ7NyPA9PuP8/QdFL7eOY/fgsG/BnHv78AAABAfzMNQJYSHBugB+w/
      /NWIu/h45T9VtHRnqkfKvwAAAACuWg1AsvlvxeaG6T9L+JYK1+HjP+z7P4hQ9tK/AAAAQATVDUA4
      7DsV7ZvnP3yKhLJly+E/WQlvqT2c2b8AAAAgDf0NQFOhPebqI+c/uxUpYPa43j+GfeVLz67dvwAA
      AGB2TA5ARG8v89gg6T+exddOMRDbPyi2dyuZS9+/AAAAQLqcDkDmzVXGyHHqPzQNGs2aPNk/ICk1
      hWIS3r8AAADAUcQOQPgJYWtXKes/69V/CMC+2T8sv3mlLgzcvwAAAECPFQ9Ag/lxYw6I6z+McnU/
      UYXbP9DISIonRte/AAAAgCpnD0DszMcaeLfrPyO8pqKX4t0/yTdnTZq40r8AAAAA3OIPQNtbg//A
      duw/6sX6tUP84D8yfu8LckLIvw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [117, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [117, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      TTMGTAT0Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      dj4egeQ/6NzTzvZ6678=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      mXr397rzPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [119, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      G3FEAcfwPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [128, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [120, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [121, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [113, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAABDU/QC6i/4PwAAAACQDZQ/TUnDvx1t9j8AAAAAaMetP1w9UqWEePM/AAAAALgItD+O
      +YtsWSzxPwAAAACc3r0/PUodypDi7z8AAAAAWuvDP8DHL4UMFfA/AAAAAETcyD+H50vWdDrxPwAA
      AACAY8s/YYm5AGY/8z8AAAAAWTPQP/TvhLUWzfU/AAAAAN7I0j+0aWAAQPH4PwAAAAAbD9Q/jqpQ
      ffMr9j8AAAAA3J3WP5yfPjw0UfI/AAAAALQe2T+0hwu1cH7tPwAAAAAHl9s/WXx83V155z8AAAAA
      xtncP4m4EpZUS+Q/AAAAAGth3z+55kxD+FrkPwAAAICX7+A/ZfmX/gWi5z8AAAAAFJThP8F0nBT+
      P+0/AAAAgH3X4j/Bfb41ktrxPwAAAACLFuQ/TbHM5Wsx9T8AAACAo7fkP28UWVgXmfg/AAAAAOH7
      5T+nuBOqKz32PwAAAID8P+c/+XYLypAC8z8AAACAxX7oP13Vg+3MvPA/AAAAAH0g6T+N+7B9ahvv
      PwAAAAAjZ+o/UOBTBX807z8AAACAFQnrP73ywmHfQPA/AAAAAKZT7D+opHkuAs/xPwAAAADDje0/
      Af1FZYZc9D8AAAAAG3LvP4fjUnve5/g/AAAAAHpZ8D8UZyePy9P1PwAAAEC8+/A/eqYpLBex8j8A
      AADAHlLxP9BApNwwPPA/AAAAAF/18T+cG48i91HtPwAAAMD7m/I/gBHms1aX7D8AAAAAcOvyPyR+
      GU+zzu4/AAAAwMWK8z/HPQBVRp7xPwAAAEAKLPQ/5IWWjal69D8AAACALHz0P3lLloX8Hvg/AAAA
      wNAc9T938+uelBb2PwAAAAA9v/U/KZiF4KnS8j8AAACAphb2Pw5HqOhcoPA/AAAAwEG09j/T0Fuz
      8l/uPwAAAABwVvc/q23cbwSG7T8AAADA16X3Py4u4yRrou4/AAAAgCRI+D+QswvnkpTwPwAAAMBp
      7Pg/ImMB78a08j8AAAAAN5H5P4RpAfYrAPU/AAAAwLvi+T8VmNHNmK/3PwAAAACYf/o/RkrLX+vJ
      9z8AAABAdM/6P4muIxxpBvU/AAAAgNxv+z9kQ6cyeETyPwAAAICpEfw/u9zyuaTJ7z8AAAAA1rH8
      P3Mub02ip+0/AAAAQPkB/T/QnikLbEfuPwAAAMCbpv0/5mq/Zior8D8AAAAA10f+P9f+j/W9hfI/
      AAAAQHyZ/j+K9la4uHX1PwAAAIBx2/8/Qs/nig7p9z8AAACgpBUAQJzNz4Die/Q/AAAAgPe4AEDk
      G6o8kUvyPwAAAACXBwFAjYPegsBv8T8AAACgqzABQE1ZU+P0nPE/AAAAwNiCAUD80WFKMc3yPwAA
      AMDo0gFAM/zuT2GC9D8AAACgJkwCQHLFIATfzvc/AAAAoOt0AkBDm7G5uY/3PwAAAGCDxQJAva+H
      Z/8q9T8AAACA0xQDQLeDKIwyBPM/AAAA4IFkA0DuSx7LKtvxPwAAAKCQtgNAUwtJ1xMA8j8AAADg
      Jt8DQL/BdRHcOPM/AAAA4AsvBEBX7quuDhH1PwAAAGAwfwRAAfS7yYZy9z8AAAAgS6YEQOok9e1X
      w/c/AAAAIIb2BEBueSgK1p70PwAAAGCfRwVAKd8NK8zr8T8AAAAAN8AFQHE73L0mWvA/AAAAIMUO
      BkC2K/IBRgvwPwAAACCEYAZAA9D/85nV8D8AAAAAoYcGQA2X+VYvT/I/AAAAgDbZBkC6hURkEiX0
      PwAAAABOKwdA6RksuUpl9j8AAAAgdlQHQMjLLsURDPk/AAAAoNGkB0BxJiQ6LcP2PwAAAECd9QdA
      JfO6F6Vs9D8AAACgdh8IQImoCwM3xPI/AAAAgKhwCEBnnb9liLrxPwAAAOCKwAhAeofwtgqh8T8A
      AADAyOcIQPynvAdjg/I/AAAAADw3CUBg5+xYqT/0PwAAAOBPYglAo/gJNL2Q9j8AAAAAnLMJQErh
      +vm9nfg/AAAAAEwrCkDbRy61+pD1PwAAAEDiUwpAiLAnzT7V8j8AAAAg8qQKQK4tanmu0fA/AAAA
      YFv0CkCxV4SuEmLvPwAAAICXHAtAU9gTXfFy7j8AAADge5QLQNOJ09gaUfA/AAAAwCnlC0CxMyyV
      5AzyPwAAAIBCNgxABxSwH2eD9D8AAABAIl8MQG+08u4DZvc/AAAAYIiuDEBU4B9ILrX3PwAAAMCr
      /gxAFcxWg5cE9T8AAADAFCgNQBYF6jrpo/I/AAAAYH2fDUBRC56BgEvxPwAAAGCAxw1Ainx00Nov
      8T8AAACg/mgOQExZjGstQ/M/AAAAQDmRDkAlQ5EjtPL1PwAAAAAf4w5AuShPH2sK+T8AAADgVg8P
      QENaHOb77PU/AAAA4GpgD0DvY2EFLubyPwAAAEAGsg9A6bEFTdjg8D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [114, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [110, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [120, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [123, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      JfO/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      X+NQu5LiPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [124, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [106, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [108, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [107, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      8T8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [108, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [91, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAC+uRWRdM/wPwAAAICU5+c/fDMZBaiZ8T8AAAAAqSTpP5p4GQRq4/M/AAAAAMVn6j8Z
      ygwOCOT3PwAAAACYCus/Io4MyUfi9T8AAACA70bsPyppRGGTgvE/AAAAgLOG7T+gRdaYw7PrPwAA
      AABu0O4/hAmfc82Q5j8AAACAAnHvP114SrHG/uQ/AAAAQJ5W8D8wzHCZGQTnPwAAAED99vA/HjCK
      AVWx6z8AAACAW5XxP1zSi/Fv6/A/AAAAwArj8T9wGWqOy8P0PwAAAADaiPI/3TXFcmfR+D8AAADA
      1ibzP5i+zrWeJPU/AAAAgG538z9J9qkO+dbxPwAAAAAyGPQ/pu66ybYp8D8AAABAErf0PySHXpHr
      t+8/AAAAQBlV9T9JJkT9gBPwPwAAAIDSpvU/RFgJj3ty8T8AAADAnlP2P6D3bkZwVvU/AAAAgIei
      9j/bNhsVAxf4PwAAAIAoQ/c/AY+Wb9xS8z8AAADAZ+X3P+IFCV/8/O4/AAAAQH+F+D8UVe+TUhrm
      PwAAAIAXd/k/1qGCkecX5j8AAADAmBn6P0cwu6wDCOo/AAAAwO8K+z/SoFTglCPyPwAAAACMqPs/
      MwaBplnS9z8AAABA1kX8P/86lsQl5fU/AAAAgF2U/D8uUGTVi0HyPwAAAAA3N/0/nmwbKGy77z8A
      AADAk9f9P7NuFa/OSu0/AAAAAMsn/j94WDyWJNjuPwAAAADCx/4/LSZeIbLF8D8AAACAT2b/P3hZ
      2chDGPQ/AAAAYFcCAEAWYPBJDaz4PwAAAKDYKgBAXLxHGjXy9D8AAAAAZnsAQKdDUhI/HvA/AAAA
      YKOiAEAR3EjIkornPwAAAOAx9QBA7HeR64dd4j8AAAAAf0cBQNicj39PieI/AAAAAFKYAUALf8ek
      bBLmPwAAAKBXwAFACVlv0lC46z8AAADgFBMCQNWPTZjrdfE/AAAAgIhjAkDdCdnsbez1PwAAAODF
      tAJAHIugwPxC9z8AAACA5N0CQMOfA304nvQ/AAAAgFUuA0BhcOEj7KXxPwAAAKCigANAVtKyPXfO
      7z8AAACAjagDQAVUOXIt6u4/AAAA4MPQA0CsnMLxzlXwPwAAAECsSQRAc77PEFhn8j8AAADg8HEE
      QNwK5l4LxPY/AAAAwNDDBECS88e2aID2PwAAAOAwFQVAGXUJ3hBs8T8AAABAXT0FQPTeZC3svOk/
      AAAAQBuPBUB4nWz8QqDjPwAAACDI3gVAD/75DThd4j8AAABAtjAGQJgaEHAGS+U/AAAAoHFaBkD9
      Jbz5SsDpPwAAACDaqwZA5FJoQMdw8D8AAABA1NMGQE/2dByI3fQ/AAAAIPRJB0CFUv9h1bf4PwAA
      AOCpcgdAcYRTiEiI9D8AAABAvsEHQALVep4LkvE/AAAAwITqB0BoJhIKRQPwPwAAACCYPAhAo2oD
      XIA18D8AAABAX4wIQOZc7fjW5PE/AAAAYE60CEDfEXfHfSH1PwAAAKB0BglAYxgGXo/v+D8AAABA
      Hn4JQOW1caJ7v/I/AAAAYC7NCUALTtffJ+vpPwAAAICXHQpAIpcFZmYH4T8AAABACUUKQFnF4ENn
      /90/AAAAgMuVCkCvZvOz85DgPwAAAGDy5gpAZGj+cOXF5D8AAABA+jgLQPTrgLRNy+o/AAAAgJ0t
      DED0AjVhrPn3PwAAAADBfAxArNhFcJA49D8AAADgH88MQJN8md0PCfI/AAAAgI72DEDuRbY9xPXx
      PwAAAIAc5g1AHnlsRGwX+T8AAAAgWA4OQBV+AvKBD/M/AAAAYNFfDkAWSLKEkzXrPwAAAGA+rw5A
      3BNuYQOi4j8AAABA7dcOQEvndkp/Ftw/AAAAQJkqD0DonKnkD7vbPwAAAMBPUg9AmvncY2Mt4j8A
      AAAAjaEPQHWqXF8UGeg/AAAAYPfvD0AAIjjM6HTvPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [91, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      FmKx578=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [117, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      OZRp7uo/RV+zW9Na9L8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [128, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [101, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAD8gcQpLMzxPwAAAAD9ruE/Rcn0G5Lq3D8AAACAXPHiP3c11on1N9w/AAAAgAGR4z87
      h+xWiQjdPwAAAACP0+Q/7CXdbnYz3D8AAAAAxHjlPw0fxIl+e9w/AAAAANO+5j9GJ2Mf8MPdPwAA
      AIBQCeg/ZBUHH3ZW3z8AAAAAc6voP9VWXNi4xOE/AAAAgMD16T9YzzBmd2jkPwAAAICcPOs/ub4b
      wRky6D8AAAAAD+HrPx6L1DojKu0/AAAAAFMj7T/ii9VPRwjxPwAAAAChZe4/+FVRXIkg8z8AAACA
      hKfvP58VWgel5PQ/AAAAAHMm8D/hrVxZqMj1PwAAAMDWyfA/+RbFgUAS9j8AAACA5WvxPx2tX1uc
      N/U/AAAAwDW+8T9vuFF7QoP0PwAAAMBiW/I/wOdT8kSs8z8AAAAAhqzyP5op1WMuQvI/AAAAQPxK
      8z9k7NH6LVTxPwAAAIBG6fM/xA+GJPXC7z8AAABAGI30P9Oyp5g/1+w/AAAAAG3d9D+XI79Ehf/p
      PwAAAEDcgPU/t/dn4awp6j8AAABAPyH2P2lYC1Llu+s/AAAAAMJx9j/6xG9W+zPwPwAAAMBpD/c/
      MRTrDjLb8j8AAACAI7P3P/vOrUk0UPY/AAAAANVU+D822j10u0f4PwAAAIBlpPg/k8CmJzSx9D8A
      AACAdUb5PzwX8bBaavI/AAAAAH+c+T8q8lGQDUnxPwAAAAAJPPo/2P/E7R0C8T8AAACALtr6P/Ie
      55UB3PE/AAAAgN5++z/Qc5fbIcvzPwAAAEAGz/s/jtZndY8W9j8AAAAAHm78PzCnXmHE0fg/AAAA
      QCUR/T+uy5ssTkf1PwAAAEC1Zf0/lfFqDBDD8D8AAACAjQj+PzxGDzWdGOk/AAAAgL6m/j//O/H2
      TybjPwAAAMCoSP8/y1hDjT0U3j8AAACAfpf/P8JzlndK0ds/AAAAINAcAEBIDqmQZvbcPwAAAMCs
      bABAboFh/N1H4D8AAADg35UAQOCxs6GQaeQ/AAAAoGDmAEBZnLcZ1XrrPwAAAAC+NwFA22mC2LRy
      8T8AAACgIV8BQCNuKFKkSvU/AAAAIO+uAUBF8Js57BH5PwAAAGCw/gFAKqZpJzhd9T8AAADg7yUC
      QJB/hehrHvI/AAAAACWhAkCSZQsMqZ7vPwAAAADJyQJAhMdIPSiD7j8AAAAAw/ICQJyyvIry1O8/
      AAAAAMhCA0DxG4OFzV/xPwAAACBhlANA6q9xftx28z8AAAAgO+gDQFrJ47+hpPY/AAAAgB04BEDX
      1Bctd9z3PwAAACD4XwRAc+zdX2uk8z8AAACg2LEEQEi3QICGve0/AAAAgE4EBUAxWF0SuyrmPwAA
      AICXKwVAAtZTRp1j4T8AAAAAdlUFQJ6jQskOEOA/AAAAgIDOBUAwCw98oj/hPwAAAIBx9wVA7DF5
      +/iX5T8AAADAZ0cGQJQ7YvUsTOw/AAAAQCO/BkBno9a8ClfzPwAAAMBpDwdARdK3kIma9z8AAACg
      MGEHQIXIc1N7v/Y/AAAA4IiKB0DMfAkC4obzPwAAAEAh2wdAGQMaUOEC8T8AAADg3ioIQJ+Hdy/5
      Ee8/AAAAwP9SCEDLL+ESRrLuPwAAAKBtowhAbihD3Rcz8D8AAABAKfMIQLJp9QbW7/E/AAAAgOuR
      CUCkRsBaQhv2PwAAACB5uQlAUeW9+7Uv+D8AAAAgiwkKQDAyuTpU/vM/AAAAYJQyCkBZ5n5rPYXv
      PwAAAODAhApA5i5u9wfU6D8AAADAjtQKQMOCgi1W0+Q/AAAAwCQjC0C/YBS3z9bjPwAAAEDpSwtA
      ILj6CqDK5j8AAADAOZwLQLfgSHvOOuw/AAAAoKHGC0BFbTJe11XxPwAAAOBoQAxAJ6m9Frcu9T8A
      AAAAGboMQOpsXIY2ifc/AAAAwBrjDECdm+bW2K3zPwAAAOAhMw1A36iEnBz18D8AAAAAKYYNQENi
      +YLSFu8/AAAAQKOtDUD3eBZSScfuPwAAACD0Tw5AT5XfN5/c8D8AAADgJqMOQLrlfdPrFvM/AAAA
      IHrLDkBymyLJCsT1PwAAAOBzHA9AiAb8pWfF+D8AAACg20QPQBHcAf5dN/Y/AAAAQMuWD0BKWJVF
      E3TyPwAAAKDg5Q9AU24qlK0M7j8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [102, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Uq+SJJDqP8WZBllCQ7S/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [99, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [99, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [124, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
rotation_variables: [p, rpy]
target_frames: [/left_elbow_1, /left_shoulder_1]
