!!python/object:LbD.GestureEntry.GestureEntry
_GestureEntry__meta_demonstration_names: [wave_1_2011-11-06-18-19-50_subdemochunk_28,
  wave_1_2011-11-06-18-19-50_subdemochunk_29, wave_1_2011-11-06-18-19-50_subdemochunk_30,
  wave_1_2011-11-06-18-19-50_subdemochunk_31, wave_1_2011-11-06-18-19-50_subdemochunk_32,
  wave_1_2011-11-06-18-19-50_subdemochunk_33, wave_1_2011-11-06-18-19-50_subdemochunk_34,
  wave_1_2011-11-06-18-19-50_subdemochunk_35, wave_1_2011-11-06-18-19-50_subdemochunk_36,
  wave_1_2011-11-06-18-19-50_subdemochunk_37, wave_1_2011-11-06-18-19-50_subdemochunk_38,
  wave_1_2011-11-06-18-19-50_subdemochunk_39, wave_1_2011-11-06-18-19-50_subdemochunk_40,
  wave_1_2011-11-06-18-19-50_subdemochunk_41, wave_1_2011-11-06-18-19-50_subdemochunk_42,
  wave_1_2011-11-06-18-19-50_subdemochunk_43, wave_1_2011-11-06-18-19-50_subdemochunk_44,
  wave_1_2011-11-06-18-19-50_subdemochunk_45, wave_1_2011-11-06-18-19-50_subdemochunk_46,
  wave_1_2011-11-06-18-19-50_subdemochunk_47, saludo_sentado_2011-09-30-13-27-26_subdemochunk_48,
  saludo_sentado_2011-09-30-13-27-26_subdemochunk_49, saludo_alto_respecto_cuello_2011-09-30-13-21-51_subdemochunk_50,
  saludo_alto_respecto_cuello_2011-09-30-13-21-51_subdemochunk_51, saludo_bajo_respecto_cuello_2011-09-30-13-22-47_subdemochunk_52,
  saludo_misma_altura_respecto_cuello_2011-09-30-13-22-23_subdemochunk_53, saludo_misma_altura_respecto_cuello_2011-09-30-13-22-23_subdemochunk_54,
  saludo_misma_altura_respecto_cuello_2011-09-30-13-22-23_subdemochunk_55]
_GestureEntry__meta_demonstrations_count: 28
_GestureEntry__meta_initial_param_frames:
- {fixed: /left_shoulder_1, position: '', rotation: p, target: /left_elbow_1}
- {fixed: /neck_1, position: '', rotation: rpy, target: /left_shoulder_1}
_GestureEntry__meta_max_start_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- !!binary |
  AAAAAACIKz8=
_GestureEntry__meta_min_count_per_demo: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
_GestureEntry__meta_min_end_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- !!binary |
  AAAAoLlyD0A=
_GestureEntry__meta_num_vars: 4
_GestureEntry__meta_sampling_frequency: 50
_GestureEntry__meta_temporal_info:
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoLTeD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0p\u01B9?"
    sampling_count: 55
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoLTeD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIK+1D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0|\u01B9?"
    sampling_count: 68
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0 \x18?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4H61D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYD2gD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALAPvj8=
    sampling_count: 59
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYD2gD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoB13D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAACiJuT8=
    sampling_count: 62
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgIj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAINN2D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwFTeD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHxeuT8=
    sampling_count: 59
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwFTeD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwJG1D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFSWuT8=
    sampling_count: 71
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0P\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIGO1D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4NyfD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKhouT8=
    sampling_count: 56
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4NyfD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4AigD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGiRuT8=
    sampling_count: 75
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0 #?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYLyfD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFylD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHCXuT8=
    sampling_count: 58
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFylD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAISlD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMCNuT8=
    sampling_count: 71
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`(?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgCKlD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYDbhD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAACy6uT8=
    sampling_count: 59
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYDbhD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHvhD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJAzuT8=
    sampling_count: 76
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0p\x19?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQEjhD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4BwAEEA=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANRluT8=
    sampling_count: 60
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4BwAEEA=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwDAAEEA=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADhmuT8=
    sampling_count: 81
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x18\"?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAkAwAEEA=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoLlyD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAEhiuT8=
    sampling_count: 65
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoLlyD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAC7sD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADB4tD8=
    sampling_count: 77
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQP/rD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHzID0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPyOuT8=
    sampling_count: 62
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHzID0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwMnID0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAERstD8=
    sampling_count: 77
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10\x1C?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoJHID0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQHrVD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFQKuT8=
    sampling_count: 68
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQHrVD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgCzWD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGCUtD8=
    sampling_count: 67
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0X'?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIM/VD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwCL4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMxYuT8=
    sampling_count: 65
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwCL4D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwE34D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAASKtD8=
    sampling_count: 85
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0H#?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoAD4D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPinD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABR0tD8=
    sampling_count: 69
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPinD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\x1D\x7F\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOBztD8=
    sampling_count: 79
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwO1+D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgHfkD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAECEtD8=
    sampling_count: 72
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgHfkD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4LXkD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKxUtD8=
    sampling_count: 86
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10\x1D?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwHvkD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Hm/D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMRLtD8=
    sampling_count: 77
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Hm/D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0\u023F\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFSXtD8=
    sampling_count: 89
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0  ?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIe/D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFzhD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAADgMrz8=
    sampling_count: 88
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFzhD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIPhD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAIAKrz8=
    sampling_count: 95
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADgFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwFPhD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgFfrD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0P\u05AE?"
    sampling_count: 98
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgFfrD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4H/rD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMjtrj8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0H#?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwDLrD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQATYD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGiMrj8=
    sampling_count: 108
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQATYD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0 \u07EF\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANBhrj8=
    sampling_count: 122
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0` ?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoJ2vD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgMjpD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0\b\u036D?"
    sampling_count: 126
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgMjpD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYPDpD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALDPrT8=
    sampling_count: 135
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACAKD8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYI7pD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAET2D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALDHpD8=
    sampling_count: 148
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAET2D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwH/2D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKDGpD8=
    sampling_count: 154
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACQFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFD2D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQOH3D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABCqpD8=
    sampling_count: 189
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQOH3D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIAr4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0\0\u8BA4?"
    sampling_count: 190
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADAHz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoMr3D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgB/jD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGQZ8D8=
    sampling_count: 89
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgB/jD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgGrjD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwPAY8D8=
    sampling_count: 89
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACIKz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYPziD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQCbLD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGgTtD8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQCbLD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgGvLD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANgctD8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYD3LD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoCbaD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgLab5j8=
    sampling_count: 95
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoCbaD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAE7aD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgFyb5j8=
    sampling_count: 95
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACwHz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoA7aD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYIu9D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPQIuT8=
    sampling_count: 107
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYIu9D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYLa9D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAEQKuT8=
    sampling_count: 107
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0  ?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4HW9D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQDi1D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJlK5T8=
    sampling_count: 81
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQDi1D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoGu1D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAO9J5T8=
    sampling_count: 81
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgIj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAICG1D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYAT4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgFzk6j8=
    sampling_count: 66
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYAT4D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgCj4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABfk6j8=
    sampling_count: 66
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0p\x1E?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoOv3D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoEGcD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALihuT8=
    sampling_count: 76
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoEGcD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYH2cD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFShuT8=
    sampling_count: 76
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10$?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIC2cD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4JWyD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOykxj8=
    sampling_count: 94
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4JWyD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQLyyD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAACqmxj8=
    sampling_count: 94
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADgFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIyyD0A=
_GestureEntry__meta_time_duration: 4.0
_GestureEntry__name: wave
_GestureEntry__state: fully_defined
_GestureEntry__use_time_variable: false
fixed_frames: [/left_shoulder_1, /neck_1]
position_variables: ['', '']
raw_data:
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - &id001 !!python/name:numpy.ndarray ''
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [55, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAABxLx6U8S3pPwAAAABAtZM/clL/9iOf6j8AAAAAIHa+P9y6Lkw0vew/AAAAAJJbyT9Q
      AxToP2XvPwAAAADWx9E/N0+I6b848T8AAAAAICnYPwOujogL5vI/AAAAAE5F3T9ncqtgom70PwAA
      AAAJ0uE/82k6q3W09T8AAACAVVnkP0YRvsLbzPU/AAAAAIv85D8rtb7YnYH2PwAAAIBb6OY/hYNI
      y76N9j8AAACAHY7nP0PsAril3vY/AAAAADB06T9ABmx3per2PwAAAIAcFuo/bJeyg4PJ9j8AAAAA
      6kHtP77kvo40YPY/AAAAgGHO7z+djSRxHhX1PwAAAMBdKPE/tsRvmImG8z8AAADAZ8HyPwvUPKCB
      ivE/AAAAAPUC9D9b1hQGz0rwPwAAAMD9R/U/54pmh93Q7T8AAACAXNz2P59DZlVBme0/AAAAQOQu
      9z8nMQ8kh9/qPwAAAEDrb/g/1CpCr2fU5z8AAACAhLf5P5laH58SGeU/AAAAwKRO+z91WHCRSVDj
      PwAAAMDgk/w/7EEY111I4T8AAADA7df9P7qOtF/vO98/AAAAwFR0/z9BoDZ4vh3dPwAAACBDhABA
      Skju0JEV2z8AAACAuiUBQCdDyCukVNo/AAAAQLHuAUBlmPP7iDnYPwAAAIAIkQJAbS530Q2v1z8A
      AACgUTMDQMNqp4ADO9k/AAAAAMf+A0DDRQRwj93ZPwAAAICWoARANu5/NA7c2T8AAAAA9EIFQObq
      xZ5Zx9s/AAAAYHANBkARwPxhyMfePwAAAABUrgZA1EDaei2d4D8AAACgElAHQFTPPE5vMOI/AAAA
      QNUaCEAEzUE1F/TkPwAAACBevghAf4mFg6mU5z8AAACgu4QJQBkvU9ImnOo/AAAAIMZPCkD99/50
      d7PsPwAAAAAv8ApA/qiCiMJM7j8AAAAAwpILQFZMFBVFePA/AAAAwHFdDEBWiDG3sUXyPwAAAKDy
      1gxACMsbYV1b8j8AAADAfAANQDKG2GMjUvQ/AAAA4OrLDUCSACZKp5P1PwAAAECvRg5ARqpuhomn
      9T8AAACAw28OQJPObo3jEfY/AAAAYPUSD0ASwNrO3CD2PwAAAMBhOw9AXWL3zzwj9j8AAABgiLUP
      QB9w9RpoJ/Y/AAAAoLTeD0C0QqOzM+D1Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [68, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      zD8PUrDeNdPoPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [59, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAC0QqOzM+D1PwAAAAD4MKQ/GGw8dDXf9T8AAAAASHGuPzL2EsvlCfU/AAAAAOAvxD/W
      KU9nbsTzPwAAAADSs8s/JvBRN7u38z8AAAAA/kfOP5sO1jXIQ/I/AAAAANHs0j+UITNOqyDyPwAA
      AABlN9Q/09htuQYs8D8AAAAAh4zaP0Kbumuni+w/AAAAAPKY3z88wUV9oFzqPwAAAIASWuI/eTOK
      NxAZ6D8AAAAANOfkP6SjX4ay6ec/AAAAgLyE5T+7OA7G1rXlPwAAAAA4auc/JvTt2M7h4j8AAAAA
      GPvpP1TtqvmKvuA/AAAAgI4s7T8uwFEgQQPdPwAAAAB6t+8/W+LwQVmX2T8AAAAAqx3xPyXx1cDZ
      vNU/AAAAwFi18j+7NBTkT8vTPwAAAECe+vM/FX5sof720j8AAAAA5D31PxO396mf7dI/AAAAQEaO
      9T+8F8XOBq/SPwAAAAD5Ifc/F2XByoOV0z8AAABAf2L4P3ha9H4r7NI/AAAAQLyh+T9YGUaOG1zT
      PwAAAMD4Mfs/SNAA6IGQ1D8AAAAAhXT8P6uyR9cmZ9Y/AAAAwDS4/T+1i45P/nnZPwAAAMAcS/8/
      KL5szUux3T8AAAAgeEcAQPNrYM+V9eA/AAAAAFzpAEAQPjU2ZY3iPwAAAEAdswFAiBizIbyM5j8A
      AABg8VQCQF+hURtfgOo/AAAAYAr2AkCmMQwFfK/qPwAAAEAWHwNAMub1nTka7T8AAABA0ZkDQJ5W
      l5etovA/AAAAgFllBEDGfLJNCT7zPwAAAADXVQVAMf+QKueL9D8AAABgDfcFQL6PwsBPLPU/AAAA
      QEXABkDqujVl9kr1PwAAAICAYAdADc+256G39D8AAAAgMdoHQCsyB16yp/Q/AAAAwL8BCECQ7xGy
      eXnzPwAAACDZowhAFQvUH4lj8z8AAADA68wIQA1qYiB/jvE/AAAAIB1FCUAlAmct03fxPwAAAECP
      bglAjQwm18A78D8AAAAAaucJQA2S5l7UJfA/AAAAgOQPCkCx6e8Z5A3uPwAAAOBk2ApAeF+CMTkU
      6z8AAACglnwLQJRXdBcGO+k/AAAAQEn3C0ABEfcMAhrpPwAAAMDvHwxA7uS46rZ15z8AAACgGuwM
      QEGxHjb5UOY/AAAA4HlmDUAyrtVFojfmPwAAAEBpjw1AJvDxj6l55D8AAAAgszAOQAJJSdgSX+M/
      AAAAoIr7DkB1KnUEyhriPwAAAGA9oA9Ai46uTTAp4j8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [62, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [59, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADqXiVxAK/hPwAAAABYIbk/oKQMqMel4T8AAAAAKEq+P6w5ae5EnuE/AAAAAArWxj8Q
      n1iCh5PhPwAAAAAYYsk/T9khcNKa4D8AAAAAIsHRP6j5HP+7lOA/AAAAALn90j/eZ8n7i8HgPwAA
      AABUx9Y/xvHO02HF4D8AAAAAIAfYP+FM/Sm+oOE/AAAAALrX2z+2ifsNy6zhPwAAAADtEN0/zHEP
      m7p/4j8AAAAACBHhP2tCnSc/h+I/AAAAgJSu4T+OwHuwnZ/iPwAAAIBLOuQ/4L4/EhXo4z8AAAAA
      WyTmP8+ypm3NH+Y/AAAAAP9L6T+hRTkw2CToPwAAAIAA0+s/kJPTtvC26j8AAAAAP1XuP8nLW8MG
      DO0/AAAAAN268D8PrPgMCs7vPwAAAAAn/vE/+ngUArNU8T8AAADA5T/zP+dygQim0PI/AAAAAMDU
      9D/z/lP9k8jzPwAAAEBvFfY/YfvlFy5u9D8AAAAACVj3P6cNtoGTkvQ/AAAAwPDt+D/F6mGP2jf0
      PwAAAABlL/o/qX3OGYHt8z8AAAAAY3b7P4ObsqAg/vI/AAAAAMy8/D8zSnOBFunyPwAAAIAgDv0/
      SMr6vrP38T8AAADArQL+P3jPSABj6PE/AAAAwHdT/j+dkna+EtXwPwAAAAC+Rv8/ZYCp3KDA8D8A
      AADAFpj/P2KehYHdx+8/AAAAwEJtAECHlrB0Fy/uPwAAAODWDwFABwgjsA417D8AAAAAR7ABQERx
      BHYEEuo/AAAAYD55AkA5evQ/wx/oPwAAACCuHANADYWfrkDT5j8AAABgKcADQN5wote8IOU/AAAA
      AL2JBEDNauXMFWbjPwAAAICnKQVA/trFOhxc4j8AAACgxssFQNExuZqKz+E/AAAAIBFsBkBmPPd7
      VgTiPwAAAGDuDwdAbCBv+hZO4j8AAABgG60HQIzeKn6AouI/AAAAwGh2CED3G8oLcb/iPwAAACAn
      FwlAypAe6p/w4j8AAAAgmrkJQOJT7E2Cg+M/AAAAgDyCCkA5rbznT5HkPwAAAMBIJAtAyoR0eMEn
      5j8AAACgw5wLQK5WH353SeY/AAAA4NjFC0D8qBRyZfznPwAAAMDjjQxAf7O6I85X6j8AAABgti8N
      QKVl96YjD+0/AAAAgJ7RDUBYbAVXVCrvPwAAAIBwmg5A+LuatWmg8T8AAABA1zoPQH4zj7ngnPM/
      AAAAAFW1D0BDtSHXW8TzPwAAAMBU3g9Ayk5gNeBI9T8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [71, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [56, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADKTmA14Ej1PwAAAAAwmK4/nXrRSfKV9j8AAAAAtrXBP/2cQwgvRPc/AAAAAMLyyz92
      a3cG58D3PwAAAABhUtQ/0rvV7h3y9z8AAAAAcCLYP3NtwG4++vc/AAAAAINn2T8bJxG46N33PwAA
      AABZNN0/PgylRvyE9z8AAAAA/MXhP/KC07ozPfc/AAAAADJK5D8tk2zlppP2PwAAAACs0+Y/xZfG
      7K7w9T8AAAAAwQDqP3VACWY2MfU/AAAAAKiM7D97n3xSAG/0PwAAAICxE+8/+QZM3cFg9D8AAACA
      kLnvP4zvCIJHa/I/AAAAAGgi8T8hvsCkJyXwPwAAAMBBZvI/MkYL/Eep7D8AAADAq6zzP7+99WbK
      Zeo/AAAAgJw+9T+fr0Lxr6XoPwAAAAB9fvY/OUxJn73R5z8AAAAA48P3P1ayfuKYxOc/AAAAQL0S
      +D9gcWKKzFLnPwAAAICOVfk/l6Qxbjyv5z8AAADAIpz6PxbHNzjZG+c/AAAAQBjj+z+WfVXcpwDo
      PwAAAADscf0/qPWFQuji6D8AAADAJbH+P9yepTLZKOo/AAAAAO7y/z9Ljw0ySy7rPwAAAIARmwBA
      4TS/jyhF6z8AAAAgBMQAQFBqfF36zew/AAAAoDZmAUAdtpUFd5ntPwAAAGBRCgJAa4GW4h327j8A
      AAAATasCQFauUi3rn/A/AAAAYKVNA0DoYj26c13xPwAAAEDcFQRAyAZikRo88z8AAAAAYLUEQBxk
      6oy03vQ/AAAAQJVWBUCDzKQhi8X1PwAAACAfHwZA3d/P3vRo9j8AAABgPJgGQJ0xy9m2x/Y/AAAA
      wMc8B0C9v4bMOt32PwAAAMCA3gdAyG4xNEbf9j8AAACANQcIQPR0peUWq/Y/AAAAoJOBCECPWIZ/
      dj72PwAAACDvIwlAikcsS08D9j8AAACgAe4JQJZy4I02XvU/AAAA4BJnCkC+RZVadFr1PwAAACBD
      jgpANcMYCTFH9D8AAABghwYLQBr1sOO6EfM/AAAAoJDPC0AlO0BhcEvyPwAAAMCESgxA+4hIIn5A
      8j8AAAAAcHMMQMSVj7JPfvE/AAAAoLftDED7xsaK9KnwPwAAAMBYuA1AFQxiw+Rj7z8AAAAAJlsO
      QKvqGKkM9e0/AAAAwJHVDkAT+MwSGW7sPwAAAODcnw9AvgSxAsQR6z8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [75, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      D5LQLds/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [58, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAC+BLECxBHrPwAAAADQaKQ/FYeBmtXM6T8AAAAA3Ga+Pyy/+V5xj+k/AAAAANLJxj/P
      9g6XNeTpPwAAAADFytE/zw1wY3nw6j8AAAAAc9fWP3pgix0JcOw/AAAAAE6e2j/I3v1IyVLuPwAA
      AAAVceA/rHqGZ1VI8D8AAACA8wDjP2U9uTu4UPE/AAAAgG3i5D9HUnEDJXTyPwAAAICuC+g/70+L
      GFLJ8z8AAAAAbuzpP5D49d/42fM/AAAAgOWI6j8y9fU8g+f0PwAAAIAQdOw/LtEClk+99T8AAACA
      /JjvPxG1asp6ivY/AAAAQKAQ8T8dBwhTbwD3PwAAAAAXV/I/3xmsmC1B9z8AAADA5pzzP6h3nWed
      gPc/AAAAAFDi9D/sCWKpvbT3PwAAAEC9J/Y/0SEcouXf9z8AAADAb273P9jXNWnR/fc/AAAAgN6x
      +D+7ZoaNIBH4PwAAAMCS8vk/x/1VJxQC+D8AAADAjjn7P5rhE5tbnPc/AAAAQKp+/D+i189Wbxr3
      PwAAAMAJcP0/+it1NOSy9j8AAABAHAj/PyD6q9814fU/AAAAwLj//z9oVNHyMgX1PwAAAKAZoQBA
      X27jV8MV9D8AAAAAqkMBQK8pw8BOAPQ/AAAAgKVsAUCEr8yU3yjzPwAAAAAo5gFAEMD62QlL8j8A
      AABgF4kCQC20aDRNbvE/AAAAwDArA0DTKPDkEbLwPwAAAODGzQNA6QvQfz068D8AAABgsG0EQFUK
      PHzoD/A/AAAAYEYOBUAWinj+JgHwPwAAAGDArwVASzZhABJA8D8AAAAgaVAGQD/DrrreRPA/AAAA
      IE55BkC+IaKbaMfwPwAAAKAP8wZAC4GEEDZ/8T8AAADg/ZUHQGDngGO5ofM/AAAA4Ds4CEB0BJVZ
      8CX1PwAAAECX2whAe3Z5W81E9T8AAABAAgMJQIQkHgBCxPY/AAAAQD19CUCMxHaKat32PwAAAMB4
      pglAlBZvXeVZ+D8AAAAA7CAKQA727hXLgvg/AAAA4KDBCkAIy/ZRam/4PwAAAOCH6gpAxA7R9OVn
      9z8AAACgzmMLQJiCmXpKIvY/AAAAYB8EDECndX32yYD1PwAAAEAPpwxAWnOB2DgZ9T8AAADAv0gN
      QFKT16yTA/U/AAAAYMXCDUC9D2Cefu70PwAAACDCig5AK08Xpt1f9T8AAAAgeAMPQAt64mR9H/Y/
      AAAAoFylD0ADlej3xNf2Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [71, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [59, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAADlej3xNf2PwAAAADAn5M/uhiaab1/9z8AAAAAVBe0P0DRE08jifc/AAAAANAsuT9z
      oWbESj74PwAAAACiJMQ/7tyzeiQQ+T8AAAAAqn7QPyzncnHrYfg/AAAAADpZ1D8XBxCkpWb3PwAA
      AADtZdk/LxjTydWA9j8AAAAAMGjeP64Nvir0UPY/AAAAAOu34T+3cRXhanH2PwAAAAD3POQ/tZ3t
      Whl99j8AAACAyszmP8VtMZxYrvY/AAAAACH16T+Y3fRC3jn3PwAAAIBI3es/hYS7cjAU+D8AAAAA
      Y27uP5dFTjNhlPg/AAAAAETP8D+oZVXfWhH5PwAAAEATxPE/J9nlprZ1+D8AAAAAW7ryP+TMti9P
      Zfg/AAAAQJAK8z/b0Jakkn73PwAAAMAwS/Q/Vz8YS4at9j8AAADAQ5H1P7PGrJzQCPY/AAAAwA/V
      9j/vAEI42H31PwAAAEDNGPg/9xqHaozT9D8AAAAAzF/5PzXJZo3dPvQ/AAAAwOOi+j/5bAtWjtTz
      PwAAAEA45vs/75TfT22e8z8AAAAAgiv9P0vmUcHcdfM/AAAAgOlt/j8VoUgDKXjzPwAAAMCQsv8/
      vFB76NWf8z8AAADgmlQAQOYSkBRtMPQ/AAAAQGwiAUAOF5iKxuX0PwAAAMDZmwFAy9rNnSrg9T8A
      AACAyj8CQAH1G6OuHvc/AAAA4HvjAkDTSCm8g2H4PwAAAGCjXgNAs8w/QaNz+D8AAACAEoYDQGqJ
      41rakPg/AAAAQND/A0AwXfl/CCD3PwAAAIARogRAeNRwkaIO9z8AAADAucoEQKcyolB65/U/AAAA
      AIJEBUALKJGGLLj0PwAAAAD35wVAy9Y561S38z8AAABg4YgGQJBbIDKt+fI/AAAAoEEDB0A4wSie
      BK7yPwAAAMDApQdAET/O0f508j8AAACAwEcIQH/7gntTVPI/AAAAQNLACEA+/s7SxWbyPwAAAMBL
      YglAoeMRXKvu8j8AAABgxwMKQL8ZY+ZnfvM/AAAAgASlCkCKpAIMEEL0PwAAAKBOIAtAMUH6PGgU
      9T8AAADgQcELQOPm/pVePvY/AAAAYMxhDEAM7UqCf0b3PwAAAIBK3AxAKXaQY1BH+D8AAACgwH8N
      QKOct+WoX/g/AAAAYNymDUCh8I5uosT4PwAAAICFIQ5AxVK/eGaM9z8AAADgAsIOQKpJ8SBVN/Y/
      AAAAwEBlD0ATmkF1ORz1PwAAAGA24Q9AUgzwDzZc9D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [76, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [60, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAABSDPAPNlz0PwAAAADQK64/ta0IcMCP8z8AAAAAhInBPy1mfu5GxfI/AAAAACQUyT8q
      S20Vg73yPwAAAAA0qcs/1CHjP8Sa8j8AAAAAjKLRP1jenVsLsvI/AAAAACWy1j9AnsoHmvDyPwAA
      AAAdy9s/vz1v8w2M8z8AAAAAjnffP5767EBpQPQ/AAAAgNxF4j/fVGHsnpH1PwAAAACSzOQ/5jC7
      CBvf9j8AAAAA4q/mP0qRGeuxUvg/AAAAAJvZ6T9GpHAUrYj4PwAAAAA7xus/vP/kv8pE9z8AAACA
      jU/uP28K6C5++/U/AAAAgOFr8D9fJ2iFC+j0PwAAAEAAYvE/RvtKV5JC9D8AAAAAjKjyP6aXoge7
      nvM/AAAAAAbt8z+CvjVZamrzPwAAAEDZ3PQ/cLT5A9wa8z8AAABAEiL2P+BBOs5xTPM/AAAAQBhq
      9z87kSLCs3PzPwAAAACsXPg/+SAWhu/c8z8AAABAx0/5P+2whjGn5fM/AAAAQHSe+T8Z+CDIsbL0
      PwAAAMBi4vo/BK7n0kJt9T8AAAAAk9X7P3IDEO9lvfY/AAAAABMc/T+OGz7XJvb3PwAAAEDpYf4/
      0o9+cu3O+D8AAACARFT/PyeGEvpbdfc/AAAAwN9MAEA499M0lSr2PwAAAKDW7QBAbazrk+P19D8A
      AACADmkBQD1fT9A84/Q/AAAAIMyRAUAlEq1NdPvzPwAAAMBiDQJA6ag9A6gK8z8AAADArq0CQMA+
      mHCdjPI/AAAAQDJPA0AskpMxOgjyPwAAAKC4xwNAcHnQ0ZrZ8T8AAABgCGsEQBocu7lG7fE/AAAA
      YHYPBUDEZhQs31PyPwAAAEDYiQVAvSS7dAgX8z8AAACAjiwGQO4KZIbLxPQ/AAAAwHOlBkCJL111
      edr0PwAAAAAezgZAN5t4oT+o9j8AAABAInEHQMV2QQCZrfg/AAAAIKXrB0CS4+eMP/j3PwAAAMCw
      YwhARbO+HBNl9j8AAABg3y4JQI+wgo8aC/U/AAAAIKOnCUCj+i9WPeTzPwAAAKCNIApAWErt2Z3Y
      8j8AAABgPusKQJqYZ78F8/E/AAAAYMZmC0DZcYQofVzxPwAAAKD03gtA7sVinzTk8D8AAABADqoM
      QPhBccgI3fA/AAAA4BMkDUC/x/5KuOzwPwAAAEDExg1AVauzjoNB8T8AAACAs2oOQDuPjsUsAPI/
      AAAAwHHkDkBmDQHvIcjyPwAAAKCAhg9Arwwp1EB/8z8AAADgHAAQQFUpMmavh/M/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [81, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      ABBA+d2o3e8o+D/uAY0h0lzTP4J9jKHYA5I/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [65, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAACedca+UlT0PwAAAAAgBK4/Pd1wjbuf9T8AAAAAVLPBP+yjZ7HV4vY/AAAAAO6Vyz+d
      nmqG1/v3PwAAAAB9mdE/sxQFvCgS+D8AAAAAPODSP/Gq/l6JDPk/AAAAAAix1j+Zs+KOfxH5PwAA
      AACq9tc/qhPVKgrW9z8AAAAATMTbPzus6ovzhvY/AAAAAJuU3z+v8E/i13/1PwAAAICRUeI/9BB5
      IleJ9D8AAAAA5tzkP3oVFjoTKvQ/AAAAgITH5j93tPgzdBD0PwAAAABLWek/M4gnhJR/9D8AAACA
      4DvrP9WHCTxOPvU/AAAAACjG7T/C7mbeWGH3PwAAAIDkre8/M7O05WB+9z8AAACAVynwPxPa5cOF
      9/g/AAAAwAFt8T+bZqywQGH3PwAAAIBaYvI/7ahGuRjr9T8AAADAvVfzP+wwDMa4hPQ/AAAAgCKX
      9D/lzFiAPXrzPwAAAMBbi/U/yP7lQ2Rt8z8AAACAaNn1P4QYE195g/I/AAAAgMrH9j/l2NrP2JHx
      PwAAAAAPDPg/QKu00ZUN8T8AAAAAZP74P0+mGiWoePA/AAAAgAM++j/HnPybq1/wPwAAAMA4Mvs/
      i3MEpw1c8D8AAACAv4P7P7REpijKg/A/AAAAwH56/D81qAqeqg7xPwAAAEDKbP0/CyxsWnGP8T8A
      AADA3K7+Pyh62lqxPPI/AAAAAOKh/z+gUwB+CgrzPwAAAIAzcQBAollmHgga9D8AAADAhhIBQHw9
      bTGSIfU/AAAAgKGLAUBIAbz8vzL1PwAAACDAtAFA9L2cvN9W9j8AAACA6lUCQHxr2UqvVvg/AAAA
      ABbPAkC2T71GAwn4PwAAAICxcANAaocNNNiy9j8AAADgjhQEQD9Io/5fQ/U/AAAAwNGLBEC+wY/r
      azD1PwAAAKCmswRAmgPqhOE49D8AAADgTy0FQGCPDTPKnPM/AAAAoEjQBUDfuYnBqxzzPwAAAKCx
      SAZASN8CGDAW8z8AAAAAxnAGQOWH6WkXRPM/AAAAQHgRB0DFUYjQ3J3zPwAAAGCziwdAKBm6Lp2O
      9D8AAABAFy0IQHwwTIeaRPU/AAAAoLTNCED7dVx3sJj2PwAAAOD6RglA6lQ9yo05+D8AAAAgSL4J
      QHchvolSnvg/AAAAYLtfCkDNw2gt8Af3PwAAACCD2QpAqEb2P0/y9j8AAABABwELQMlybh/CrPU/
      AAAAAAZ7C0BzvCSJfUH0PwAAAMDwHAxALiQr/d7U8j8AAABArJcMQMuEsrmkt/E/AAAAYKURDUC6
      IwBaPtnwPwAAAKC33A1AO9wtejSd8D8AAACg8FYOQHBLTFgjWfA/AAAAwH/QDkAJ50UViTDwPwAA
      AKC5cg9Ab+4PeXC88D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [77, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      S+YW0T+aQyg6RH+RPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [62, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAD0WYMFBITxPwAAAAA4Mq4//i+BBM+X8T8AAAAAjEC0P4n9ypBsffI/AAAAAIKuwT/M
      XQH2cazzPwAAAAA+Yck/gXQgCKvK9D8AAAAAH7vRP/tOP0X+B/Y/AAAAAMK/1j90D2EUlF33PwAA
      AAAUldo/P/Jxrx6g+D8AAACA/HngP5L3sphjXPg/AAAAAENW4j/YAJ8Eyzr3PwAAAACp2uQ/A1Ug
      SbvQ9T8AAAAAY8XmP3jrqEVyCfU/AAAAgDjy6T8LLwmYFNP0PwAAAICazOs/imwvC0/Z9D8AAAAA
      n67tP2hAlu2nD/U/AAAAwEka8D+YRsFgMcD1PwAAAAAdXvE/RIhIvbWc9j8AAAAAS1HyP4v9OwvE
      ePc/AAAAwPqU8z92JpQWKpn4PwAAAIBr2fQ/qANhN7pL+D8AAABAecr1PygEdGliufY/AAAAgOcJ
      9z+oIwoULTL1PwAAAEAs/vc/HpB+9PAh9T8AAADAZ0/4P7KCu9YefvQ/AAAAQOtE+T+lUghBxk7z
      PwAAAIBRifo/WR5aPeZC8j8AAACAS3j7Pyb7mRsAAvI/AAAAwEtp/D8PxtUpmvnxPwAAAAD1rf0/
      Ix0ESlop8j8AAAAAdaD+Pxf3OTMMK/I/AAAAwD3y/j8XqYUmQVryPwAAAEAa6v8/rnbvLOwA8z8A
      AACgaZcAQIZ/OGptyvM/AAAA4P4RAUCpYk/M4vT0PwAAAKDXigFAjX3wMoqA9j8AAADAlCwCQOKg
      jzaV+/c/AAAA4AylAkAMcuVVvAj5PwAAAEBoSANAvU7kgFtM9z8AAABg/sMDQJJulK+2XvU/AAAA
      4HBmBECNs9h7EQ30PwAAACCGCAVAv3Xj7h/T8z8AAADAV4IFQAKJHlIOy/M/AAAAoM9OBkAYeEjR
      Qv/0PwAAAADL8QZAgC38ieVg9j8AAAAgUmwHQJgZv5XIOfc/AAAAwK8NCECvsZfuqpD3PwAAAACA
      hwhALidk/JaM9z8AAADgKAAJQMLyMX+NwfY/AAAAgAaiCUA1dFHp9Ar2PwAAAEDrGgpAEuPS6b1G
      9T8AAADA+7wKQGkjm8bfoPQ/AAAAINY0C0ArZ/8neJj0PwAAAIA2XQtAdKKbNjAm9D8AAABgzdYL
      QEaqeU7Y6fM/AAAAgJt3DECna24+szj0PwAAAEA68QxALvl4pwrO9D8AAAAAMZQNQL37gtIx1fU/
      AAAAYDMLDkAUYMRX+OD1PwAAAADxMw5A9WfAKG7l9j8AAACAkKwOQDyE2CitFfg/AAAA4BxOD0At
      ohrOSwb5PwAAACB8yA9ASB5f+QkV+D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [77, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      s6vq2T9AmSHVVy/Ivw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [68, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAABIHl/5CRX4PwAAAAAwsZQ/I6PiB24v9z8AAAAAoDa+P/9mkXDLtPY/AAAAADi8xj+D
      vuWyg4r2PwAAAADERc4/AvjLGBJP9j8AAAAAmzzUPzPUC0UzYPY/AAAAAD4G2D95JcKRHdD2PwAA
      AAAQ0ds/iii/Hodj9z8AAAAAcm3gP8QgORBF9fg/AAAAgDrz4j/8w4tEh333PwAAAIB23uQ/7jGQ
      1StP9j8AAAAArcDmP8wcr9OvcPU/AAAAgD9T6T+1RCorpyn1PwAAAIAJ3es/zZSLm0Vs9T8AAACA
      C8LtP2pMAI9cFvY/AAAAgOup7z/RX3vWeTD3PwAAAAD8FPE/XP5VgNk8+D8AAABAuFjyP3q2pRsG
      APk/AAAAAG6e8z+zAe1usP73PwAAAAAxkfQ/i7j9iQ1z9z8AAACAtID1P94oZZHocvc/AAAAgGbC
      9j9GETBe0rj3PwAAAMA6ufc/hOsQmYx0+D8AAAAAgKv4P9OLHtwlCfk/AAAAwLqd+T/jyziaUCH4
      PwAAAMDAkPo/IWg/mevr9j8AAADA/dX7Px7AZnNToPU/AAAAgGfJ/D+2ByUD2ND0PwAAAIDou/0/
      EexqqrLx8z8AAABAU/7+P7eSeeIzrPM/AAAAwKjy/z8XsSjb+L3zPwAAAOBumwBA3z/d2qUB9D8A
      AACg8hYBQKkgiSm/qfQ/AAAAAP6QAUDgVU41Dp/1PwAAAKBCCwJA7NgwoHGD9j8AAADAxq4CQHwh
      Eg3cO/c/AAAAwL0oA0A0hX2ThPX3PwAAAAByyQNAtHXyXk1p+D8AAAAAYmsEQDhEIJPCEfg/AAAA
      QPflBEAkD1Wxel73PwAAAAA/YAVAkuxuNIhT9z8AAADACYkFQFd5IK7IwvY/AAAA4OUCBkB8oD5v
      ubj2PwAAAIChKwZA75bNEar69T8AAADgZnwGQFNj7Au87/U/AAAAwPOkBkDVCp0TN2r1PwAAACDc
      9gZAq/r3XGRd9T8AAADgMyAHQFpNwAor7fQ/AAAAoH7CB0Aq+WCxB5P0PwAAAMDXFAhAlVGL7xCQ
      9D8AAACgCzwIQLPcdJJC2fQ/AAAA4C6NCECsPPnawd/0PwAAAABCtghAnawkbZBQ9T8AAAAACDEJ
      QOJkzu/fUPU/AAAA4F5ZCUDCBBboaL31PwAAAGDZ0wlA1Go6psrW9j8AAACAsEwKQIran6wPyvc/
      AAAA4H7rCkALJy5dLfP4PwAAACBzZQtAFtBpZ5g6+D8AAADAcOALQKSh5RXKfPc/AAAAACiDDEBM
      tXbZBCL3PwAAAMCG/QxA3OgBxL4y9z8AAAAg3J0NQP+zGM3BNfc/AAAAoOHGDUAqhbN3aon3PwAA
      AMBTPg5AwDHQo7Ib+D8AAAAg97gOQNwYvN7T3/g/AAAAAJ5bD0AtcbHUnZT4PwAAAEB61Q9AzZ9T
      Uxi/9z8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [67, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAABYJz9TB/N4i6H6P8kwDLOr6tk/QJkh1VcvyL8AAAAAUM+UP7myAB43jPs/B3iKBFhB2T+u
      Z67DWbfKvwAAAACsHbk/ZiVclhF0/D8M/n4f4zzZPzEpinrBBsy/AAAAAF4yxD9lBCvwIIn8P5Zl
      mXUwPNk/dyrqKr0wzL8AAAAA7L/GPzZR3rHxyvw/sizkjAB12T/83FyB5svMvwAAAAA0Sc4/7uqf
      R1gN/T8wxp/THrLZP0YcnAodCcu/AAAAAD3z0j+n5nL2/RP9P3TlF+O9vdk/W+3OF2+8yr8AAAAA
      fT7UPz3DxmTo1vw/HkRrm3Hm2T9y8Div2GLIvwAAAAB1B9g/3bmXQ0JN/D9zeVLUL4LaPzCGgxfd
      tca/AAAAAFPS2z9XPmcCCJD7P4fStkjseds/cq37fkgExL8AAACAVm7gP9qAKK8Flfg/kqn23Rif
      3D/TbdajZ0W+vwAAAADW8+I/89nIG43n9T/7lSEJF17dP0EFBincXLa/AAAAgFDf5D/XiiXsvNXz
      Pw/TOAlHed0/nDWQhS3ttb8AAAAAVcHmP4jg4tKsx/I//Qj24Xc93j9R3IzwX06yvwAAAADhU+k/
      sWd3zd718j/UDHhtCb/dP8OtL64QH7C/AAAAgKk86z92dWmG1v7yP4AKQrWUq90/A8FDMvAbsL8A
      AACA493rP+w1Js16YfQ/RqV+r9u93D+2EuQ3TnK1vwAAAIANw+0/ExCwcaUl9j9kq1uYlTfcPzsF
      9Or9yru/AAAAgIqq7z+0i48c+h/4P81EoNigH9w/VMZ8KCecu78AAABAWBXxP86dr4RxNfo/ah0d
      oxdW3D+qk/6b+OW7vwAAAICLCPI/Y14xHtPp+z9pdEHFaL7bP5u2V8pb47y/AAAAgK5M8z9bPk2+
      qGD9PyVSdT9Tj9s/OMComf4LwL8AAACAmz70P/emH9P+C/4/AbTYYckU3D/RCXxjkcK/vwAAAEA0
      gfU/JQ2d7SvL/T/5FT7TeXjcP+Oh9xzYPL6/AAAAANZx9j8G0nnGXmn9P7Nsv0OHz90/j+1GO0Be
      ur8AAADAw2b3P2wGFLfrWfw/UDdc3kvZ3j+qEMVzUQy3vwAAAEDwq/g/0uIWRRDL+j/jPi0JYnDf
      P52NbMbegbG/AAAAQAue+T+d/u4wMVL5P+k6xB1qEOA/npq3izPqpr8AAADAGZH6PyuL0NqTnfc/
      Voo1uq9Q4D9L46y16xiavwAAAMBS1vs/Am4zVtqE9T+uq5Te13HgP45dDhtNhJG/AAAAwNjJ/D++
      cpR39xn0P3vEwjY8yuA//2Cs6P6ebT8AAABATrz9PxHpGtCT3/I/Y0Uy6pCh4D/zTcgUZBCLvwAA
      AEDB/v4/s/xTMQHf8j+Wm1rVXd/gP4fv7/WvPoa/AAAAAC/z/z8cPzKV6E/zPzTE5zEXeOA/NTTy
      mF4uor8AAADApnIAQG/UZuzDWPQ/RSnKDPue3z9CYyoa6MGwvwAAAIAaFwFAoD5gjuDG9T8DH/SS
      0cbdP0piSjJUf7a/AAAAgCiRAUCoeld//Fv3PzhyL7Osodw/Z4a6l8nCur8AAACAdwsCQBz3k3QH
      VPk/1FN4jt0y3D/AtPHQ9e6+vwAAACADrwJAFtkdA5hJ+z+VRUI91KfbPwN3sCeILMG/AAAAAPko
      A0DLlJ4LnAr9P1yOWMxEi9s/kEGvOL4dwr8AAACAsskDQGSCgHzk3P0/TEf/4Pqn2z8SQyKxwxjC
      vwAAACCvawRAxXp6MevD/D+N8nfig7HdPxHQ+s39cb6/AAAAYDDmBEAyBUUwi9r6P/TaDxXFSt8/
      +H/sD2jGuL8AAAAAjGAFQGVE4hpS0/g/8lPdbtl04D8cqIKvgPOxvwAAAKBMAwZAImJeSsfa9j9G
      KwM1wQXhP34qhvTHuqK/AAAAwI98BkCtiRAnCJr1P/sG1ooGdOE/U44ktDEni78AAADgAvcGQFz3
      3rAhDfU/R7oMKHeJ4T/QNNEDqYaHPwAAAAC5mgdAP72+dgql9D9fW7a9qQzhPxQWUvAki2a/AAAA
      4BwVCEDqVb9hVxP1P/XvSFz5auA/khpLhRGIZb8AAADgZY0IQCq3o7KXT/Y/Tn+ZkVh33j9ZRJp0
      +Z+BPwAAAOCyMQlAnSRslod99z+sd8Zq5dPbP/b7fCqwepS/AAAAwGWrCUAH/GReoKL3P3e5mtKC
      nNs/MU9kLBqmmL8AAAAAENQJQGar5iT/9fg/9aZWmpg42j8bXFBCf/yhvwAAACAITQpAbvgk0aif
      +j/TfFBGCb3YP9BOzNxmb66/AAAAQMfrCkA5QMdm1Rj8P85kj/HBRtc/KcSHHCMXs78AAAAAnGUL
      QBzt+oZcU/0/PwfkJ4iA1j/ttBhpvje2vwAAAMCx4AtAUehY1EY0/j/bfFBjO8rWP6CDzwLim7e/
      AAAAAGmDDEB70Qa+Sqr+P1b8eKK6b9c/MZkyi54QuL8AAAAAwv0MQBegn8Zkrv4/ZY2l/vWE2T9T
      CaG57B+zvwAAAOAXng1A2uKDQnLB/T/HiyP5zWjbP9RRMOl8WK2/AAAAYIEWDkDGn464gKb9P3TV
      NTromNs/8tmy9mNfrL8AAAAAfD4OQMkBBiLdWPw/fI2uAsyn3D+EgSC0ZISlvwAAAEDzjw5Abpw0
      Apcr/D+qTr7yd8/cP9JLXgjbSKS/AAAAgDW5DkC5aFrbcnj6PxLgLE7Mtd0/fCXPLmfOjr8AAADA
      sTIPQJs/hs1bNPo/clBn+kng3T+WZyUYFAKGvwAAAIDcWw9AxixqNS5k+D+87StxtmTeP9PL7ZnF
      e5U/AAAAgCzWD0Bzwmj0PpH2P+LZf4bryt4/p/JS4QNCqj8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [65, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADNn1NTGL/3PwAAAABAuZQ/9DsF4sQJ9z8AAAAABKS5PzOOOPe4O/Y/AAAAANxkxD9w
      /9N4v5f1PwAAAADiBsw/opIAIZQ19T8AAAAAxw3TPxA7uarp8vQ/AAAAACnO1j9CZT5dEvv0PwAA
      AAAxmdo/tsQoI+Tf9D8AAAAAdJjfP5rvBAhzR/U/AAAAAN6u4T9mw/WS8t/1PwAAAIBEMeQ/XJAs
      E4Fm9z8AAAAAaxvmP9AJTNhTivg/AAAAgGmm6D+DKSkfjYT4PwAAAIAeMes/IyFPDLnP9z8AAAAA
      EHbsP1geODz82/c/AAAAAB0E7z9g/FY65Xf4PwAAAEBIc/A/SkfdwOTL+D8AAAAAN2fxP8hgpK1r
      y/c/AAAAwMP88j8iXz01HR73PwAAAADe7PM/z/xpGZk49j8AAABAatr0P4+khOsMdfU/AAAAwJYe
      9j/YUKsHOeP0PwAAAADcEPc/a8Yy6KeV9D8AAACALlP4PwlCa6qSn/Q/AAAAgGFH+T/eWJS6gfv0
      PwAAAICQOvo/FuWHMEu59T8AAACAnTD7P7wrjcpbq/Y/AAAAwGgl/D8RJY6x0Xv3PwAAAMBOG/0/
      708Mlren+D8AAAAALl3+P3bHHqfPHvg/AAAAQHZQ/z9ic86LYeT2PwAAAEC9IABAvXXz5sdf9j8A
      AADg1sQAQErk8YcTFfY/AAAAQC48AUB4wwXset/1PwAAACC8tgFA3blF9tIQ9j8AAADA71gCQDTI
      LdBWrPY/AAAAIMnTAkD899FgN333PwAAAMCeJANA/ivDVAdm+D8AAACgmccDQI/rF5mNxvg/AAAA
      4FtDBEBumOH1yqP3PwAAAGAXvgRAa78WJSmW9j8AAABgh18FQFD2H/sMifU/AAAAQO6wBUC1SeIP
      s/70PwAAAEBOKgZA5RmHf2/t9D8AAACAe1MGQKhJsUAZX/Q/AAAAIK/OBkD8GNu9KB/0PwAAACAQ
      SAdAq9G1Oy8Q9D8AAABgb8IHQGVueexgKvQ/AAAA4AhkCEBxyWmczPL0PwAAAODu3ghAnAeWN3a7
      9T8AAAAgXVcJQP//Ln5ovvY/AAAAICn3CUBowmqmEMD3PwAAAGDCbwpARCLODovK+D8AAACgrOoK
      QOl0inaAnfg/AAAA4GdnC0BhgTlP7Iz4PwAAAGAojgtAQtckCefX9z8AAADgZgYMQEjhk/EjIfc/
      AAAAIA+BDEDQrkk/Zu72PwAAAABM+QxApobCHzHj9j8AAABAHnMNQNqq14frOvc/AAAAYBgUDkCb
      +03gqvj3PwAAAOBsjA5A5Ps8lg/N+D8AAADgci4PQN9uTOsth/g/AAAAAOKnD0De0s0gyJj3PwAA
      AMAi+A9Ain8Y96aL9z8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [85, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [69, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADVc/Bgd7n2PwAAAABwj64/4ePOjAEu9j8AAAAApHu+P/dEimw8ofU/AAAAAODdxj8O
      kwx4Cv/0PwAAAADkiNA/av0cz7SM9D8AAAAAwxPTP9toBfQKifQ/AAAAAJdY1D+iwWvMcJf0PwAA
      AACVK9g/YpNivmyy9D8AAAAAf/nbPzQScqCL8PQ/AAAAACHN3z9N2vay2a71PwAAAACL0uE/sIsV
      2Imn9j8AAACAirnjP1PFnxrJ+fc/AAAAABGb5T9JpS96ptL4PwAAAAASiOc/FXUK73Mu+D8AAACA
      zQ/qP1YM35qEN/c/AAAAgHHw6z87i4tIByn2PwAAAIDv1e0/b9B5up3o9T8AAACA1i7wPw2Z5bqc
      y/U/AAAAQIIj8T+5zeO1fZ31PwAAAEDdFvI/o74Ymoro9T8AAADAYgfzP+HgLy19GPY/AAAAgE37
      8z/UExVynnn2PwAAAEBwQPU/Z6oE0Pmt9z8AAACAbzD2P/f4JuZrk/g/AAAAgLnQ9j/lv+vGa6H4
      PwAAAIAPH/c/BiXuukDP+D8AAADAyxT4PwmIY0BSpfc/AAAAwEoG+T8xgL3TAJL2PwAAAIAL+vk/
      OBOgKrYC9j8AAACAW+r6P61mrtEMn/U/AAAAwADf+z8ahUg75Xj1PwAAAMAc0/w/2x8P4WPU9T8A
      AADAlhf+P+CpGUjrTfY/AAAAALG7/j/P7FJ94zz3PwAAAAAPsP8/VCcr4hYk+D8AAACAlHgAQJs8
      ij1v5Pg/AAAAgPXxAEBWfpFB/dr3PwAAAIDvQQFAxoDtdvPD9z8AAACA4GoBQDkt18LNm/Y/AAAA
      YN7jAUAQ7ZM7fBX2PwAAAOADhgJA1YrF2w5I9j8AAADgxv8CQFo/FMu7ivc/AAAAQNZ3A0BPcaS/
      u4n4PwAAAECS8gNAD0C1y4zI+D8AAABgK2wEQAxM7BW+kPc/AAAAYEPmBEB3kePduqT2PwAAAKCc
      XgVAXWBi+6fy9T8AAADgmtgFQOJO6xuL4fU/AAAAIHkABkDQHOrNS0j1PwAAAACeUQZAW1smYjbz
      9D8AAABgvcoGQPJDkSJf0/Q/AAAAAM5rB0A3dMo5gKz0PwAAAMBy5AdAbrOQL7IC9T8AAACg0F0I
      QNxZMEM63vU/AAAAANTYCEDsOinu5nf3PwAAAOCTUglADb5X0Lh/+D8AAAAAecwJQHHIF7mz6fc/
      AAAAoLRGCkBlfMc5TJn2PwAAAMAm6ApA/WYXdAF89T8AAADA2DgLQBM6rvaLEfU/AAAAwCDbC0D9
      Y+qkS0D1PwAAAKAFLAxAunS6X1169T8AAABgGqYMQEcLyETkxvU/AAAAALtJDUC0uGIoZFr2PwAA
      ACBUmw1A2c4Gw5Ad9z8AAADAKhQOQHLwBoiCIfg/AAAAQOa1DkDV3UGda9z4PwAAAKDmLw9AiWMH
      JvaX9z8AAAAA+KcPQCdsh+WylfY/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [79, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      UPf1PwEnvEYCTN0/bMCFnmGvpT8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [72, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADMswEJPW/1PwAAAADISK4/N+fWz1zS9D8AAAAAnIi+PyvzaoSUTfQ/AAAAAIrMxj8r
      cmgbbwn0PwAAAACoVc4/9lRxoF9h9D8AAAAA3/rSP47YGMVPIPU/AAAAADbJ1j8goMtgtSD2PwAA
      AABrm9o/Iv15FlF99z8AAAAAZWzeP+jIMX0Nl/g/AAAAALYf4T+EOIKQqKv4PwAAAIA5weE/K7cG
      WKJ0+D8AAAAAEgXjP1zFCwybLvc/AAAAAPPl5D/k1NB+QSb2PwAAAACwx+Y/MJs0590O9j8AAAAA
      SGvnP/BXyGdsh/U/AAAAAEKy6D9F8dY16yX1PwAAAACqN+s/mcu99atU9T8AAAAAzn3sP+/tEz6j
      WfU/AAAAAP0h7T+MP5aubrX1PwAAAIDUCO8/nmAvNFYK9j8AAACAcHbwP7smyWUx2vY/AAAAAERl
      8T8wym1my573PwAAAACIrfI/Y4y/vFTP+D8AAACAGFLzP3tsC/Yd2fc/AAAAQDyR9D8OjZB8Xf31
      PwAAAIBIhfU/P7J7eGZu9T8AAADAQMj2PyuO0EEPQPY/AAAAAD2/9z/PtDZYC133PwAAAMDHX/g/
      Dl/ereFq9z8AAADAT7H4P1Dhw8xQZvg/AAAAgOak+T97G4JvwHf3PwAAAIB75fo/FEXIWyuv9T8A
      AADANob7P5UrzQZw/fQ/AAAAgFR7/D9hBQjabMr0PwAAAIA9bf0/g7+nfepf9D8AAAAASF/+P2H/
      yWvmWPQ/AAAAgOCj/z/V+jTu2gj1PwAAAMA6IwBA6IApeZnZ9T8AAADg6pwAQAUeQY6bwfY/AAAA
      YHQVAUCz8pEKMvH3PwAAAACejQFAPXItNjms+D8AAAAAJgUCQMUkhVI5fPg/AAAA4Jp+AkAFzAhI
      K3j3PwAAAODH+AJAJlTkPNCo9j8AAACAi3EDQMx8Rd7/RvY/AAAAQIURBECQJzvo8Rj2PwAAAIAb
      jARAd+1VOsfA9T8AAACAAd0EQMaMqAeVuvU/AAAAIOoFBUDm/x9KCJv1PwAAAID+fgVA3I1x12bT
      9T8AAAAgf9AFQHPBZi4d1vU/AAAA4ID5BUCiRQlo2Ur2PwAAAKDYSgZAIPYVVLEp9z8AAABghOwG
      QC/a9jjk0/c/AAAAgFlkB0DGMvb0ccj4PwAAAOCM3QdAcS7wScr89z8AAABADFcIQJzV59ynsvY/
      AAAA4JnQCEBknksnuT32PwAAACAGSAlAAevScesF9j8AAAAA9b8JQCjNc2/Du/U/AAAAgIlfCkBs
      NgcloB32PwAAAOCz2ApAyNZMqytn9j8AAACgrVELQP1IK4ZmkvY/AAAAYOTzC0BaVd/CG+j2PwAA
      AEBSRAxAbSbCSRZ29z8AAABAw74MQAIcUi7NEvg/AAAAoJ1hDUDc2LU8DLX4PwAAAOBCAQ5ANZZr
      V3b6+D8AAAAAtnwOQFjvlxDgo/g/AAAAoOv0DkBVy9GBhkb4PwAAACD1bA9AR02vVRyg9z8AAACA
      d+QPQOLSRrl1Qfc/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [86, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      4bY6hpuT4z8iR9rgei25Pw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [77, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADi0ka5dUH3PwAAAABAhaQ/RWEiRP7Y9j8AAAAAMHS5P9yvjC+FXfY/AAAAAKxFxD8N
      Sbkr2ej1PwAAAAD0Bsw/dZlkGJOW9T8AAAAALNbRP2gZ7xPfsPU/AAAAADyI1T/01jZkxBL2PwAA
      AAApRdk/+Ba0dsSN9j8AAAAAFhvdP+bONySzY/c/AAAAALty4D8ITbHmFWf4PwAAAAAnXOI/ehGx
      gEvU+D8AAAAA9jbkP+EOdAhQ0vc/AAAAANQc5j+zz7dxsKb2PwAAAICm/Oc/e2lWX2iw9T8AAACA
      sOTpP6NVXXPyAPU/AAAAAPoq6z+7aaEGSrD0PwAAAAAdEu0/CwnK/Gui9D8AAAAAS67tPyTx4LrZ
      bvQ/AAAAgBfx7j/epDb92mP0PwAAAABMaPA/Htyd1yVn9D8AAADAQljxP7N6iXdcvPQ/AAAAAEr8
      8T/kVqdYSCH1PwAAAIBY7/I/oBmVlHql9T8AAACAa+HzP8yvpel0bfY/AAAAgLPU9D9aZek54gr3
      PwAAAMAId/U/YpuECR629z8AAACAGGn2Pws+zkCuwfc/AAAAQB269j8JfjkI2lv4PwAAAMC6qvc/
      qh29UFVv+D8AAADA15/4P59xFltm8fY/AAAAADeT+T8OfTnqNTr2PwAAAEDdMvo/Jh0uEbUR9j8A
      AAAARSb7P+faHM3TkPY/AAAAwNcY/D8EZcu4B+72PwAAAIDPCP0/1eOnX26J9z8AAAAApqn9P7Az
      mTDVo/g/AAAAgD+h/j/G8OOFS1H4PwAAAMDwkv8/wAUxcXEH9z8AAACA6UMAQI0CC9ibdPU/AAAA
      IGG8AECfUTxjsbf0PwAAAACODAFA4WEWNfIR9D8AAABgKIQBQFcxAca2ivM/AAAAwID7AUArOJl4
      l3bzPwAAAKCXdQJAlpWDGvqE8z8AAADAN8YCQD3MHguyDPQ/AAAAgKk/A0A/c8+13XD0PwAAACDC
      uANAMa4J8jpL9T8AAADgfAoEQHuYZnIacPY/AAAAwPmDBEBIOpdbZGf3PwAAAKCn/gRASAufENGC
      +D8AAADgAlAFQFhEcbZU6vg/AAAAoNfKBUDQq9pXCLL3PwAAACBMHAZArLu+WxJ19j8AAABAX74G
      QLEWtPX2WfU/AAAA4EkPB0CeDPdelQr1PwAAAKCWXwdAlvcQglZB9T8AAADA9AEIQOl9GwK4rvU/
      AAAAIAZTCEBN1Y8m83L2PwAAAODyowhAHB75jVAB9z8AAACA8B4JQFOrabA71vc/AAAAYFiXCUAJ
      Y5AHFu34PwAAAGDp5wlAs9WnJVxw+D8AAABADmAKQJjpbHeJfPc/AAAA4EKwCkCrf5u72m/2PwAA
      AADrJwtABdYqe96R9T8AAAAAWaELQHQ2QmKbxfQ/AAAA4BzyC0DCbNQsV0/0PwAAAKCYawxAjyLC
      /m7W8z8AAAAATuUMQMPCnAMw2vM/AAAAgIw2DUD0VqYmbhH0PwAAAGDvsA1AndfrGv9J9D8AAAAA
      iioOQJbvHq4glfQ/AAAAoFZ8DkACa11oHPf0PwAAAKAvzA5A1YGkoX559T8AAACg60YPQAQJCmcG
      iPU/AAAAgMRvD0Df4b6pA1n2PwAAAOB5vw9AoNwqOk4t9z8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [89, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [88, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [95, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      fvw//i+wDNI/3D/iYrQIOF+ZPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [98, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      4GCaD0C4gNR5SlzwPwAAAIBX6w9A6biU499t8D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [108, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      9j8AAABABNgPQG9KgvcZLPg/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [122, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      368PQITg9QpdqfY/pJ67z/lf4D/KH6KfrSzKPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [126, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      t5MW9j8AAACAyOkPQORoMx3MHfY/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [135, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [148, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAC/HYy1K/31PwAAAACQb5Q/SVO/S7mc9T8AAAAAeHiuPyflTasNCfQ/AAAAAORHtD/x
      Bg7H3HryPwAAAACsV7k//ys99bHt8D8AAAAA6szBP6Fdm2xK4e4/AAAAADRgxD/ZwEnYkUztPwAA
      AADSSsk/kg7Keg7K6z8AAAAAaMPLP7Wk2xGJWOo/AAAAAKBp0D/e2uFHIKDpPwAAAACbq9E/pLYK
      6q+c6T8AAAAAbTbUPwvKDPIEV+o/AAAAAAJ/1T/+BzeMb6TrPwAAAAAdx9Y/8BqDe4PY7T8AAAAA
      TE3ZP9D3RkfTP/A/AAAAAE6W2j91Vq+07Y3xPwAAAACRJd0/elxH3pWh8j8AAAAAymzeP3XcKUnO
      2PM/AAAAAGx54D8a9NUkB+T0PwAAAID/HOE/NpyBzHu89T8AAACAwGTiPzIC1bb9RvY/AAAAAAsK
      4z/o23TWn572PwAAAIB0r+M/+W5jB/WX9j8AAAAAt+7kP1E/pu9hXfY/AAAAgHCR5T8zcZK+IQ72
      PwAAAIBF0eY/E5tfu92A9T8AAAAAkHbnP0IF/shWNPQ/AAAAgKe56D8CRuMJ3czyPwAAAIAAXuk/
      yA4IHd1C8T8AAAAAGqTqP1mSeG5JL+8/AAAAgCFG6z8S02WJdHLsPwAAAAAx7Os/M/NlQKhV6j8A
      AAAATjXtP8yGdBLRTek/AAAAgD7X7T+Qdc1EGzHoPwAAAIBXdO4/MHSsM9S05z8AAAAAjLzvP+8c
      TpPwX+g/AAAAAOgw8D9NaXqoZeXpPwAAAMCz0fA/1mxn8Eon7D8AAABAWCLxP5kBwBvckO4/AAAA
      wO3C8T90HXLTzJTwPwAAAAAfEfI/AJsfBXgA8j8AAAAAZ2LyPwn+l5t2afM/AAAAACID8z/OWRQf
      lNL0PwAAAMByUvM/JCjwf7/a9T8AAADAnPXzP71f2aoEdPY/AAAAAFhH9D+p2ZvqV9D2PwAAAEBo
      mfQ/YshGLpUG9z8AAACAsD31PzX/fDzu3PY/AAAAAByP9T/5adccLY/2PwAAAACsMfY/QSoe7hbN
      9T8AAADAfYD2Pyp462mOg/Q/AAAAgL0d9z9DU3t5vD/zPwAAAEATbvc/2DR+wOXY8T8AAADAHRL4
      P3CBX1KsUPA/AAAAQDJk+D/UKXbw4gjuPwAAAEDrtfg//Mbe4C406z8AAADAvVX5P5OojagSbuk/
      AAAAwEyo+T+8gC6QK23oPwAAAMBC+vk/eFktcUah5z8AAADAcZj6P1ESKU6oAOg/AAAAgI7q+j+X
      ejq7P0DpPwAAAAAbj/s/72TTqWJG7D8AAABAGuL7Pxc4Y+N5bu8/AAAAQLg0/D8fEP46IjXxPwAA
      AABl0/w/N8qXZ4F98j8AAABAtCP9P89vhlbLyfM/AAAAgFLB/T8BTlZz7t70PwAAAIBWEv4/wEv5
      Wo2c9T8AAABANrP+P+xNdg97FfY/AAAAgLEE/z+LDxen4SX2PwAAAMAwpv8/faKesVDi9T8AAABA
      XPj/P41XlLJKkfU/AAAAADAlAEDdv1wKy8T0PwAAAIBudgBAFcsdUEio8z8AAADAgJ4AQMf3SeSl
      nPI/AAAAYNnFAEBlbaDObTHxPwAAAMBgFwFA7u0/kVbI7z8AAACAWEABQFqcf6wkLu0/AAAAoKFp
      AUDinggQaUPrPwAAAEAvvAFA88fYT9Vk6j8AAABAu+MBQJ4OiAUX7uk/AAAAwEgLAkBe1OJ9y6zq
      PwAAAIDwWgJAUzPJbiuR6z8AAABARoMCQH30/ztr++w/AAAAgHCsAkBe6BC0WzPvPwAAAECy/AJA
      dp7JvPXP8D8AAABghCUDQHqBMFb7NfI/AAAA4Md0A0B3a9eeLV3zPwAAAEDInANA5ktv4Wkv9D8A
      AACA5MQDQLNfUfxqKPU/AAAAADoWBEDgq1W4h7r1PwAAAABKPwRA2Sb0jLYR9j8AAADAHWgEQP2F
      9//uIPY/AAAAQPK4BEClTeojnhv2PwAAAGA14ARA48B8hlv29T8AAACgXgkFQBca0YQYffU/AAAA
      ADdZBUCMIBX9xcP0PwAAACCIgQVAFcWiteoX9D8AAADA0KoFQCB/E/FD5fI/AAAAAIL8BUBi8ysi
      OiHxPwAAAACIJQZANdwUJQz77j8AAABgNXYGQHLL1rJ8Auw/AAAAoGmeBkAHeUU0sknpPwAAAAAA
      xwZAcVbT6G1p5z8AAADA+BcHQDe0u+Bys+Y/AAAA4BZBB0Bm6CYF5sjmPwAAAIAUagdAb3No0+Ia
      5z8AAACgxbwHQAlXNR9LZOg/AAAAgLzlB0CFGzbJ7PHpPwAAACBjDghAvYKWJ0y36z8AAABAzV4I
      QBAw/klF9e4/AAAAAMOHCEAiAo7iZF7xPwAAAMBzrwhA1P9fo1gj8z8AAAAguwAJQOyvROfdqfQ/
      AAAAgNEoCUCx9oJiFs31PwAAACALUQlAKoQNmnWP9j8AAABAdqEJQBxwCE3EDfc/AAAA4AbKCUCG
      YlBvPCf3PwAAACBY8QlAF1V6RHD89j8AAABABUMKQO9JddweLPY/AAAAIFNsCkD+DtH1mqP0PwAA
      AMBXlApA31Mwacce8z8AAACAducKQL3SgfW6QvE/AAAAQCIQC0DZWfqDXfbuPwAAAGA+YAtAfxr0
      cvga7D8AAABg6ocLQPDBgiOhhuo/AAAAwFCxC0CI1pw+ZSbqPwAAAKCwAAxAK0WsZxUh6j8AAADg
      0CkMQEVkSTx+/uo/AAAAYMhRDEA6KQos1i7sPwAAAIBEegxAVXTHWXBI7j8AAABAv8sMQAMrgbpA
      3fA/AAAAgFL0DECerOH8G4PyPwAAAKBwHQ1A9K4yxcVT9D8AAABgvkYNQC9qb6RA6vU/AAAAAFmW
      DUBQbbF7Mmv3PwAAAOCovw1AUUgsH/1q+D8AAAAgfOgNQL+5jRU38fg/AAAAoEc6DkArrDSrK5H4
      PwAAAEBQYw5AFme/ES1n9z8AAADg/4oOQPR+xbkI+vU/AAAAYAfcDkDtqckZ1zD0PwAAACBjAw9A
      E4HH/Yx18j8AAADA/isPQFCxhA/pDvE/AAAAYMdUD0AegxoFC+ruPwAAAMDlew9An99Iku0H7j8A
      AACAD6UPQHId77FqMu0/AAAAAET2D0Dj++8J84LuPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [154, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      D0DOZ3uu+wYAQPSIRFCxfs8/wdh176uE4T8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [189, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Ye0/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [190, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [89, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [89, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAACIKz9bgu0ElKTwP9qKhZWlm7Q/JIca56oywj8AAAAAzRnwP0mlGjik1fI/wcoK0ffJzD8n
      xU1wHGLHvwAAAIDouvA/LKU/aEeV8z9LE+WjSEzKP2MMjrcVYMm/AAAAgCdY8T92ZgrOwYb0P5uO
      CFeY1Mk/A9VzX42cyb8AAACAZPnxP3WoKwlR8PQ/JKtCOagvxj/jji3fgCrLvwAAAABNmfI/OFIw
      nQ5m9T+PjpjKZWvFP3e7jWPeKMu/AAAAgPjq8j97i5TXK/z0P1GypjXOd8Q/SfThOqrgyr8AAACA
      ejrzPzY9iwdC5PQ/F6e/oLWCwz/51HKr0qTKvwAAAAAw3fM/p/Ocxwnf8z/olrw25LTBP3/av+Xr
      JMy/AAAAwM9+9D+taxb6sOTyPwfoltbCULs/w8FkiX6ozr8AAADAhyD1PzgLpVlma/I/H9EkRofY
      uD+yNOz10wrQvwAAAIApbvU/PrY7L3NN8j82/Gw95H+2P7LB9W1q8s2/AAAAwE8U9j/iyQ55f8vy
      P1L2GN298bY/pG2AQiCnz78AAACAfLT2P1XairM9YPM/HbMNI7ofuj+yCDPcbI/MvwAAAIDPVfc/
      8Bqd4wS29D8Id9zO+V7AP03g9Mu+Esq/AAAAgGel9z8t/+7eZAj1P2vRdTe6ZMI/yUU1tzE7yr8A
      AAAARkj4P4uxzkP9fPU/fEPzQq5VxT8u6rhTcRfFvwAAAABB6/g/Jqmkeody9T9FFDFjNOHHP7/v
      zSXoHsG/AAAAwFU6+T8zJn9Ize31P4w5MiBoYcg/HHEY3sjQtL8AAAAAptr5P49OfVjnvfU/WbP+
      QUjfyz+Wtqr0QxqgvwAAAAB4fPo/eJbx/jfZ9D+An3slt2bIPzmo2uq+95G/AAAAgJzM+j9UEsd/
      flz0P6y4fItFtck/T6XOrGlogb8AAADA7W37P11/3h4tu/M/jeGLMC2Iyz93qKR4mM2cvwAAAAA5
      Evw/bFP9Pr0Y8z+UQ1GsyDvMP24DEFAGZZe/AAAAQEhk/D+L12x6QubyP7wD0qP+ucw/vw8EVgrv
      hr8AAADAxAP9P42SSu3+5/E/c9fRCTQLzD/213UPyZ6SvwAAAICipP0/VpWwn12a8T8shzOS4cTN
      P3gizHtw75u/AAAAgD/1/T+nG6m+vavxP+eX2TT8K8w/P3yQ1GjClr8AAAAAe5P+PyRlRTkD4PE/
      N8WVxMzmxz9PTw57C4uqvwAAAAB2NP8/7UXFI8+C8j+EwgJybzTEP1WRovtA2LK/AAAAQB2H/z8G
      +lI0nQryP+u/pekmosI/89ldRUp4ub8AAACAvxQAQDmSYEVyDPI/tTSLoaaWwD8GgK05IXe6vwAA
      ACBeZQBAB2fpkxyC8j9JqseT+hK9P5pVcoo5Rb2/AAAAoMoJAUA3Radjoj3zP7xuUkCnIrY/r6Rq
      8axlwr8AAABAejEBQC7xYfdkbvM/OmYlE3iIrT9z+weVIebIvwAAAEDpWQFAwNgm7TTE8j8x/5vG
      OKugPwdP8/zf3cq/AAAAwBvSAUB5OmM+/c7xPyy8G/bOYJI/QCNQuceJy78AAACAkfoBQGBges6k
      3fA/fd+Kix/AZb8gxBH4A5nQvwAAAKArIwJAF4W0MJmB8D+7HiXyzw6Qvwc9MynyDdG/AAAAYJlz
      AkBpCAXW5xjwP/5qLId0GJy/vWL36kbx0b8AAADAlcUCQHOUS4BtgfA/pHrTiethnr89ueOUf/HS
      vwAAAIBCFgNAB0+GQ9MC8T/zhrlpSmybv0M6PnhRvdO/AAAAIJpnA0DRud60WF/wP/SVNMRS+qO/
      w/ovA5jm078AAAAgK5EDQGySLT9CkfA/BWf5EqDWpL+cX48AtSrUvwAAAEA44gNAupfddM6l8T+i
      MMoe3C+kvxUCN3DKfdO/AAAA4EwzBEA8rxyP6ovyP+dAUoEq6pu/jcNiptKJ0r8AAAAAbFwEQJmp
      qiR6JPM/+oIHecFEeb9/xnGUQ0fRvwAAAIDjrgRAOq2aoXFo8z/AD4AB5NCOP5rbDHmVSs+/AAAA
      oOjWBEB24ewag3bzP45d1BdSwKM/tGK/6ruIyL8AAAAAKSYFQMTb8Px15vM/K7bm5rrNqz+TE9Kk
      mJjDvwAAAEBkeAVA75ypoRx18z+cHjDogiKxP/8KDFR+D7m/AAAAYPjIBUAVyYDtjHLzP1NdY7+D
      ark/9D/smgbptr8AAABA0PEFQL+VhuM0PvM/qv6/SqvWwT8ugNQEXamyvwAAAIBLQAZA4KmQvdey
      8j9ymI5krfnHP1LcJXp+iri/AAAAQFCRBkAD6FEUsrbyP51z1+aQgMo/KSL/O+gRub8AAAAAzLgG
      QN4zL7U/zvE/37Q2yS3Yzz8WrIr75Uu6vwAAACB/CQdArA/PmlGS8D95U8znOJfQP8bcMfbHgL2/
      AAAAwGpaB0AH/g5d+wTwPzWKifztGdI/kof7Y/shwr8AAACgI6sHQKti4479dfA/wbNIu9Ym0z+i
      XMCmfCHBvwAAAIDu0gdAR/Gcy6Yj8T9UKIlmX1HQP9uV8sMgqcS/AAAAwDYlCEAwatDHsSDyPxkA
      pefFVcs/+/203M6Twr8AAADAW3UIQAJqmbJ0HPI/o7RcDXc1xz+efew/RNLDvwAAAOC0nAhA6pk7
      Ax9T8j8tus40SKPDP2AXu3R23sa/AAAAwAXuCEC59/BLS//yP50BIHiWlMA/UnJNx6m1y78AAADg
      Wj8JQFgtsADHY/M/UC1tUkFBuj/8VtIiacrMvwAAAKC+aAlA9BoAZPbm8z9WJHkFPzC1P8PeqrYu
      uM2/AAAAQLW6CUBkbizbARD0P0hQhU9+f6c/oaShkMpFz78AAABAhAoKQEr2oNFnZfM/7JzouRQw
      jj8jgrLa757RvwAAAEB3WwpAw+Ad1hyp8j9JqBk9dJ5zP75hg1FT9tO/AAAAAMKDCkB7KsRe27rx
      P6A5iifOfoq/Os+xphkP1r8AAABg79MKQEgclf/MePE/zmvRp/ZzOz+TNoCSrAHWvwAAAKAMIwtA
      HuIRiA3g8T8JvCiTQR5bPxZdSIihWte/AAAAIBhKC0C/9hzUdJbyPybfBqkbAG8/7x9tCcjE2L8A
      AACAUJoLQABwSVEbdfM/4N13W6JTiT+tP53bi67ZvwAAAMAJ7AtAQZUxy4MJ8z8lJbhPGgpUPy/k
      tCWr8Ni/AAAAYFk+DECagZXPgNDyP2bN4EXNgIQ/kWN3eS3g1r8AAAAAq2YMQHsU4mQYXvI/IB8L
      V2uUgj/rw/wbYuXVvwAAAMD6uAxAslILmtcu8j/iF5yH8Np9P7nbQ3iqnNS/AAAAQKrhDEBEZ0FC
      K6rzP1apqe7l/VO/nZngsV4p0r8AAADAxzINQLxC904dpvQ/Eixv+wQUM79ZBjk0hEbQvwAAACCC
      gw1AdM0ZEHYI9T/v6NREfGdyP8mvANkv3su/AAAAABTVDUDis3SHfnj0P5BEcybLinc/bgF6YOQc
      xr8AAADAAP4NQOlbSbQKFPU/qfD0ZJjBlz+rfIC5KkfDvwAAAAC3Tg5AzSapgHxa9T9llcHYKFai
      PwWEzB0ZZbq/AAAAgKLHDkBbOMHLh5D0P/3NjOfjk7o/AzjDzp0bqr8AAABAxhgPQBy/erhCh/Q/
      Ce3oMgLiwz/4o2VKIX5lPwAAAICdaQ9AQuT2yYoD9D8lUls4XnbMP/p0fJauDLI/AAAAIDeRD0Cf
      L/ONEx7zP+pqzGSUqM8/H/3Z4Go0rD8AAACAauMPQIP6c5KOxPI/MTxqRqw60j+tsLOaoDmxPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      AAAAQCbLD0D3r66R9vrtPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      977TSb3Wvw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [95, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [95, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Yvw/H2bJfe/kqD+hKZi4HwXhPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [107, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      2D8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [107, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      5YvaPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [81, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAA3FqhgzrzWPwAAAACZSuU/jCk+N8iu9T8AAAAAkurlP1YlNXEcp/U/AAAAgMAv5z83
      yCMuF2D2PwAAAADtcug/rKl+BzQe9z8AAACACLnpP3Ul4MpEOPg/AAAAAENY6j/i5wCgAVz4PwAA
      AACfPuw/E51mj6PK9D8AAACAgn7tP88C2nojcfI/AAAAAAvF7j/N4rT4RQXwPwAAAAACZ+8/uv/s
      8zI56z8AAABAlJTxP6EwQT18reQ/AAAAQPPk8T+q9hU8SZfgPwAAAMBmJPM/Detk6M+73z8AAADA
      8MTzPxo2/EO4pt8/AAAAgB0V9D9Z3OIwf6rhPwAAAEDwuPQ/MmGinl/v5D8AAADAGAr1PwekkkfJ
      S+k/AAAAAKL+9T8K3/Td6kXuPwAAAMAhTvY/iFVK48G68T8AAABA/e/2P+nkY89i/PM/AAAAgKZC
      9z+0YCuvREv2PwAAAMAT5vc/8wgYpT6K+D8AAABAoon4P1/qgz9G1/c/AAAAgEQp+T/zHavZreX1
      PwAAAIAuePk/0GZwr7SI9D8AAACAZBj6P6nxicVb0/M/AAAAAJy7+j/TjIdGFDjzPwAAAECiCvs/
      otLBgI4a8z8AAADAiaL8P9vo7Vv96fQ/AAAAQLZC/T+N57gew933PwAAAACW5P0/d4poaohx9z8A
      AABAAIb+P4ZjrfSMl/Q/AAAAQJ3W/j+P+VxbzKDxPwAAAAAMd/8/6IC+bAmk7T8AAACgUAwAQEda
      joyI4Oc/AAAAQBk1AEAKkMMAkYfjPwAAAKBk/QBAbUEhtbS13T8AAABgB04BQHL+BJylqNg/AAAA
      oFmdAUA8v0abpDjWPwAAAGDU7gFAu6NXXeg72D8AAACgBxcCQKxb1MwdK9s/AAAAIAVoAkAHa42z
      +hDhPwAAAKACuQJAIH9f9CPC4z8AAAAA2eECQMCDbnzrOeg/AAAAoE0yA0A4SvC8mrfsPwAAAECB
      ggNAb6iaaJ858T8AAABAI6oDQEJHC5rjvfM/AAAAQCP8A0CXBFGSDVD2PwAAAKDDdQRAc6+n20ez
      +D8AAADA28cEQNEvj6iJd/Y/AAAAwGMYBUD7JkHvgZr0PwAAAICvQQVAKSPMBJmh8z8AAACARJMF
      QEUNmV/1LPM/AAAAgLfkBUD5/5BnptvyPwAAAKDhXAZAXm2I+w368z8AAABA+64GQJz2uESPDvY/
      AAAAoNPXBkA1nSe/YxP4PwAAAMDAKQdA7f9H3+jb9z8AAADgulEHQFjLArf0H/U/AAAAgNL0B0Dg
      eilmGUvxPwAAAGA9RwhAZN0ajAFH7D8AAADAYpgIQFn3zdGjCug/AAAA4G6/CEDu6CG415fkPwAA
      AGAFEQlAThNMbgY74j8AAAAghDkJQKdGeOjsmeA/AAAAQPdUCkCcjua6ymThPwAAAMAspgpACy0A
      D/Bv4z8AAACgWvYKQO/Gj0cTN+c/AAAAYFgeC0AxEXDct6PqPwAAAICibwtALsE7Ky9e7j8AAABA
      wZcLQJdZwNgG0PA/AAAAYP45DEDky+48FAn0PwAAAOCa2wxAHIJEk97P9z8AAACgF6cNQC97p8W2
      pfY/AAAAoIlwDkDIZL/PIpH0PwAAAODcmA5AizPp3bbZ8z8AAABgDekOQGtRKB7GSvQ/AAAAIAk7
      D0CVqaQSGp/1PwAAAGDkYg9AhLjhwbCO9z8AAABAOLUPQEMW/aezJPg/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [81, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      tQ9AoWTQPimP9D+zv2FsD5qTPzukSVNdreK/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [66, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAAVc5BN3Wv0PwAAAIBc5Oo/SPAuGsi89z8AAAAA48XsP1Hb2kiN3PU/AAAAgDLw7z8/
      UpcYG/XxPwAAAMDbJ/I/Qdl6EuQE6T8AAACAd3nyPwBQVMHt4+I/AAAAQPkY8z9G2Hj0JuXgPwAA
      AMBnuvM/A+zf/jlA3z8AAABA+wv0PxUby/Fqot4/AAAAQBOh9T8k1sXzebLiPwAAAIB05PY/Jbfw
      UdhY6T8AAADAnTb3P8nTduzDC+4/AAAAQFrc9z+q8llOAxHxPwAAAACPd/k/+TcXm6U59T8AAAAA
      sAn7P0zwqpxCTfg/AAAAQHuZ/D+x8v4w2kf1PwAAAEA32P0/cDdAaF7E9D8AAAAAcCb+P38+erTP
      EfY/AAAAgLHG/j+FFa+t+5/3PwAAAICpZ/8/QRoNagji+D8AAACg6nsAQDwA4HxQ9/Q/AAAAgGXM
      AECImmJl+3LxPwAAAGAb9QBAvtlyn0X37T8AAABAwL4BQFlRbvsMMuY/AAAAQNUPAkA6KoZquVvh
      PwAAAEDJYQJAmxn+EnpM3j8AAAAAG9sCQMFz6Dg4aN4/AAAAINUpA0B34OFK3czgPwAAAACBUgNA
      Xm0RkL3I4j8AAAAAX6MDQKMXnvH/4OQ/AAAAwCfzA0CEj7+kpB7oPwAAAGCdQwRAA6hQ1DiK6z8A
      AADAopQEQAkLso4+fO4/AAAAgIy9BED5hS0sDB7xPwAAAKC1DQVAzUijus3b8j8AAACgA4gFQAF+
      u+eTg/U/AAAA4PLYBUCvFQ1Jzq/3PwAAAGD2KAZA8i/v7RLn+D8AAAAgPVAGQCZwlAiRNfc/AAAA
      gFihBkDzfPCZWt31PwAAAGCLHQdAXfZnkCef9D8AAACghW8HQFGnMGkWIvQ/AAAA4JCYB0BWpuCr
      7mv0PwAAAAAB6AdA+puLICsB9T8AAAAgozkIQCrPq9jvi/Y/AAAAAG2LCEARYHgLSfD3PwAAAEC4
      tAhA6eKMZi66+D8AAAAA5wUJQFo6A7TJhPY/AAAAgBlXCUBAYBxWufX0PwAAAMAU0AlA5IGapiaz
      8T8AAADgtCAKQOS92/Gpuu4/AAAAQJ2ZCkBeXz2nzgPoPwAAAMCX6QpAXJkkYyhA5D8AAADgoDoL
      QE59G/eqIeE/AAAA4ARjC0AwskeSRc/ePwAAAOCNswtAuz13Ea193D8AAAAAGgUMQC0Cn8rl4tw/
      AAAAQCpXDEAKYdAEOejePwAAAADugAxAmjtouAUR4T8AAABAdtAMQOWUv1LUmOM/AAAAoKFjDkD9
      +tnYEATvPwAAAKBx3g5ADQm1yyiO9D8AAADA9zAPQCOfGpCyMfg/AAAAQB2BD0CQbte7qHH3PwAA
      AGADqQ9A6fzr1TyH9T8AAABgBPgPQLxvv5WeLPQ/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [66, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Sbu/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [76, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAABuvXQWB5zzPwAAAAAkULk/9fgW/e958z8AAAAAEtbGP+SrDMI+1/Q/AAAAAKzqyz+J
      fTZsNs72PwAAAABFKdQ/DDxXZv6X9z8AAAAAiGXVP5/naG/0/vM/AAAAAJDA2z8aM0Bl4ObsPwAA
      AAA4Tt4/sXm0lRXa5j8AAACA9VXiP8uk7um7TOI/AAAAgLA35D/TpDQ1CCPgPwAAAIBJf+U/khzQ
      WbaB3z8AAACApsHmP3A+lfUOHuE/AAAAAENj5z/KHya83WHiPwAAAADZpeg/I7h5L52o5D8AAAAA
      iOfpPy02RXxj3uc/AAAAgOhz7D9V9DgnKufsPwAAAIB8/O4/Kg9ks7bZ8j8AAABAvB/wP4yjW3QT
      3fU/AAAAQIZk8T+UzSZYed74PwAAAAACVvI/EhAeGzq/9j8AAACAZezzP5lrh7uoavU/AAAAgMDg
      9D/ba9mxMhv2PwAAAABAePY/GC1EVPsh+T8AAAAA7rn3P35sWxVYvPU/AAAAQGoM+D/xJXs9rcLy
      PwAAAMC1TPk/s34M76P+7T8AAABA7vD5P22CVsLu5Oc/AAAAQIzl+j8e3KCRLbniPwAAAABy2Ps/
      7aqq/FtM3j8AAACAy2v9P6HnYiYJFN4/AAAAwFgD/z+iVoxFgdXiPwAAAKAAIwBAiBxxWLqt6T8A
      AAAAfJ4AQMcVKn1oW/A/AAAAQMrvAEAPj7m4GyHzPwAAAGBKaAFA8NcrdeFK9j8AAADAPboBQEFw
      sHFGoPg/AAAAgCsLAkDZOqeTl8T3PwAAAMAWNAJAWB84gSEi9j8AAABgLlsCQOy8UvEV8fQ/AAAA
      IA3SAkCrax4MJOrzPwAAACAF+gJAMaIqv1/m8j8AAABANEwDQAsAEKOZT/I/AAAA4HOcA0CQtczt
      alPyPwAAAIBuxANAYaWuWlBS8z8AAABAsBUEQFmfQSJMcvQ/AAAAQNZlBEAGRyGSwP/1PwAAAADk
      MgVAERNNLvcU+D8AAADguFoFQAc+y92J9PQ/AAAAQGOqBUCJZLepWsjxPwAAAMCASQZAoEXz8IrO
      7D8AAADA9poGQB2882HD7eY/AAAAoCjCBkCvI4XTYBrjPwAAAEAeEwdAmwmEJtQh4D8AAAAAMd4H
      QDnVtgH1ytk/AAAAwC5YCED6fAkZRFHbPwAAAGDSHwlAxBp6jf234j8AAADg7sEJQHNB7X03R+k/
      AAAAwIHpCUDRZhTXo8jvPwAAAGDTPApAzFTEMzot8j8AAADAmY0KQKtdI4NREvQ/AAAAYN+1CkDB
      A1Q1Hv/1PwAAAOCPBgtAja5KIsLd9z8AAADgBFgLQD993MIrqfg/AAAAQFh/C0CHqdrU8PP2PwAA
      AIAF0AtAFgxEWtbb9T8AAAAAYXIMQLKvcKTljfQ/AAAAYFCbDEBpVDr4QmL0PwAAAKDUPg1AW7Sh
      rCox9T8AAACgIWcNQE+Tu8iofPY/AAAAYAa4DUCouh+grlL4PwAAAACECA5AroVPdha59z8AAABg
      rzAOQK8Mu3Moc/U/AAAAAG2ADkBJ4T6n5Q/zPwAAAKDj0Q5Az3TEoFGz8D8AAADAvUsPQKJpIdnw
      tOo/AAAAoEGcD0A4uX8uJzPmPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [76, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAQJD+UEkJiO8z0P8cemc6tsNA/tba0iAsZtL8AAAAAhFi5P6iMpUBLLfU/9RntAcxE0D88
      2+Qnsgq0vwAAAACi2MY/N0haZDDv9T9xJBSX+2HNPyFIptc0v7G/AAAAAELxyz9oP+sROkT2PwFF
      FTI26cw/aCVJXxlLqb8AAAAAFy3UPzDRecTJcfY/Wht+gjLwyz92a+hK2mSyvwAAAAAGZ9U/5dgE
      pEVS9j9iarAJGmrKP7C1ceJCFLS/AAAAAGXC2z+qN1DtAij3P51eoNvKJsg/EguEjr4jur8AAAAA
      TFDeP4tjAS+Vt/c/C5S+I4bOxz+Cq/Xqj1DBvwAAAICnVuI/oQ5NegNQ9z8GCdhuqlzEPyPJ81FG
      5Mm/AAAAAFg45D++y6ASakL3PzekuDIFIsE/Z/lyt+7Nzb8AAACAI4DlP9T3ZGYgPfc/SfknXyhp
      vz8X2egBTkjQvwAAAIB8wuY/gohXTVTi9j+5+Qxn2T6/P7dYfPQJHdC/AAAAALBk5z/zRJfrPUP3
      PyHwtDyGJsE/TMspHRqJzr8AAAAAD6foPwp0EZ2Ogfc/Z70Jb1hAwT+cziunvuLMvwAAAABL6Ok/
      61dSRQMh9z9MWI1O/mbAP4bV4lOTQ8q/AAAAAHV07D+dn3u297b2P27y/GJgz8E/bmonYjosxr8A
      AAAA9vzuPydEbgetr/Y/1+d0PUWrwj9KifaKeODCvwAAAAAKIPA/8a6Tvz6O9j+3d+u54rLEP/4U
      rWAiHsC/AAAAADoT8T+GhCBz8F72P7WjSTGEOsc/WgMbcpL5u78AAADAqVbyPw1ZZxw9kvU/wIIP
      6Khpyz80hjLxvtK4vwAAAEC37PM/w7mfmgsO9T+ZsyE1NFXNPyEoVlu0Wra/AAAAgFjh9D9Ck8yG
      Ok71P2jpdapLRc8/EmfEjtBgsr8AAABA2Xj2P+9ht1srKvY/H51JLlVTzj9dFwAncXyvvwAAAABC
      uvc/fp0EoIxn9j/TsZmE47HLP3s9SQoLZ7a/AAAAgMcM+D+Zbd8e+S/2Pz1VKBcURMk/2E2QrOEH
      vb8AAACA8kz5P8Xm8xfFFPY/Z3c+VfpRxj9SP3HVuRXBvwAAAEA3n/k/YmOFHupi9j+7bODsecjF
      P0tVy37Pv8O/AAAAADDm+j+Ttl//knj2P0yeHUgQ88Q/K193ENaJyL8AAACAvtj7P/Zg/VmCXvY/
      Vk1jhKlTwz/g6tT2ElfNvwAAAIANbP0/W3Ghk/9S9j+U0LVqtGrBPxV42I3k6M6/AAAAgBgF/z8q
      D89irIT2PySeUR95q8A/Tf4ip2J+zb8AAAAAlSMAQD9GAaoCQfY/kvk62Qsuvz9VdvOigjrJvwAA
      AMC2ngBAUjkAIJq79j/ezlTdloa/P/Bux46lD8W/AAAAoPLvAEDvoHkksvj2P48ydYmMs8A/XqSW
      P1dNwb8AAABAiWgBQHCKk94axfY/yo4gUFRhwT8GAehz1zO8vwAAACCnugFAK7JkegQr9j+Ajd4i
      ghnBP7DVHqjsHLm/AAAAgE0LAkAIrMT8qfn1P7HV8HFJJMQ/ti2Znysps78AAAAgPzQCQA9m3zw8
      8PU/WvqIgF+mxj8N54s5AI+xvwAAAOB6WwJAUK0W5ffe9T8+UDBMui/IP/F4fKliZKq/AAAAoC3S
      AkC4jsKsf831P3pvyqMpBck/AyXHcOOIob8AAABgK/oCQHPnNmH2SfU/I+yMfVnVyT8zkCto2k+h
      vwAAAIBvTANAwyLeIo339D+BB51EH/bLP09bjSMAqq6/AAAAgJacA0A4TGHSGfP1Pz3W9BrTFMo/
      lx1WXy27rb8AAAAAmMQDQH0hbzdJEPY/SOKQbG8QyT+LTGzv4ZiovwAAAGAAFgRAyhQGZwbK9T/m
      yzRLVxnJP58oSHV+Da6/AAAA4PhlBEC3fIEibRT2P/DtbKNQ7cg/h4PrR3+Mq78AAACAAzMFQEic
      azAvKvc/WM6S92TCyD/uO4TZ1vKjvwAAACD0WgVARSYY/2Ic9z+PpT/TUpTGP+e7uKnv/bG/AAAA
      wJmqBUD5eX4yIJT2P7nPjCncTMQ/gVuOIpJPuL8AAABguUkGQBr20TORZPY/8pC/+B58wT9iAnYM
      kT/AvwAAAMA3mwZAvfOxWilS9j96DkOPrUjAP3gKwGyuOcO/AAAAoEjCBkBWZIUdkfD2P5WakWKb
      tb4/eDijSDX2x78AAABAPhMHQPA1Qr/y4PY/WLTk2sRVwD8AbyFcRnPKvwAAAEBg3gdAZb/W7TTS
      9j8XhslvxD2/P1jvP9mo2sy/AAAAoGpYCEDMfp2WTM32P+PlKAOOir0/YpDRkWRpzb8AAADgHSAJ
      QBT8vJFOl/c/eGaDn0PMvz+JPxCB4MDMvwAAAOBCwglA9Gd/biqo9j//qu5u8rvAP6pUWYVSpsi/
      AAAAoMrpCUBc+gQgQtP2P0Yw6lirvcA/mSz0nKw4x78AAABgEz0KQBq1ki886fY/MiAFHs++wT+c
      0lYZt8nFvwAAAIAJjgpAlConbRTU9j/jJQBLP5HBP9ShWrjRlsK/AAAAoBq2CkAsXjoNuO/2P3nU
      1p3Yu8M/ndNNdlfVvb8AAABg0gYLQB2T0F2ZsfY/hGfVLbjIxD+Xw6lTQzm4vwAAAKA1WAtAe7fD
      1tlg9j8KpjpDhj/FPw6YmQwgLri/AAAAIIJ/C0Di5k301Qv2P9fX2SOhCsc/RpiDxBLytr8AAABg
      RNALQJCM9d1o5PU/So8WIZo/yT/DWC1ckZCyvwAAAGCJcgxAUGcQIVuB9T+ZxuWJfwjIP/dhvukl
      ybG/AAAAYHmbDECdzxIdL2b1P2o7BC4nm8g/IkX2fbJfrr8AAABgJT8NQGza3thr/vQ/LqB4yJMS
      yj/f0jZaPe+wvwAAAECyZw1A6K2Jb71G9T/CJT29cKfJP6TyGYsekbO/AAAAwC64DUDLSyUV3M71
      P8SRwnyFyMc/HABzGibesr8AAAAgpggOQOqZwA9fa/Y/t8sdchcaxz8lGa+2gw+wvwAAAEDXMA5A
      +HkM1jid9j9O2J5W1j3HP7XfUPVvPrK/AAAAoKSADkCy02n6gH72P81eNYBjVMc/AzTel5NCtr8A
      AADABNIOQCgIQWvEJvY/dssZ8Y9FxT9VcoshJEO7vwAAAGDsSw9AQH/v2jVM9j9AC/ptym/CPz/K
      E1yUccC/AAAAYH2cD0DeLYx7tqP2Px41IZtfEME/bb5mqH5wwr8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [94, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAADBc5BXR83gPwAAAABYE6Q/cfdEWLQq2T8AAAAALDi0P261PHm2utQ/AAAAAOhkuT+4
      GgQq8HDSPwAAAAAExcE/4sgXCP2U0T8AAAAALsjGP3NMXs53VNM/AAAAAKw6yT/mHj/htPHXPwAA
      AACQMs4/RgXbni6o3j8AAAAAI2jVP84cQxVuiuU/AAAAAJ311z+E6OZWDILqPwAAAABWLtk/dHUQ
      XTa27j8AAAAAdLTbP2kJILoJgvE/AAAAAHv43D+sXG8Y+VPzPwAAAAD7W+A/rRG8Rh0+9T8AAACA
      jP/gP+AAax6tr/Y/AAAAgLc/4j8n5Ox6+4P4PwAAAIB1gOM/lXkyKJ5G+D8AAAAAXiDkP58r1gJE
      1vY/AAAAAL9k5T8orImfoMT1PwAAAIAVqOY/mfjytIOE9T8AAACAn0jnP1tlGw9bFPU/AAAAANiP
      6D980igWr7T0PwAAAABk2ek/+fVcMKoS9T8AAACAfXbqP36X/L9OOfY/AAAAAP656z+CEn3bTWv3
      PwAAAICq/Ow/gvf6I6zJ+D8AAACArz3uP1uCQsGshPc/AAAAgMvj7j+c4l2UOUb1PwAAAICtE/A/
      Yrl/4hku8z8AAADAvrPwPwUMWvnZX/E/AAAAgDgI8T9r2w5H+E7uPwAAAIDAp/E/DwjEyOWH6j8A
      AAAA/kXyP1ulairwxuY/AAAAwOUy8z/+sPuJjofiPwAAAAC/1fM/vsNc9Jbn3j8AAAAAYnb0P8BU
      EvAdENk/AAAAwFHI9D9+eWc3FozUPwAAAABua/U/iC4nk/1l0T8AAABAJAv2P4j/AP/urtE/AAAA
      gDRc9j9sT9ngOZnWPwAAAACxQfg/B5iX9El/4D8AAAAA5pP4Pw0pr8r6IuY/AAAAwM8x+T8LNI7e
      w5DqPwAAAEC1Jfo/ahqYYfKc8D8AAABAtsn6PyxeIQu5+/I/AAAAgBy4+z/XwktcliX2PwAAAIAo
      WPw/wX7xh8yu+D8AAAAATv38PyMkTGXTZfc/AAAAQApQ/T8ylS491Mf1PwAAAIBE7/0/A2oqQbaS
      9D8AAADA2ZD+P5kimYAJf/M/AAAAQLjf/j824ERRJzfzPwAAAIDkgP8/3wdS01Ex8z8AAADABRIA
      QJ30Mhf+VfM/AAAAwJeJAEBmYc7duLz1PwAAAIAQ2wBAxNpmrQKx9z8AAABAbgMBQKAaJXjAgPg/
      AAAAAOVTAUBoC22iG2f2PwAAAGBBpQFAbFwx0n8Z9D8AAAAAXc0BQJJPzqqiDfI/AAAAQOpvAkDi
      qS0Yy1rtPwAAAMBWlwJA5vuu1XKO6D8AAACAHjgDQNmfiym9BuQ/AAAAYMmHA0CnM73v36fgPwAA
      ACCRAQRAzKmf9uTR2j8AAADgoiwEQGKF4oPj89g/AAAAAEWlBEAVynrXbjHaPwAAAKBizgRAyrAJ
      cndu3j8AAABgBHEFQF8jCrGv+uE/AAAAYPqXBUC1p1DZmVfmPwAAACBJAgdAufalEygN8T8AAAAg
      4UYIQJ0+MCdTk/g/AAAAQJi/CEBSeONmxsn1PwAAAMCPEQlAYJWgCVol9D8AAACgJLIJQKznVUs5
      hvQ/AAAAwLTaCUDuxpXb17b1PwAAAACDKwpAnHWkEKoV9z8AAABgJ3wKQNoStyzIzvg/AAAAYMGk
      CkBbvJQsoFf3PwAAAIDDRAtAmvNHnq0O9D8AAABgepQLQCCBx2EN5fA/AAAAQEYODEDLUma50W/q
      PwAAAIAoXwxAIv3YlZgh5D8AAABg6tkMQOBrcsLF+dw/AAAAgHR8DUAZbmltfeTWPwAAAKDPpA1A
      Qf8C3BUk1T8AAABg9PUNQCI/7wZsntI/AAAAICsfDkCW7zMUu7HUPwAAAEBebw5AdXj9M9xt2T8A
      AAAgx8EOQDSXd1dfh94/AAAAIEzqDkDyVmHYSiLiPwAAAIBjOg9At1pwWXF85T8AAADAkYsPQAv2
      apq9lek/AAAA4JWyD0DN/bR9pQnuPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [94, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
rotation_variables: [p, rpy]
target_frames: [/left_elbow_1, /left_shoulder_1]
