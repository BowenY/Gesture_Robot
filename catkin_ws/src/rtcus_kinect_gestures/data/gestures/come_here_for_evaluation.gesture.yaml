!!python/object:LbD.GestureEntry.GestureEntry
_GestureEntry__meta_demonstration_names: [come_here_4_2011-12-19-12-09-05_subdemochunk_16,
  come_here_3_2011-11-06-18-26-59_subdemochunk_31, come_here_1_2011-11-06-18-24-31_subdemochunk_5,
  come_here_4_2011-12-19-12-09-05_subdemochunk_26, ven_aqui_a_primera_planta_2011-09-30-13-24-23_subdemochunk_27,
  come_here_4_2011-12-19-12-09-05_subdemochunk_12, come_here_1_2011-11-06-18-24-31_subdemochunk_8,
  come_here_1_2011-11-06-18-24-31_subdemochunk_2, come_here_4_2011-12-19-12-09-05_subdemochunk_22,
  come_here_3_2011-11-06-18-26-59_subdemochunk_32, come_here_1_2011-11-06-18-24-31_subdemochunk_6,
  come_here_1_2011-11-06-18-24-31_subdemochunk_1, come_here_4_2011-12-19-12-09-05_subdemochunk_24,
  come_here_3_2011-11-06-18-26-59_subdemochunk_34, come_here_4_2011-12-19-12-09-05_subdemochunk_14,
  come_here_4_2011-12-19-12-09-05_subdemochunk_19, come_here_1_2011-11-06-18-24-31_subdemochunk_3,
  come_here_3_2011-11-06-18-26-59_subdemochunk_38, come_here_4_2011-12-19-12-09-05_subdemochunk_18,
  come_here_4_2011-12-19-12-09-05_subdemochunk_23, come_here_4_2011-12-19-12-09-05_subdemochunk_13]
_GestureEntry__meta_demonstrations_count: 21
_GestureEntry__meta_initial_param_frames:
- {fixed: /left_shoulder_1, position: '', rotation: p, target: /left_elbow_1}
- {fixed: /neck_1, position: '', rotation: rpy, target: /left_shoulder_1}
_GestureEntry__meta_max_start_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- "\0\0\0\0\0(2?"
_GestureEntry__meta_min_count_per_demo: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
  2, 2, 2, 2, 2, 2, 2]
_GestureEntry__meta_min_end_time_for_interpolation: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args: [f8, 0, 1]
  state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
- "\0\0\0\0Iq\x0F@"
_GestureEntry__meta_num_vars: 4
_GestureEntry__meta_sampling_frequency: 50
_GestureEntry__meta_temporal_info:
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwEvUD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAPhnrj8=
    sampling_count: 120
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwEvUD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQGD+D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAhnrj8=
    sampling_count: 121
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACAGj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQCv+D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYHjFD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKWBDkA=
    sampling_count: 7
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYHjFD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoJzFD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoFGBDkA=
    sampling_count: 7
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADYMD8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4BXFD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAIjJD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOw2tD8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAIjJD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALLJD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFw0tD8=
    sampling_count: 124
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4IPJD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4OCdD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANCAvj8=
    sampling_count: 108
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4OCdD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQCieD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJCAvj8=
    sampling_count: 111
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0(2?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJedD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgNS4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJyz5j8=
    sampling_count: 98
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgNS4D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoC65D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJyy5j8=
    sampling_count: 97
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACIKz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgMC4D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgDTHD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALCltD8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgDTHD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIHnHD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANCltD8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoCLHD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwMPwD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALAIvj8=
    sampling_count: 109
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwMPwD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoAvxD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABgIvj8=
    sampling_count: 109
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACgHT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYNDwD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYGX4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALhvuT8=
    sampling_count: 120
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYGX4D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIIH4D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAGhuuT8=
    sampling_count: 125
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACQFj8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFT4D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIBbVD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAK+wT8=
    sampling_count: 89
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIBbVD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIJnVD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAq+wT8=
    sampling_count: 90
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAACAJT8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIEPVD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwL39D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFAMuT8=
    sampling_count: 114
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwL39D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQOn9D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALQIuT8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`\x12?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgMT9D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgG2SD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAIxKvj8=
    sampling_count: 100
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgG2SD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABqTD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALxDvj8=
    sampling_count: 102
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAAD4Jz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAILqSD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgOq/D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFwstD8=
    sampling_count: 120
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgOq/D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4AjAD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHwttD8=
    sampling_count: 131
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADoKD8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQKW/D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIO6D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJRfvj8=
    sampling_count: 99
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgIO6D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!python/str "\0\0\0@\u02BA\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANxavj8=
    sampling_count: 101
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0`%?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwHS6D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Fm0D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAHh2uT8=
    sampling_count: 106
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Fm0D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQHi0D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKRvvj8=
    sampling_count: 111
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\x10\x17?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIEq0D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIMf2D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJQrtD8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAIMf2D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABL3D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJAwtD8=
    sampling_count: 116
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0x%?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAILz2D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4GPeD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALgLuT8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4GPeD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoKneD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMwKuT8=
    sampling_count: 115
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0x%?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwFPeD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgJzpD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAIyGtD8=
    sampling_count: 121
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgJzpD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoMzpD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAABSKtD8=
    sampling_count: 122
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAADQFz8=
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAJ3pD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Ln6D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAMxktD8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Ln6D0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQAH7D0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKxktD8=
    sampling_count: 121
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0X%?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAA4Kv6D0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQP7vD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKBXtD8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQP7vD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAYBXID0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAALBXtD8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\08'?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgLjHD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0Iq\x0F@"
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAANwSyT8=
    sampling_count: 101
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0Iq\x0F@"
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQJBxD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAOwSyT8=
    sampling_count: 101
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\000?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAwA5xD0A=
- - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoCvcD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAFgitD8=
    sampling_count: 118
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\0\0\0\0"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAoCvcD0A=
  - end_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAQEbcD0A=
    max_sampling_distance: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAAKwitD8=
    sampling_count: 122
    sampling_period: 0.02
    start_time: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - "\0\0\0\0\00'?"
    time_duration: !!python/object/apply:numpy.core.multiarray.scalar
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - !!binary |
      AAAAgOnbD0A=
_GestureEntry__meta_time_duration: 4.0
_GestureEntry__name: come_here
_GestureEntry__state: fully_defined
_GestureEntry__use_time_variable: false
fixed_frames: [/left_shoulder_1, /neck_1]
position_variables: ['', '']
raw_data:
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - &id001 !!python/name:numpy.ndarray ''
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [120, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [121, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [7, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAAjYx7j8J/nPwAAAAClgQ5AdrrpuTnU9z8AAABAUNIOQOCb618tTPQ/AAAAgMT6DkBE
      Rb7jnVzyPwAAAGAVTA9A8Gx6iJ/08j8AAABgE50PQFjxzJSx9/Q/AAAAYHjFD0C0xGKKMNz3Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [7, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAADYMD8dLVVktlXqP7/qpN8dC+A/bFkOpCaW3L8AAABg2IEOQGQr2mxlbO0/GeKmKsOU8D8H
      /fHxR8HevwAAAICJqg5ALBMnqNt/7z/8LeR6A93wP50+Z7aCxtm/AAAA4OL6DkBkfe/0YEvwPyEi
      4BZs5/A/YhHEX3Ye1r8AAAAAb0wPQDUx2bqHZvA/Y41Wqczj8D9lAgEAjLbVvwAAACAvnQ9A7ozW
      DVu+7z8cpAab28zwP/Ax7g+sude/AAAAoJzFD0DCQv4iWYnuPzrcDGEDsvA/PEohNdTS2b8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [124, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [108, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      +D8AAADg4J0PQPBf+wcnbvg/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [111, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      9L8VORb6tozIP0bxUEuo/tI/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [98, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      oA9oD0BVJ2LL6vX0PwAAAIDUuA9A7QUmkwO09z8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [97, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      D0B4fOXwAEr0P2kdwFo8Tt0/6cxXw09U1D8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAACjzVsxF2X2PwAAAAAIvKM/FN3LEhA18z8AAAAAQOKzP/WEokWnGfE/AAAAAIzIuD+L
      0OwL1lbwPwAAAADqfcE/KhVoGo1Y8D8AAAAAfITGP93UdNnHT/E/AAAAAAr3yD9N0bDXcFbzPwAA
      AACpTdA/HMqUySyY9j8AAAAA0JrRPyVcONytAvg/AAAAANnp0j+d3rylgIn0PwAAAADkZ9U/MaUO
      Y1V+8T8AAAAA9N/XP4W21AN7ne4/AAAAAPEr2T8a6EMidgDsPwAAAADspts/3FSPu5p96z8AAAAA
      8iTeP0QRFY+KF+0/AAAAAG1W4D8YOKl2I/rvPwAAAAAHl+E/90kRH81E8j8AAAAA8jTiP88J1a+R
      //Q/AAAAAGN84z9UzAzOt633PwAAAAA3xOQ/Qwg93sLQ+D8AAACAWGPlP9dKYiz/q/c/AAAAgNyp
      5j++TACSgM72PwAAAACC8ec/UnZoS/aW9j8AAAAAoZLoPzOVhWKqOPc/AAAAACTU6T/Ckys662L4
      PwAAAAAtFes/MY9d4Mr89z8AAACAALXrP8l2oUDV6/U/AAAAgLZJ7j86SeqH5E7zPwAAAABA7O4/
      btT491iq8T8AAAAAsBfwPw0Ue3J0OfE/AAAAwKq68D/6apFydq/xPwAAAIDZDPE/RmkvNZjW8j8A
      AABA067xP/1F59N1cfQ/AAAAACtV8j9e6Kl0hFr2PwAAAIAW9vI/rHFwmgpl+D8AAAAALEjzP53e
      dUiuxvc/AAAAAF6Z8z9JtlFGuv/1PwAAAMC0i/Q/3IKrRzhx9D8AAAAAcd70P98R44X94PI/AAAA
      QEMx9T8e8QANq+PxPwAAAEBb1fU/THJXduyH8T8AAABAV3j2PxpWVI+p5vE/AAAAQAIc9z+/Rerx
      uOTyPwAAAEAMbfc/GQpzOFN79D8AAAAABl74P6c6DZLkl/Y/AAAAAJOw+D/4wqus5wb5PwAAAMAM
      VPk/GgTQ9cx69j8AAABA1qL5P11HyOvQNfQ/AAAAQD1E+j+ZR8daMmzyPwAAAIBwk/o/NP1jl/Gm
      8T8AAADAJoH7Pxa9b/b/qvE/AAAAgLDU+z/AKEH3X4nyPwAAAICYdvw/p7YCXCrK8z8AAABAfcX8
      P5W70hUnYvU/AAAAQPlm/T8fx1CnAkv3PwAAAMB5Bv4/SPGPR2S5+D8AAADAf1f+P32+miyoSvY/
      AAAAQFT9/j9fAuTYgBn0PwAAAMCgof8/z+QYgTHo8T8AAACA0fP/P0FXVOvwSvA/AAAAQNRLAEBw
      SU17dN7uPwAAAGClmwBAjNpZKukX7z8AAACg4O0AQNWvCM2c1+8/AAAAYNYWAUDZnwvOCRrxPwAA
      AIDLZwFAurFYkmb98j8AAACAOAwCQJNg6Fupsvc/AAAAwNA1AkCEgpBhw4v2PwAAAACshwJAJGt8
      2SdI8z8AAADAirACQAwwRt0qZvE/AAAAoD4CA0DJXU1K9p7wPwAAACDjUQNAQEP5f5YM8T8AAAAg
      5HkDQHGvjjOplvI/AAAAIHPJA0A/hCjCJsj0PwAAAMCBGwRAG05nUF2L9z8AAAAAyUIEQDXCTfJn
      hvc/AAAAIAaTBEBc/zTVLLr0PwAAAAD/4gRAKlTqWTwl8j8AAACgzQoFQDxAagqzj/A/AAAAgKRa
      BUDji5wd+0vwPwAAAGApqwVA3MKLJbtA8T8AAADAbfsFQPTUsdZwMfM/AAAAYMcjBkDESOBxfNb1
      PwAAAOBvmwZAk36PpH6i9z8AAADgC+wGQFRk2179HPQ/AAAAYEE+B0DXAlztpevxPwAAAEC4jQdA
      M95iI0Yp8T8AAAAgBbYHQJCSGSCK2vE/AAAAIDkHCEChUNnAN13zPwAAAKD3WAhAQc96y+Kg9T8A
      AABgnoAIQNEEkmiwZvg/AAAAQLnRCEC7H+gj2gD3PwAAACA8IQlAnuUwkqcw9D8AAACg13EJQENz
      oLsd1PE/AAAA4E+bCUCTSpUx9HXwPwAAAICa7AlAblZImluD8D8AAAAgXjsKQLbfKemUiPE/AAAA
      gJVnCkCALz/pEWXzPwAAAKDxtgpAzeupISg29j8AAADgvQcLQPZeJiw2l/g/AAAAoA+BC0BmyQ9R
      2v7zPwAAAEAQ0gtA5Ly6Cwqq8T8AAAAgrvwLQEbgDDuc1fA/AAAAALFMDECkuOk5IWvxPwAAAAD8
      ngxAq/IrCdgT8z8AAAAgKfAMQEyPoKOWePU/AAAAwCwYDUCHz+LSvUv4PwAAACBGaA1AgwHrYCi/
      9j8AAAAAxroNQLxbDHab8vM/AAAAgB4KDkCK20kFsSbxPwAAAKB1Ww5ANEcVNir56z8AAADAQNQO
      QBCojpTL7+s/AAAA4F79DkDh9sOxvJTuPwAAAGBSTg9AAsg1eYk58T8AAACAJXcPQMiY4KTQN/Q/
      AAAAgDTHD0CV9ssz88T3Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [109, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [109, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Ku0/ZDmGf+0t2r8=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [120, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [125, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      8j8TgmSVyyzMvw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [89, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [90, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [114, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      AAAAAAAAAAAfrA/m3+LuPwAAAABQKJQ/tIKEhV998j8AAAAAQCeuP/WJRMUS5vU/AAAAAAhmuT9o
      IQ596fj4PwAAAAAga74/t0a03nJy9T8AAAAAjlvEP52yprgEe/I/AAAAAGDtxj9T61wSpJDxPwAA
      AADKAMw/dHAG2JB98j8AAAAAAoPQP1iKuqIJsvQ/AAAAAMwN0z8oS5X9fwL4PwAAAABMVdQ/d3ec
      WvZB9j8AAAAAVObWP6P7kvW44fE/AAAAABZr2T8WgE1b79rsPwAAAABHrdo/AdAj+aat6D8AAAAA
      Fy/dP/VWcNJ9l+c/AAAAAKiv3z9KkO154N7oPwAAAAAreeA/HB2T+JU+7D8AAAAA4r3hPw1Ohv/O
      rvA/AAAAAG774j9K7yvoxOHzPwAAAICdnuM/6oZxxz509z8AAACAG+LkP0InL1SFHPc/AAAAAAco
      5j+1r1N4mmXzPwAAAACZyOY/PhNPgGKi8D8AAACApgnoP3sOi9bb9e8/AAAAAEdK6T9otKaVvFLx
      PwAAAAD96uk/7tFo59518z8AAACAVS7rP0bTKVtOhPY/AAAAAABy7D+qrmOS8Pn3PwAAAADoFu0/
      5Dqm6ViV8z8AAACAJmHuP6GHx53B4+4/AAAAgD6h7z9rD10vZHLoPwAAAMAccPA/JBwN2gjs5D8A
      AADAosDwP7IMIjET6OM/AAAAQNVh8T+5YC8rc1flPwAAAICgAPI/+dmrXYGP6D8AAAAAR1HyP0qe
      egpjIu0/AAAAAN718j/eKPKLFJvxPwAAAMB3lfM/DLaDyJof9T8AAABAZzf0P/2xTLJNvfg/AAAA
      ALDX9D/GD00qIUr2PwAAAECpKPU/9WyF1sQb9D8AAABASMn1PxXtXGSBgPM/AAAAADIZ9j/5wKfy
      nDz0PwAAAMCctvY/OIDV3QHs9T8AAACAiQf3P20W5soo+fg/AAAAwBmo9z9cecsSwJT1PwAAAMDv
      Svg/tqN0D0GT8T8AAABA/Oj4Py4F09URH+w/AAAAAKY4+T8TRO4qNYTnPwAAAEAo2vk/bgTqEWQs
      5j8AAADAORz7P7ORiMg4Euo/AAAAQA9u+z8C1d/MAprvPwAAAMB+D/w/mAMPVo3z8j8AAABAwrD8
      P+GlM1DEbPY/AAAAgGEB/T/6xWmC39P3PwAAAMDEn/0/8y08KPew8z8AAADAwu79P7mUUIFPEvE/
      AAAAwAni/j8pYKv8TDvxPwAAAICu0/8/gjlsAn0d9T8AAADAObIAQJShT4Mt8Pg/AAAAIN8CAUAv
      yDO4aALyPwAAAGC8KgFAq/zcsOWc7D8AAAAgFM0BQFZM644AIe0/AAAAoMxDAkAEzOSnXH/yPwAA
      AGB0kgJA5G1XcH0E9z8AAACAk+MCQHuFUr8Bz/Y/AAAA4EwMA0D/oGGMKfvxPwAAAKD4XANAVY6s
      jQuy7j8AAABgjq0DQBb/FJxILvA/AAAAYP/VA0DYPw8QfdTyPwAAAABKJwRAkCl2aaJY9j8AAAAA
      7k8EQKBYWlufgvc/AAAAoLDIBEDye08s+c3yPwAAAODv8ARA1Jz2RUVt7j8AAACAtUMFQMBJVa5X
      euo/AAAAgOVsBUDLi661blrpPwAAAODuvgVApletj8Oz6j8AAADAChAGQIa0PQdBKe4/AAAAgOhi
      BkAdJ9WrK9vxPwAAAAB/igZAoeSfPXgj9T8AAABArdsGQCfPBeWRvfg/AAAAYDgtB0AQ+M/dhe3z
      PwAAAIDzVAdApRBZikVK8D8AAABgMPgHQL5iTOoN/u8/AAAAwGUgCEAOftHeNmjxPwAAAEDJbwhA
      HrI4LwMZ9D8AAADgUcAIQO/9KEYR0Pc/AAAAgOHnCEBioiLEDQL3PwAAAIC7NwlA40wz6ieL9D8A
      AADA1IgJQGT/zzOCA/M/AAAAgESwCUAEIGko72fyPwAAAEBJUApAnh7Zjq1W8j8AAAAgj6AKQGQf
      /8WE8vM/AAAAIEnJCkDNlFQLhp/2PwAAAMCJGgtAOqyepsSI+D8AAAAA/kILQJRlUthwMPg/AAAA
      oPtrC0BLX1DgR0T0PwAAAIAmlAtA5fiZC7Js8D8AAADgouULQFwmih9N3Oo/AAAAgJMNDEBdjm0E
      /YLqPwAAAIBYNgxA2gs0LMdw6D8AAABgGrEMQFmX1Xq4d+o/AAAA4I//DEB/vKwSsrTvPwAAAADO
      KA1AUP6Bi6HG8z8AAAAgosoNQEJyCV2G3fg/AAAAoFjyDUANO03Gomf0PwAAAIDkbA5AlQsai4g0
      8T8AAACA6ZQOQEe4cgMVW/A/AAAAoBfkDkC2acoj8LzxPwAAAICDDA9A0eeN78T29D8AAADgVF0P
      QOAPZSbCs/g/AAAAQL+FD0DTVjNKqQr5PwAAAIC1rg9AnjpAGXgY9T8AAADAvf0PQKsKm4hjYvA/
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Mew/G/fAPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [100, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      OnrzPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [102, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Jg3zBm3qPwPWYJQPy+S/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [120, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [131, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [99, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [101, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [106, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [111, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      sz9hgwNQOSLyP94pCWg4ZvO/
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      AAAAIMf2D0CzKddd2Nf2Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [116, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      Ut06Q+nDPw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      AAAA4GPeD0By1RqrvG/yPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [115, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [121, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [122, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      zOkPQN/Opj/0V9I/LS1C+ByS6j+dJEGS9+Txvw==
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      xSZMc1TzPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [121, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      qog5Gk/oPw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      2EXc+eY/3jL9uVWD178=
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [101, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      VdnoPwAAAABJcQ9A/ZXcXu7n6T8=
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [101, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
- - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [118, 2]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      +bOydMP3Pw==
  - !!python/object/apply:numpy.core.multiarray._reconstruct
    args:
    - *id001
    - !!python/tuple [0]
    - b
    state: !!python/tuple
    - 1
    - !!python/tuple [122, 4]
    - !!python/object/apply:numpy.dtype
      args: [f8, 0, 1]
      state: !!python/tuple [3, <, null, null, null, -1, -1, 0]
    - false
    - !!binary |
      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
      RtwPQLdQiJJa4vc/lvcnVxr64D+qjVd3AkiiPw==
rotation_variables: [p, rpy]
target_frames: [/left_elbow_1, /left_shoulder_1]
